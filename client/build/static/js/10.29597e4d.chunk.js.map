{"version":3,"sources":["shared/components/ButtonCircularProgress.js","shared/components/HighlightedInformation.js","shared/components/VisibilityPasswordTextField.js","shared/components/PropsRoute.js","shared/components/NavigationDrawer.js","shared/functions/smoothScrollTop.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/Dashboard.js","logged_in/components/posts/timeLine.js","logged_in/components/posts/filecard.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","logged_in/components/subscription/SubscriptionTable.js","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/AccountView/Profile.js","logged_in/components/AccountView/ProfileDetails.js","logged_in/components/AccountView/index.js","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","shared/functions/currencyPrettyPrint.js","logged_in/components/navigation/Balance.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js"],"names":["withStyles","theme","circularProgress","color","palette","secondary","main","withTheme","props","size","classes","pl","display","thickness","className","backgroundColor","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","children","classNames","variant","VisibilityPasswordTextField","isVisible","onVisibilityChange","rest","type","InputProps","endAdornment","position","aria-label","onClick","onMouseDown","event","preventDefault","PropsRoute","component","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","bottomPush","bottom","textAlign","paddingBottom","open","onClose","anchor","menuItems","selectedItem","bottomMenuItems","console","log","useEffect","window","onresize","isWidthUp","style","paddingTop","justifyContent","disableGutters","map","element","link","key","name","to","button","selected","disableRipple","disableTouchRipple","icon","primary","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","paddingLeft","paddingRight","inputOptions","numberInput","numberInputInput","dBlock","listItemLeftPadding","AccordionDetails","paddintTop","pushMessageToSnackbar","useState","isSaveLoading","setIsSaveLoading","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","target","value","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","Accordion","AccordionSummary","expandIcon","Typography","List","disablePadding","index","ListItem","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","inputProps","step","Box","mr","Button","disabled","ButtonCircularProgress","tooltipTypo","whiteSpace","typography","caption","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","onFocus","onBlur","cursor","breakpoints","down","listItem","up","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","length","SettingsArea","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","stableSort","array","cmp","stabilizedThis","el","sort","a","b","desc","getSorting","ConfirmationDialog","loading","content","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","avatar","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","Table","aria-labelledby","rowCount","TableBody","slice","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","select","selectIcon","actions","labelRowsPerPage","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","ListItemIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","Dashboard","useStyles","makeStyles","timeLine","secondaryTail","DownloadHistory","downloadHistory","Timeline","curHistory","TimelineItem","TimelineOppositeContent","Date","time","toLocaleString","TimelineSeparator","download_success","TimelineDot","TimelineConnector","TimelineContent","elevation","ip","HtmlTooltip","maxWidth","pxToRem","root","minWidth","minHeight","bullet","margin","deleteButton","getContrastText","red","pos","connect","state_to_props","listFiles","openDownload","setOpenDownload","openDelete","setOpenDelete","openEdit","setOpenEdit","isLoading","setIsLoading","encryptKeyRef","useRef","despRef","setDownloadHistory","handleClose","download","record","current","downloadFiles","file","downloadResp","status","downloadUrl","URL","createObjectURL","Blob","href","setAttribute","appendChild","click","remove","message","handleDownloadHistory","getDownloadHistory","response","handeEdit","updateFile","updateResp","includes","detail","handeDelete","deleteFile","deleteResp","Card","CardContent","arrow","noWrap","justify","Math","round","Number","EPSILON","description","CardActions","fullWidth","ButtonGroup","undefined","scroll","aria-describedby","TextField","autoComplete","inputRef","multiline","defaultValue","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","onDelete","printImageGrid","files","p","sm","disableElevation","Divider","rowsPerPageOptions","files_count","helpPadding","fullWidthActions","pt","values","pb","pr","action","floatButtonWrapper","top","right","zIndex","inputRoot","uploadIcon","imgWrapper","img","borderTopLeftRadius","uploadText","emojiTextArea","borderTopRightRadius","Dropzone","deleteItem","onDrop","EmojiTextArea","encrpytKey","reEncrpytKey","DateTimePicker","uploadAt","onChangeUploadAt","isPasswordVisible","setIsPasswordVisible","setStatus","printFile","accept","fullHeight","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","placeholder","required","error","helperText","FormHelperTextProps","AddPost","ImageCropper","setFiles","setUploadAt","setLoading","acceptedFiles","isErrorMessage","curfile","preview","getTime","handleUpload","FormData","append","uploadfile","resp","Posts","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","blackBackground","contentWrapper","large","plan","setUserDetailsToStore","transactions","dense","isNameEdit","setNameEdit","user","username","setName","isPasswordEdit","setPasswordEdit","oldPassword","newPassword","userImageUrl","setUserImageUrl","uploadFile","useDropzone","getRootProps","getInputProps","isDragActive","getUserImage","imgResp","urlCreator","webkitURL","imageUrl","asyncprocess","addUserImage","updatePassword","changePassword","old_password","new_password","Badge","badgeContent","alt","userName","demo","edge","e","InputAdornment","userFetchType","UPDATE","license","totalSpace","usedSpace","licenseType","option","email","openAddBalanceDialog","background","dark","selectSubscription","marginTop","marginBottom","memo","posts","setPosts","statistics","selectDashboard","path","Subscription","exact","MessageListItem","hasErrorOccurred","setHasErrorOccurred","handleError","ListItemAvatar","onError","formatDistance","date","tabContainer","overflowY","maxHeight","popoverPaper","noShadow","boxShadow","messages","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","buttonRef","Popover","anchorOrigin","vertical","horizontal","transformOrigin","AppBar","styles","Drawer","currencyPrettyPrint","cents","currency","outlinedInput","balance","readOnly","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","iconListItem","colorbox","backgroudColor","left","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","justifyCenter","permanentDrawerListItem","emtStores","selectedTab","links","bottomLinks","isMobileOpen","setIsMobileOpen","setIsSideDrawerOpen","openMobileDrawer","closeMobileDrawer","signout","signOutRes","deleteAuthorizationCookies","desktop","mobile","Hidden","smUp","xsDown","flex","ref","node","NavigationDrawer","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","push","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","process","LazyLoadAddBalanceDialog","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setTransactions","setStatistics","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","i","randomPerson","persons","floor","random","closeAddBalanceDialog","onPaymentSuccess","fetchRandomTransactions","curProfit","curViews","curUnix","oneYearSeconds","timestamp","oneMonthSeconds","transactionTemplates","isSubscription","balanceChange","randomTransactionTemplate","transaction","paidUntil","reverse","j","shuffle","iterations","ConsecutiveSnackbarMessages"],"mappings":"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","file":"static/js/10.29597e4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  circularProgress: {\r\n    color: theme.palette.secondary.main\r\n  }\r\n});\r\n\r\nfunction ButtonCircularProgress(props) {\r\n  const { size, classes } = props;\r\n  return (\r\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\r\n      <CircularProgress\r\n        size={size ? size : 24}\r\n        thickness={size ? (size / 5) * 24 : 5}\r\n        className={classes.circularProgress}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtonCircularProgress.propTypes = {\r\n  size: PropTypes.number,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    backgroundColor: theme.palette.warning.light,\r\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\r\n    padding: theme.spacing(2),\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n});\r\n\r\nfunction HighlighedInformation(props) {\r\n  const { className, children, classes } = props;\r\n  return (\r\n    <div className={classNames(classes.main, className ? className : null)}>\r\n      <Typography variant=\"body2\">{children}</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\nHighlighedInformation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n    PropTypes.array\r\n  ]).isRequired,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\r\n","import React from \"react\";\r\nimport { TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nfunction VisibilityPasswordTextField(props) {\r\n  const { isVisible, onVisibilityChange, ...rest } = props;\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      type={isVisible ? \"text\" : \"password\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"Toggle password visibility\"\r\n              onClick={() => {\r\n                onVisibilityChange(!isVisible);\r\n              }}\r\n              onMouseDown={(event) => {\r\n                event.preventDefault();\r\n              }}\r\n            >\r\n              {isVisible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    ></TextField>\r\n  );\r\n}\r\n\r\nexport default VisibilityPasswordTextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest);\r\n  return React.createElement(component, finalProps);\r\n};\r\n\r\n/**\r\n * Wrapper around the Router component, which makes it pass the properties\r\n * to it's child.\r\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\r\n */\r\nconst PropsRoute = ({ component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\r\n  />\r\n);\r\n\r\nPropsRoute.propTypes = {\r\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\r\n};\r\n\r\nexport default PropsRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Drawer,\r\n  withStyles,\r\n  IconButton,\r\n  Typography,\r\n  withWidth,\r\n  isWidthUp,\r\n  Toolbar\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  closeIcon: {\r\n    marginRight: theme.spacing(0.5)\r\n  },\r\n  headSection: {\r\n    width: 200\r\n  },\r\n  blackList: {\r\n    backgroundColor: theme.palette.common.black,\r\n    height: \"100%\"\r\n  },\r\n  noDecoration: {\r\n    textDecoration: \"none !important\"\r\n  },\r\n  bottomPush: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    textAlign: \"center\",\r\n    paddingBottom: 10,\r\n}\r\n});\r\n\r\nfunction NavigationDrawer(props) {\r\n  const {\r\n    width,\r\n    open,\r\n    onClose,\r\n    anchor,\r\n    classes,\r\n    menuItems,\r\n    selectedItem,\r\n    theme,\r\n    bottomMenuItems\r\n  } = props;\r\nconsole.log(\"bottom menu  ==>\",bottomMenuItems);\r\n  useEffect(() => {\r\n    window.onresize = () => {\r\n      if (isWidthUp(\"sm\", width) && open) {\r\n        onClose();\r\n      }\r\n    };\r\n  }, [width, open, onClose]);\r\n\r\n  return (\r\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\r\n      <Toolbar className={classes.headSection}>\r\n        <ListItem\r\n          style={{\r\n            paddingTop: theme.spacing(0),\r\n            paddingBottom: theme.spacing(0),\r\n            height: \"100%\",\r\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\r\n          }}\r\n          disableGutters\r\n        >\r\n          <ListItemIcon className={classes.closeIcon}>\r\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\r\n              <CloseIcon color=\"primary\" />\r\n            </IconButton>\r\n          </ListItemIcon>\r\n        </ListItem>\r\n      </Toolbar>\r\n      <List className={classes.blackList}>\r\n        {menuItems.map(element => {\r\n          if (element.link) {\r\n            return (\r\n              <Link\r\n                key={element.name}\r\n                to={element.link}\r\n                className={classes.noDecoration}\r\n                onClick={onClose}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={selectedItem === element.name}\r\n                  /**\r\n                   * We disable ripple as it will make a weird animation\r\n                   * with primary and secondary color\r\n                   */\r\n                  disableRipple\r\n                  disableTouchRipple\r\n                >\r\n                  <ListItemIcon>{element.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                        {element.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            );\r\n          }\r\n          return (\r\n            <ListItem button key={element.name} onClick={element.onClick}>\r\n              <ListItemIcon>{element.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                    {element.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        </List>\r\n        { bottomMenuItems &&\r\n      <div className={classes.bottomPush}>\r\n      <List className={classes.blackList}>\r\n        {bottomMenuItems.map(element => {\r\n          if (element.link && false) {\r\n            console.log(\"link \",element)\r\n            return (\r\n              <Link\r\n                key={element.name}\r\n                to={element.link}\r\n                className={classes.noDecoration}\r\n                onClick={onClose}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  selected={selectedItem === element.name}\r\n                  /**\r\n                   * We disable ripple as it will make a weird animation\r\n                   * with primary and secondary color\r\n                   */\r\n                  disableRipple\r\n                  disableTouchRipple\r\n                >\r\n                  <ListItemIcon>{element.icon}</ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                        {element.name}\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n            );\r\n          }\r\n          return (\r\n            <ListItem button key={element.name} onClick={element.onClick}>\r\n              <ListItemIcon>{element.icon}</ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\r\n                    {element.name}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n</div>}\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigationDrawer.propTypes = {\r\n  anchor: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  selectedItem: PropTypes.string\r\n};\r\n\r\nexport default withWidth()(\r\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\r\n);\r\n","/**\r\n * When called scrolls smooth to the top of the page.\r\n * globLastC prevents shaky animations when scrolling to\r\n * bottom while topscrolling.\r\n */\r\nlet globLastC = Infinity;\r\n\r\nfunction smoothScrollTopRec() {\r\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n  if (c > 0 && globLastC > c) {\r\n    globLastC = c;\r\n    window.requestAnimationFrame(smoothScrollTopRec);\r\n    window.scrollTo(0, c - c / 8);\r\n  } else {\r\n    globLastC = Infinity;\r\n  }\r\n}\r\n\r\nfunction smoothScrollTop() {\r\n  /**\r\n   * Normally this gets called from componentDidMount()\r\n   * Not waiting a tiny fraction of time can lead\r\n   * to shaky behaviour\r\n   */\r\n  setTimeout(() => {\r\n    smoothScrollTopRec();\r\n  }, 10);\r\n}\r\n\r\nexport default smoothScrollTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\r\n  },\r\n  greyed: {\r\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\r\n  }\r\n});\r\n\r\nfunction Bordered(props) {\r\n  const {\r\n    classes,\r\n    theme,\r\n    disableVerticalPadding,\r\n    disableBorderRadius,\r\n    children,\r\n    variant\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\r\n      style={{\r\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\r\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBordered.propTypes = {\r\n  classes: PropTypes.object,\r\n  theme: PropTypes.object,\r\n  disableVerticalPadding: PropTypes.bool,\r\n  disableBorderRadius: PropTypes.bool,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.array\r\n  ]),\r\n  variant: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Bordered);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemSecondaryAction,\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  ListItemText,\r\n  OutlinedInput,\r\n  AccordionDetails,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  dBlock: { display: \"block\" },\r\n  listItemLeftPadding: {\r\n    paddingRight: theme.spacing(3),\r\n  },\r\n  AccordionDetails: {\r\n    paddintTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n});\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction Settings1(props) {\r\n  const { classes, pushMessageToSnackbar } = props;\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [option1, setOption1] = useState(\"None\");\r\n  const [option2, setOption2] = useState(\"None\");\r\n  const [option3, setOption3] = useState(\"None\");\r\n  const [option4, setOption4] = useState(\"None\");\r\n  const [option5, setOption5] = useState(\"2 Days\");\r\n  const [option6, setOption6] = useState(7500);\r\n\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      if (name === \"option6\") {\r\n        if (value > 7500 || value < 1000) {\r\n          return;\r\n        }\r\n      }\r\n      switch (name) {\r\n        case \"option1\": {\r\n          setOption1(value);\r\n          break;\r\n        }\r\n        case \"option2\": {\r\n          setOption2(value);\r\n          break;\r\n        }\r\n        case \"option3\": {\r\n          setOption3(value);\r\n          break;\r\n        }\r\n        case \"option4\": {\r\n          setOption4(value);\r\n          break;\r\n        }\r\n        case \"option5\": {\r\n          setOption5(value);\r\n          break;\r\n        }\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement.\");\r\n      }\r\n    },\r\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\r\n  );\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsSaveLoading(false);\r\n    setIsDefaultLoading(false);\r\n    setOption1(\"None\");\r\n    setOption2(\"None\");\r\n    setOption3(\"None\");\r\n    setOption4(\"None\");\r\n    setOption5(\"2 Days\");\r\n    setOption6(7500);\r\n  }, [\r\n    setIsSaveLoading,\r\n    setIsDefaultLoading,\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n  ]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\r\n\r\n  const inputs = [\r\n    {\r\n      state: option1,\r\n      label: \"Option 1\",\r\n      stateName: \"option1\",\r\n    },\r\n    {\r\n      state: option2,\r\n      label: \"Option 2\",\r\n      stateName: \"option2\",\r\n    },\r\n    {\r\n      state: option3,\r\n      label: \"Option 3\",\r\n      stateName: \"option3\",\r\n    },\r\n    {\r\n      state: option4,\r\n      label: \"Option 4\",\r\n      stateName: \"option4\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 1</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                className=\"listItemLeftPadding\"\r\n                disableGutters\r\n                divider\r\n                key={index}\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">{element.label}</Typography>\r\n                </ListItemText>\r\n                <FormControl variant=\"outlined\">\r\n                  <ListItemSecondaryAction\r\n                    className={classes.ListItemSecondaryAction}\r\n                  >\r\n                    <Select\r\n                      value={element.state}\r\n                      onChange={handleChange}\r\n                      input={\r\n                        <OutlinedInput\r\n                          name={element.stateName}\r\n                          labelWidth={0}\r\n                          className={classes.numberInput}\r\n                          classes={{ input: classes.numberInputInput }}\r\n                        />\r\n                      }\r\n                      MenuProps={{ disableScrollLock: true }}\r\n                    >\r\n                      {inputOptions.map((innerElement) => (\r\n                        <MenuItem value={innerElement} key={innerElement}>\r\n                          {innerElement}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </ListItemSecondaryAction>\r\n                </FormControl>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 5</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <Select\r\n                    value={option5}\r\n                    onChange={handleChange}\r\n                    input={\r\n                      <OutlinedInput\r\n                        name=\"option5\"\r\n                        labelWidth={0}\r\n                        className={classes.numberInput}\r\n                        classes={{ input: classes.numberInputInput }}\r\n                      />\r\n                    }\r\n                    MenuProps={{ disableScrollLock: true }}\r\n                  >\r\n                    {[\r\n                      \"Always\",\r\n                      \"6 Hours\",\r\n                      \"12 Hours\",\r\n                      \"1 Day\",\r\n                      \"2 Days\",\r\n                      \"3 Days\",\r\n                      \"1 Week\",\r\n                    ].map((element) => (\r\n                      <MenuItem value={element} key={element}>\r\n                        {element}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Option 6</Typography>\r\n              </ListItemText>\r\n              <FormControl variant=\"outlined\">\r\n                <ListItemSecondaryAction\r\n                  className={classes.ListItemSecondaryAction}\r\n                >\r\n                  <OutlinedInput\r\n                    labelWidth={0}\r\n                    name=\"option6\"\r\n                    value={option6}\r\n                    type=\"number\"\r\n                    onChange={handleChange}\r\n                    className={classes.numberInput}\r\n                    classes={{ input: classes.numberInputInput }}\r\n                    inputProps={{ step: 20 }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.AccordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n          onClick={onSubmit}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings1.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(Settings1));\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\r\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\r\n\r\nconst styles = theme => ({\r\n  tooltipTypo: {\r\n    whiteSpace: \"pre-line !important\",\r\n    ...theme.typography.caption,\r\n    color: theme.palette.common.white\r\n  },\r\n  tooltip: {\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"1.25rem\"\r\n  },\r\n  helpIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    \"@media (max-width: 350px)\": {\r\n      marginLeft: theme.spacing(0.5)\r\n    },\r\n    transition: theme.transitions.create([\"color\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut\r\n    })\r\n  }\r\n});\r\n\r\nfunction HelpIcon(props) {\r\n  const { classes, title } = props;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const onMouseOver = useCallback(() => {\r\n    setIsHovered(true);\r\n  }, []);\r\n\r\n  const onMouseLeave = useCallback(() => {\r\n    setIsHovered(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\r\n          {title}\r\n        </Typography>\r\n      }\r\n      className={classes.tooltip}\r\n      enterTouchDelay={300}\r\n    >\r\n      <HelpIconOutline\r\n        /**\r\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\r\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\r\n         * */\r\n        onMouseOver={onMouseOver}\r\n        onFocus={onMouseOver}\r\n        onBlur={onMouseLeave}\r\n        onMouseLeave={onMouseLeave}\r\n        color={isHovered ? \"primary\" : \"inherit\"}\r\n        className={classes.helpIcon}\r\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\r\n      />\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nHelpIcon.propTypes = {\r\n  classes: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  FormControl,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Checkbox,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\n\r\nconst styles = (theme) => ({\r\n  numberInput: {\r\n    width: 120,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 80,\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      width: 65,\r\n    },\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 14.5px\",\r\n    \"@media (max-width: 380px)\": {\r\n      padding: \"9px 8.5px\",\r\n    },\r\n    \"@media (max-width: 350px)\": {\r\n      padding: \"9px 6.5px\",\r\n    },\r\n  },\r\n  listItem: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    paddingLeft: 100,\r\n  },\r\n  AccordionDetails: {\r\n    paddingTop: theme.spacing(0),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n});\r\n\r\nfunction Settings2(props) {\r\n  const { pushMessageToSnackbar, classes } = props;\r\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\r\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\r\n  const [option1, setOption1] = useState(false);\r\n  const [option2, setOption2] = useState(false);\r\n  const [option3, setOption3] = useState(false);\r\n  const [option4, setOption4] = useState(false);\r\n  const [option5, setOption5] = useState(false);\r\n  const [option6, setOption6] = useState(\"Both\");\r\n  const [option7, setOption7] = useState(\"2 weeks\");\r\n\r\n  const resetState = useCallback(() => {\r\n    setIsDefaultLoading(false);\r\n    setIsSaveLoading(false);\r\n    setOption1(false);\r\n    setOption2(false);\r\n    setOption3(false);\r\n    setOption4(false);\r\n    setOption5(false);\r\n    setOption6(\"Both\");\r\n    setOption7(\"2 weeks\");\r\n  }, [\r\n    setOption1,\r\n    setOption2,\r\n    setOption3,\r\n    setOption4,\r\n    setOption5,\r\n    setOption6,\r\n    setOption7,\r\n  ]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    setIsSaveLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been saved\",\r\n      });\r\n      setIsSaveLoading(false);\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\r\n\r\n  const onSetDefault = useCallback(() => {\r\n    setIsDefaultLoading(true);\r\n    setTimeout(() => {\r\n      pushMessageToSnackbar({\r\n        text: \"Your settings have been reset to default\",\r\n      });\r\n      resetState();\r\n    }, 1500);\r\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\r\n\r\n  const handleInputChange = useCallback(\r\n    (event) => {\r\n      const { name, value } = event.target;\r\n      switch (name) {\r\n        case \"option6\": {\r\n          setOption6(value);\r\n          break;\r\n        }\r\n        case \"option7\": {\r\n          setOption7(value);\r\n          break;\r\n        }\r\n        default:\r\n          throw new Error(\"No branch selected in switch statement\");\r\n      }\r\n    },\r\n    [setOption6, setOption7]\r\n  );\r\n\r\n  const handleCheckboxChange = (name) => (event) => {\r\n    switch (name) {\r\n      case \"option1\":\r\n        setOption1(event.target.checked);\r\n        break;\r\n      case \"option2\":\r\n        setOption2(event.target.checked);\r\n        break;\r\n      case \"option3\":\r\n        setOption3(event.target.checked);\r\n        break;\r\n      case \"option4\":\r\n        setOption4(event.target.checked);\r\n        break;\r\n      case \"option5\":\r\n        setOption5(event.target.checked);\r\n        break;\r\n      default:\r\n        throw new Error(\"No branch selected in switch statement.\");\r\n    }\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      title: \"Option 1\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option1\"\r\n          color=\"primary\"\r\n          checked={option1}\r\n          onChange={handleCheckboxChange(\"option1\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 2\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option2\"\r\n          color=\"primary\"\r\n          checked={option2}\r\n          onChange={handleCheckboxChange(\"option2\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 3\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option3\"\r\n          color=\"primary\"\r\n          checked={option3}\r\n          onChange={handleCheckboxChange(\"option3\")}\r\n        />\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 4\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option4\"\r\n          color=\"primary\"\r\n          checked={option4}\r\n          onChange={handleCheckboxChange(\"option4\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 5\",\r\n      secondaryAction: (\r\n        <Checkbox\r\n          value=\"option5\"\r\n          color=\"primary\"\r\n          checked={option5}\r\n          onChange={handleCheckboxChange(\"option5\")}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: \"Option 6\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option6}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option6\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"Both\">Both</MenuItem>\r\n          <MenuItem value=\"Male+\">Male+</MenuItem>\r\n          <MenuItem value=\"Female+\">Female+</MenuItem>\r\n          <MenuItem value=\"Only male\">Only male</MenuItem>\r\n          <MenuItem value=\"Only female\">Only female</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n    {\r\n      title: \"Option 7\",\r\n      secondaryAction: (\r\n        <Select\r\n          value={option7}\r\n          input={\r\n            <OutlinedInput\r\n              onChange={handleInputChange}\r\n              labelWidth={0}\r\n              className={classes.numberInput}\r\n              classes={{ input: classes.numberInputInput }}\r\n              name=\"option7\"\r\n            />\r\n          }\r\n        >\r\n          <MenuItem value=\"None\">None</MenuItem>\r\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\r\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\r\n          <MenuItem value=\"1 day\">1 day</MenuItem>\r\n          <MenuItem value=\"3 days\">3 days</MenuItem>\r\n          <MenuItem value=\"1 week\">1 week</MenuItem>\r\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\r\n          <MenuItem value=\"1 month\">1 month</MenuItem>\r\n          <MenuItem value=\"3 months\">3 months</MenuItem>\r\n          <MenuItem value=\"6 months\">6 months</MenuItem>\r\n        </Select>\r\n      ),\r\n      helpText: \"You can add some further explanation here.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Settings 2</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.dBlock}>\r\n        <List disablePadding>\r\n          <Bordered disableVerticalPadding disableBorderRadius>\r\n            {inputs.map((element, index) => (\r\n              <ListItem\r\n                key={index}\r\n                divider={index !== inputs.length - 1}\r\n                className=\"listItemLeftPadding\"\r\n              >\r\n                <ListItemText>\r\n                  <Typography variant=\"body2\">\r\n                    {element.title}\r\n                    {element.helpText && <HelpIcon title={element.helpText} />}\r\n                  </Typography>\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                  <FormControl variant=\"outlined\">\r\n                    {element.secondaryAction}\r\n                  </FormControl>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            ))}\r\n          </Bordered>\r\n        </List>\r\n      </AccordionDetails>\r\n      <AccordionDetails className={classes.AccordionDetails}>\r\n        <Box mr={1}>\r\n          <Button\r\n            onClick={onSetDefault}\r\n            disabled={isSaveLoading || isDefaultLoading}\r\n          >\r\n            Default {isDefaultLoading && <ButtonCircularProgress />}\r\n          </Button>\r\n        </Box>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={onSubmit}\r\n          disabled={isSaveLoading || isDefaultLoading}\r\n        >\r\n          Save {isSaveLoading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nSettings2.propTypes = {\r\n  classes: PropTypes.object,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Settings2);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Settings1 from \"./Settings1\";\r\nimport Settings2 from \"./Settings2\";\r\n\r\nfunction SettingsArea(props) {\r\n  const { pushMessageToSnackbar } = props;\r\n  return (\r\n    <Fragment>\r\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSettingsArea.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func\r\n};\r\n\r\nexport default SettingsArea;\r\n","import React, { useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Typography,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  tableSortLabel: {\r\n    cursor: \"text\",\r\n    userSelect: \"auto\",\r\n    color: \"inherit !important\"\r\n  },\r\n  noIcon: {\r\n    \"& path\": {\r\n      display: \"none !important\"\r\n    }\r\n  },\r\n  paddingFix: {\r\n    paddingLeft: theme.spacing(3)\r\n  }\r\n});\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, rows, onRequestSort, classes } = props;\r\n\r\n  const createSortHandler = useCallback(\r\n    property => event => {\r\n      onRequestSort(event, property);\r\n    },\r\n    [onRequestSort]\r\n  );\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {rows.map((row, index) => (\r\n          <TableCell\r\n            key={index}\r\n            align={row.numeric ? \"right\" : \"inherit\"}\r\n            padding=\"default\"\r\n            sortDirection={orderBy === row.name ? order : false}\r\n            className={index === 0 ? classes.paddingFix : null}\r\n          >\r\n            {onRequestSort ? (\r\n              <Tooltip\r\n                title=\"Sort\"\r\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                enterDelay={300}\r\n              >\r\n                <TableSortLabel\r\n                  active={orderBy === row.id}\r\n                  direction={order}\r\n                  onClick={createSortHandler(row.id)}\r\n                >\r\n                  <Typography variant=\"body2\">{row.label}</Typography>\r\n                </TableSortLabel>\r\n              </Tooltip>\r\n            ) : (\r\n              <TableSortLabel\r\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\r\n              >\r\n                <Typography variant=\"body2\" className={classes.label}>\r\n                  {row.label}\r\n                </Typography>\r\n              </TableSortLabel>\r\n            )}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  onRequestSort: PropTypes.func,\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\r\n","function stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\nexport default stableSort;\r\n","function desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\nexport default getSorting;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\n\r\nfunction ConfirmationDialog(props) {\r\n  const { open, onClose, loading, title, content, onConfirm } = props;\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={onClose}\r\n      disableBackdropClick={loading}\r\n      disableEscapeKeyDown={loading}\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{content}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} disabled={loading}>\r\n          Close\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          onClick={onConfirm}\r\n          variant=\"contained\"\r\n          disabled={loading}\r\n        >\r\n          Yes {loading && <ButtonCircularProgress />}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n  onConfirm: PropTypes.func\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport PlayCirlceOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\r\nimport stableSort from \"../../../shared/functions/stableSort\";\r\nimport getSorting from \"../../../shared/functions/getSorting\";\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\n\r\nconst styles = (theme) => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  alignRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  blackIcon: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  avatar: {\r\n    width: 28,\r\n    height: 28,\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  iconButton: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  dBlock: {\r\n    display: \"block\",\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst rows = [\r\n  {\r\n    id: \"icon\",\r\n    numeric: true,\r\n    label: \"\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\r\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\r\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\r\n  {\r\n    id: \"number4\",\r\n    numeric: false,\r\n    label: \"Category 4\",\r\n  },\r\n  {\r\n    id: \"actions\",\r\n    numeric: false,\r\n    label: \"\",\r\n  },\r\n];\r\n\r\nconst rowsPerPage = 25;\r\n\r\nfunction CustomTable(props) {\r\n  const { pushMessageToSnackbar, classes, targets, setTargets } = props;\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\r\n    false\r\n  );\r\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\r\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\r\n\r\n  const handleRequestSort = useCallback(\r\n    (__, property) => {\r\n      const _orderBy = property;\r\n      let _order = \"desc\";\r\n      if (orderBy === property && order === \"desc\") {\r\n        _order = \"asc\";\r\n      }\r\n      setOrder(_order);\r\n      setOrderBy(_orderBy);\r\n    },\r\n    [setOrder, setOrderBy, order, orderBy]\r\n  );\r\n\r\n  const deleteTarget = useCallback(() => {\r\n    setIsDeleteTargetLoading(true);\r\n    setTimeout(() => {\r\n      setIsDeleteTargetDialogOpen(false);\r\n      setIsDeleteTargetLoading(false);\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex(\r\n        (element) => element.id === deleteTargetDialogRow.id\r\n      );\r\n      _targets.splice(index, 1);\r\n      setTargets(_targets);\r\n      pushMessageToSnackbar({\r\n        text: \"Your friend has been removed\",\r\n      });\r\n    }, 1500);\r\n  }, [\r\n    setIsDeleteTargetDialogOpen,\r\n    setIsDeleteTargetLoading,\r\n    pushMessageToSnackbar,\r\n    setTargets,\r\n    deleteTargetDialogRow,\r\n    targets,\r\n  ]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (_, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const handleDeleteTargetDialogClose = useCallback(() => {\r\n    setIsDeleteTargetDialogOpen(false);\r\n  }, [setIsDeleteTargetDialogOpen]);\r\n\r\n  const handleDeleteTargetDialogOpen = useCallback(\r\n    (row) => {\r\n      setIsDeleteTargetDialogOpen(true);\r\n      setDeleteTargetDialogRow(row);\r\n    },\r\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\r\n  );\r\n\r\n  const toggleTarget = useCallback(\r\n    (row) => {\r\n      const _targets = [...targets];\r\n      const index = _targets.findIndex((element) => element.id === row.id);\r\n      row.isActivated = !row.isActivated;\r\n      _targets[index] = row;\r\n      if (row.isActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now activated\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"The row is now deactivated\",\r\n        });\r\n      }\r\n      setTargets(_targets);\r\n    },\r\n    [pushMessageToSnackbar, targets, setTargets]\r\n  );\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Some user data</Typography>\r\n      </AccordionSummary>\r\n      <ConfirmationDialog\r\n        open={isDeleteTargetDialogOpen}\r\n        title=\"Confirmation\"\r\n        content={\r\n          deleteTargetDialogRow ? (\r\n            <span>\r\n              {\"Do you really want to remove the friend \"}\r\n              <b>{deleteTargetDialogRow.name}</b>\r\n              {\" from your list?\"}\r\n            </span>\r\n          ) : null\r\n        }\r\n        onClose={handleDeleteTargetDialogClose}\r\n        onConfirm={deleteTarget}\r\n        loading={isDeleteTargetLoading}\r\n      />\r\n      <Box width=\"100%\">\r\n        <div className={classes.tableWrapper}>\r\n          {targets.length > 0 ? (\r\n            <Table aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={targets.length}\r\n                rows={rows}\r\n              />\r\n              <TableBody>\r\n                {stableSort(targets, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => (\r\n                    <TableRow hover tabIndex={-1} key={index}>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        className={classes.firstData}\r\n                      >\r\n                        <Avatar\r\n                          className={classes.avatar}\r\n                          src={row.profilePicUrl}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number1}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number2}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number3}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.number4}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                          {row.isActivated ? (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Pause\"\r\n                            >\r\n                              <PauseCircleOutlineIcon\r\n                                className={classes.blackIcon}\r\n                              />\r\n                            </IconButton>\r\n                          ) : (\r\n                            <IconButton\r\n                              className={classes.iconButton}\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                toggleTarget(row);\r\n                              }}\r\n                              aria-label=\"Resume\"\r\n                            >\r\n                              <PlayCirlceOutlineIcon />\r\n                            </IconButton>\r\n                          )}\r\n                          <IconButton\r\n                            className={classes.iconButton}\r\n                            onClick={() => {\r\n                              handleDeleteTargetDialogOpen(row);\r\n                            }}\r\n                            aria-label=\"Delete\"\r\n                          >\r\n                            <DeleteIcon className={classes.blackIcon} />\r\n                          </IconButton>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Box m={2}>\r\n              <HighlightedInformation>\r\n                No friends added yet.\r\n              </HighlightedInformation>\r\n            </Box>\r\n          )}\r\n        </div>\r\n        <div className={classes.alignRight}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={targets.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\",\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\",\r\n            }}\r\n            onChangePage={handleChangePage}\r\n            classes={{\r\n              select: classes.dNone,\r\n              selectIcon: classes.dNone,\r\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\r\n            }}\r\n            labelRowsPerPage=\"\"\r\n          />\r\n        </div>\r\n      </Box>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Paper,\r\n  Toolbar,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  ListItemIcon,\r\n  Switch,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0\r\n  },\r\n  toolbar: { justifyContent: \"space-between\" },\r\n  scaleMinus: {\r\n    transform: \"scaleX(-1)\"\r\n  },\r\n  \"@keyframes spin\": {\r\n    from: { transform: \"rotate(359deg)\" },\r\n    to: { transform: \"rotate(0deg)\" }\r\n  },\r\n  spin: { animation: \"$spin 2s infinite linear\" },\r\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\r\n});\r\n\r\nfunction AccountInformationArea(props) {\r\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box mr={2}>\r\n            <ListItemText\r\n              primary=\"Status\"\r\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\r\n              className=\"mr-2\"\r\n            />\r\n          </Box>\r\n          <ListItemIcon>\r\n            <LoopIcon\r\n              className={classNames(\r\n                isAccountActivated ? classes.spin : null,\r\n                classes.scaleMinus\r\n              )}\r\n            />\r\n          </ListItemIcon>\r\n        </Box>\r\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\r\n          <Switch\r\n            color=\"secondary\"\r\n            checked={isAccountActivated}\r\n            onClick={toggleAccountActivation}\r\n            inputProps={{\r\n              \"aria-label\": isAccountActivated\r\n                ? \"Deactivate Account\"\r\n                : \"Activate Account\"\r\n            }}\r\n          />\r\n        </ListItemSecondaryAction>\r\n      </Toolbar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nAccountInformationArea.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, withTheme } from \"@material-ui/core\";\r\n\r\nfunction StatisticsArea(props) {\r\n  const { theme, CardChart, data } = props;\r\n  return (\r\n    CardChart &&\r\n    data.profit.length >= 2 &&\r\n    data.views.length >= 2 && (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.profit}\r\n            color={theme.palette.secondary.light}\r\n            height=\"70px\"\r\n            title=\"Profit\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <CardChart\r\n            data={data.views}\r\n            color={theme.palette.primary.light}\r\n            height=\"70px\"\r\n            title=\"Views\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nStatisticsArea.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  CardChart: PropTypes.elementType\r\n};\r\n\r\nexport default withTheme(StatisticsArea);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport SettingsArea from \"./SettingsArea\";\r\nimport UserDataArea from \"./UserDataArea\";\r\nimport AccountInformationArea from \"./AccountInformationArea\";\r\nimport StatisticsArea from \"./StatisticsArea\";\r\n\r\nfunction Dashboard(props) {\r\n  const {\r\n    selectDashboard,\r\n    CardChart,\r\n    statistics,\r\n    toggleAccountActivation,\r\n    pushMessageToSnackbar,\r\n    targets,\r\n    setTargets,\r\n    isAccountActivated,\r\n  } = props;\r\n\r\n  useEffect(selectDashboard, [selectDashboard]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <StatisticsArea CardChart={CardChart} data={statistics} />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Your Account\r\n        </Typography>\r\n      </Box>\r\n      <AccountInformationArea\r\n        isAccountActivated={isAccountActivated}\r\n        toggleAccountActivation={toggleAccountActivation}\r\n      />\r\n      <Box mt={4}>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          Settings\r\n        </Typography>\r\n      </Box>\r\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\r\n      <UserDataArea\r\n        pushMessageToSnackbar={pushMessageToSnackbar}\r\n        targets={targets}\r\n        setTargets={setTargets}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setTargets: PropTypes.func.isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport HotelIcon from '@material-ui/icons/Hotel';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  timeLine: {\r\n  \r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport default function DownloadHistory(props) {\r\n  const classes = useStyles();\r\nconsole.log(props.downloadHistory)\r\n  return (\r\n    <Timeline align=\"alternate\" className={classes.timeLine}>\r\n\r\n      {!props.downloadHistory &&  <Typography variant=\"h6\" component=\"h1\">\r\n             Not Downloaded Yet\r\n            </Typography>}\r\n            {props.downloadHistory && props.downloadHistory.length===0 &&  <Typography variant=\"h6\" component=\"h1\">\r\n             Not Downloaded Yet\r\n            </Typography>}\r\n   { props.downloadHistory && props.downloadHistory.map((curHistory)=>(\r\n<TimelineItem>\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n         {new Date(curHistory.time+\" GMT\").toLocaleString()}\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n        \r\n          { !curHistory.download_success && <TimelineDot style={{color:\"red\"}}> < CancelIcon style={{color:\"red\"}}/> </TimelineDot>}\r\n          \r\n          \r\n          {\r\n            curHistory.download_success && <TimelineDot style={{color:\"green\"}}>< CheckCircleIcon style={{color:\"green\"}}/></TimelineDot>\r\n          }\r\n          \r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography variant=\"h6\" component=\"h1\">\r\n              Download {curHistory.download_success?\"successful\":\"Failed\"} from IP {curHistory.ip}\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n    ))}\r\n    </Timeline>\r\n  );\r\n}\r\n","import React,{useState,useRef,useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card,TextField } from \"@material-ui/core\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {  red } from \"@material-ui/core/colors\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DownloadHistory from \"./timeLine\";\r\nimport {downloadFiles,deleteFile,getDownloadHistory,updateFile} from '../../../services/connectToServer'\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport { withStyles} from '@material-ui/core/styles';\r\n\r\nimport {state_to_props} from '../../../util/common_utils'\r\nimport {listFiles} from '../../../store/action'\r\nimport {connect} from 'react-redux'\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: '#f5f5f9',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: '1px solid #dadde9',\r\n  },\r\n}))(Tooltip);\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 270,\r\n    minHeight:250,\r\n    backgroundColor:\"#ff914d38\"\r\n\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n    \"&:hover\": {\r\n      backgroundColor: red[700]\r\n    }\r\n  },\r\n  pos: {\r\n    fontSize: 12\r\n  }\r\n}));\r\n\r\n\r\n function FileCard(props) {\r\n  const classes = useStyles();\r\n  // const [openDownloadHist, setOpenDownloadHist] = useState(false);\r\n  const [openDownload, setOpenDownload] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n   const [openEdit, setOpenEdit] = useState(false);\r\n   const [isLoading,setIsLoading] =useState(false)\r\n\r\n  const encryptKeyRef=useRef(null);\r\n  const despRef=useRef(null);\r\n  const [downloadHistory,setDownloadHistory]=useState(null);\r\n  const handleClose = () => {\r\n    setDownloadHistory(null);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (openDownloadHist) {\r\n  //     const { current: descriptionElement } = descriptionElementRef;\r\n  //     if (descriptionElement !== null) {\r\n  //       descriptionElement.focus();\r\n  //     }\r\n  //   }\r\n  // }, [openDownloadHist]);\r\n\r\n  const download=async (record)=>\r\n    {\r\n      setIsLoading(true)\r\n      if(encryptKeyRef.current.value===\"\"||encryptKeyRef.current.value===null){\r\n         props.pushMessageToSnackbar({text:\"empty encryption key\"})\r\n         setIsLoading(false)\r\n         return\r\n      }\r\n      var downloadResp=await downloadFiles(props.file.id,encryptKeyRef.current.value);\r\n      if(downloadResp.status===200)\r\n        { \r\n            var data=downloadResp.data;\r\n            const downloadUrl = window.URL.createObjectURL(new Blob([data]));\r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.setAttribute('download', props.file.name); //any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove(); \r\n        }\r\n      else\r\n        {\r\n          console.log(\"push message \",downloadResp)\r\n          if(downloadResp.data && downloadResp.data.message)\r\n            {\r\n              console.log(\"push message\")\r\n              props.pushMessageToSnackbar({text:downloadResp.data.message})\r\n            }\r\n          else\r\n          {\r\n            props.pushMessageToSnackbar({text:\"Exception while downloading the file\"})\r\n          }\r\n        }\r\n        setIsLoading(false)\r\n        setOpenDownload(false)\r\n\r\n    }\r\n\r\n    const handleDownloadHistory=async ()=>{\r\n      var response=await getDownloadHistory(props.file.id);\r\n      setDownloadHistory(response.data);\r\n      console.log(response);\r\n    }\r\n\r\n  const handeEdit=async()=>{\r\n    setIsLoading(true)\r\n    let updateResp= await updateFile(props.file.id,{\"description\":despRef.current.value});\r\n    if(![200,201,204].includes( updateResp.status) )\r\n    {\r\n      if(updateResp.data && updateResp.data.detail)\r\n        {\r\n          props.pushMessageToSnackbar({text:updateResp.data.detail})\r\n          props.listFiles()\r\n        }\r\n      else\r\n        {\r\n          props.pushMessageToSnackbar({text:\"Exception while deleting the file, Please try again later\"})\r\n        }\r\n      }\r\n      setIsLoading(false)\r\n    setOpenEdit(false)\r\n  }\r\n    const handeDelete=async()=>\r\n    {\r\n      setIsLoading(true)\r\n        let deleteResp=await deleteFile(props.file.id)\r\n        if([200,201,204].includes( deleteResp.status) )\r\n          {\r\n            //props.deleteFromStore(props.file.id)\r\n            props.listFiles()\r\n          }\r\n        else\r\n          {\r\n            if(deleteResp.data && deleteResp.data.message)\r\n              {\r\n                props.pushMessageToSnackbar({text:deleteResp.data.message})\r\n              }\r\n            else\r\n              {\r\n                props.pushMessageToSnackbar({text:\"Exception while deleting the file, Please try again later\"})\r\n              }\r\n            }\r\n            setIsLoading(false)\r\n          setOpenDelete(false)\r\n      }\r\n\r\n  return (\r\n   <div>\r\n    <Card className={classes.root}>\r\n      <CardContent style={{minHeight:200}}>\r\n      <HtmlTooltip title={props.file.name} arrow>\r\n        <Typography variant=\"h5\" component=\"h2\" noWrap={true}>\r\n         {props.file.name}\r\n        </Typography>\r\n        </HtmlTooltip>\r\n        {/* <Grid container justify=\"space-between\" color=\"textSecondary\">\r\n          <Typography className={classes.pos}>Total download : 30</Typography>\r\n          <Typography className={classes.pos} style={{ color: \"red\" }}>\r\n            failed :10\r\n          </Typography>\r\n        </Grid> */}\r\n        <Grid container justify=\"space-between\" color=\"textSecondary\" style={{margin:5,paddingTop:7}}>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          Description:\r\n        </Typography>\r\n          <Typography className={classes.pos}>Size :{ Math.round((props.file.size + Number.EPSILON) * 100) / 100} MB</Typography>\r\n        </Grid>\r\n        <Grid container justify=\"space-between\" style={{minHeight:110}}  >\r\n        <Typography variant=\"body2\" component=\"p\" >\r\n        {props.file.description}\r\n        </Typography>\r\n        </Grid>\r\n      </CardContent>\r\n      <CardActions >\r\n        <Grid\r\n          container\r\n          item\r\n          justify=\"space-around\"\r\n          spacing=\"1\"\r\n          direction={\"row\"}\r\n        >\r\n          <Grid item container justify=\"center\" xs={12} fullWidth>\r\n            <ButtonGroup\r\n              color=\"primary\"\r\n              aria-label=\"outlined primary button group\"\r\n              variant=\"text\"\r\n            >\r\n              <Tooltip title=\"view Download History\">\r\n                <Button aria-label=\"edit\" color=\"secondary\" fullWidth onClick={handleDownloadHistory}>\r\n                  <HistoryIcon />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"edit description\">\r\n                <Button aria-label=\"edit\" color=\"secondary\" fullWidth  onClick={()=>setOpenEdit(true)}>\r\n                  <EditIcon />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"download\">\r\n                <Button aria-label=\"download\" color=\"secondary\" fullWidth  onClick={()=>setOpenDownload(true)}>\r\n                  <GetAppIcon />\r\n                </Button>\r\n              </Tooltip>\r\n              <Tooltip title=\"Delete\">\r\n                <Button aria-label=\"delete\" color=\"secondary\" fullWidth onClick={()=>setOpenDelete(true)}>\r\n                  <DeleteRoundedIcon style={{ color: \"red\" }}  />\r\n                </Button>\r\n              </Tooltip>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n    <Dialog\r\n        open={downloadHistory!==null && downloadHistory!==undefined}\r\n        onClose={handleClose}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n       \r\n      >\r\n        <DialogTitle   id=\"scroll-dialog-title\">Download History -  {props.file.name}</DialogTitle>\r\n        <DialogContent >\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          \r\n          >\r\n            <DownloadHistory downloadHistory={downloadHistory}/>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions   >\r\n          <Button onClick={handleClose} >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={openDownload}\r\n        onClose={()=>setOpenDownload(false)}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle   id=\"scroll-dialog-title\">Download -  {props.file.name}</DialogTitle>\r\n        <DialogContent   >\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          >\r\n          <TextField\r\n                      id=\"standard-password-input\"\r\n          label=\"Encryption Key\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          inputRef={encryptKeyRef}\r\n         \r\n        />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions   >\r\n          <Button onClick={()=>setOpenDownload(false)}  >\r\n            cancel\r\n          </Button>\r\n          <Button onClick={download} color=\"secondary\" variant=\"contained\" disabled={isLoading}>\r\n          {!isLoading &&  \"download\"}\r\n          {isLoading && <> <ButtonCircularProgress />  download</>}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={openDelete}\r\n        onClose={()=>setOpenDelete(false)}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle   id=\"scroll-dialog-title\"> Delete -  {props.file.name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          >\r\n          This operation is irreversible. Are you sure want to delete this file ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions   >\r\n        <Button onClick={()=>setOpenDelete(false)} disabled={isLoading} >\r\n          cancel\r\n          </Button>\r\n          <Button onClick={handeDelete} color=\"secondary\" variant=\"contained\" disabled={isLoading}>\r\n          {!isLoading &&  \"Delete\"}\r\n          {isLoading && <> <ButtonCircularProgress />  Delete</>}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={openEdit}\r\n        onClose={()=>setOpenEdit(false)}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle   id=\"scroll-dialog-title\"> Edit -  {props.file.name}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          >\r\n         <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={4}\r\n          defaultValue={props.file.description}\r\n          inputRef={despRef}\r\n          variant=\"outlined\"\r\n        />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions   >\r\n        <Button onClick={()=>setOpenEdit(false)} disabled={isLoading} >\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handeEdit} color=\"secondary\" variant=\"contained\" disabled={isLoading}>\r\n          {!isLoading &&  \"Update\"}\r\n          {isLoading && <> <ButtonCircularProgress />  Update</>}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(state_to_props,{listFiles})(FileCard);\r\n","import React, { useState, useCallback,useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  TablePagination,\r\n  Divider,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\r\nimport {state_to_props} from '../../../util/common_utils'\r\nimport FileCard from './filecard'\r\nimport {listFiles} from '../../../store/action'\r\nimport {connect} from 'react-redux'\r\n\r\nconst styles = {\r\n  dBlock: { display: \"block\" },\r\n  dNone: { display: \"none\" },\r\n  toolbar: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n};\r\n\r\nconst rowsPerPage = 10;\r\n\r\nfunction PostContent(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    openAddPostModal,\r\n    classes,\r\n  } = props;\r\n\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\r\n    false\r\n  );\r\n\r\n  const closeDeletePostDialog = useCallback(() => {\r\n    setIsDeletePostDialogOpen(false);\r\n    setIsDeletePostDialogLoading(false);\r\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\r\n\r\n  useEffect(()=>\r\n  {\r\n     props.listFiles()\r\n  },[])\r\n\r\n  const onDelete = useCallback(() => {\r\n    setIsDeletePostDialogOpen(true);\r\n  }, [setIsDeletePostDialogOpen]);\r\n\r\n  const handleChangePage = useCallback(\r\n    (__, page) => {\r\n      setPage(page);\r\n    },\r\n    [setPage]\r\n  );\r\n\r\n  const printImageGrid = useCallback(() => {\r\n    if ( props.files.length > 0) {\r\n      return (\r\n        <Box p={1}>\r\n          <Grid container spacing={1}>\r\n            { props.files\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((file) => (\r\n                <Grid item xs={12} sm={6} md={3} key={file.id}>\r\n                    <FileCard file={file} setIsDeletePostDialogOpen={setIsDeletePostDialogOpen} pushMessageToSnackbar={pushMessageToSnackbar} listFiles={props.listFiles}/>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <HighlightedInformation>\r\n          No Files added yet. Click on &quot;ADD FILES&quot; to create your first one.\r\n        </HighlightedInformation>\r\n      </Box>\r\n    );\r\n  }, [ props.files, onDelete, page]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h6\">Your Encrypted Files</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={openAddPostModal}\r\n          disableElevation\r\n        >\r\n          Add Files\r\n        </Button>\r\n      </Toolbar>\r\n      <Divider />\r\n      {printImageGrid()}\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        count={ props.files_count}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"Previous Page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"Next Page\",\r\n        }}\r\n        onChangePage={handleChangePage}\r\n        classes={{\r\n          select: classes.dNone,\r\n          selectIcon: classes.dNone,\r\n          actions:  props.files.length > 0 ? classes.dBlock : classes.dNone,\r\n          caption:  props.files.length > 0 ? classes.dBlock : classes.dNone,\r\n        }}\r\n        labelRowsPerPage=\"\"\r\n      />\r\n      <ConfirmationDialog\r\n        open={isDeletePostDialogOpen}\r\n        title=\"Confirmation\"\r\n        content=\"Do you really want to delete the post?\"\r\n        onClose={closeDeletePostDialog}\r\n        loading={isDeletePostDialogLoading}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nPostContent.propTypes = {\r\n  openAddPostModal: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(connect(state_to_props,{listFiles})(PostContent));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Paper,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  helpPadding: {\r\n    \"@media (max-width:  400px)\": {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1)\r\n    }\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\"\r\n  }\r\n});\r\n\r\nfunction ActionPaper(props) {\r\n  const {\r\n    theme,\r\n    classes,\r\n    title,\r\n    content,\r\n    maxWidth,\r\n    actions,\r\n    helpPadding,\r\n    fullWidthActions\r\n  } = props;\r\n  return (\r\n    <Box pt={1}>\r\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\r\n        {title && <DialogTitle>{title}</DialogTitle>}\r\n        {content && (\r\n          <DialogContent\r\n            classes={helpPadding ? { root: classes.helpPadding } : null}\r\n          >\r\n            {content}\r\n          </DialogContent>\r\n        )}\r\n        {actions && (\r\n          <Box pb={2} pr={2}>\r\n            <DialogActions\r\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\r\n            >\r\n              {actions}\r\n            </DialogActions>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nActionPaper.propTypes = {\r\n  theme: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  content: PropTypes.element,\r\n  maxWidth: PropTypes.string,\r\n  actions: PropTypes.element,\r\n  helpPadding: PropTypes.bool,\r\n  fullWidthActions: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\r\n","import React, { Fragment, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useDropzone} from 'react-dropzone'\r\nimport VisibilityPasswordTextField from \"../../../shared/components/VisibilityPasswordTextField\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Switch,\r\n  Box,\r\n  withStyles,\r\n  TextField,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Bordered from \"../../../shared/components/Bordered\";\r\n\r\nconst styles = (theme) => ({\r\n  floatButtonWrapper: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    zIndex: 1000,\r\n  },\r\n  inputRoot: {\r\n    width: 190,\r\n    \"@media (max-width:  400px)\": {\r\n      width: 160,\r\n    },\r\n    \"@media (max-width:  360px)\": {\r\n      width: 140,\r\n    },\r\n    \"@media (max-width:  340px)\": {\r\n      width: 120,\r\n    },\r\n  },\r\n  uploadIcon: {\r\n    fontSize: 48,\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  imgWrapper: { position: \"relative\" },\r\n  img: {\r\n    width: \"100%\",\r\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    borderTopLeftRadius: 0,\r\n    borderBottomLeftRadius: 0,\r\n  },\r\n  uploadText: {\r\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\r\n      duration: theme.transitions.duration.short,\r\n      easing: theme.transitions.easing.easeInOut,\r\n    }),\r\n  },\r\n  numberInput: {\r\n    width: 110,\r\n  },\r\n  numberInputInput: {\r\n    padding: \"9px 34px 9px 14.5px\",\r\n  },\r\n  emojiTextArea: {\r\n    borderTopRightRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    marginRight: -1,\r\n  },\r\n  dNone: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\r\n\r\nfunction AddPostOptions(props) {\r\n  const {\r\n    Dropzone,\r\n    classes,\r\n    files,\r\n    deleteItem,\r\n    onDrop,\r\n    EmojiTextArea,\r\n    encrpytKey,\r\n    DateTimePicker,\r\n    reEncrpytKey,\r\n    desc,\r\n\r\n    uploadAt,\r\n    onChangeUploadAt,\r\n  } = props;\r\n  const [isPasswordVisible,setIsPasswordVisible]=useState(false)\r\n  const [status,setStatus]=useState(null)\r\n\r\n  const printFile = useCallback(() => {\r\n    if (files[0]) {\r\n      return (\r\n        <div className={classes.imgWrapper}>\r\n        <Grid  className={classes.img}  style={{ height: 148,backgroundColor:\"#ff914d38\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Typography>\r\n          {files[0].name}\r\n          </Typography>\r\n          </Grid> \r\n          <div className={classes.floatButtonWrapper}>\r\n            <IconButton onClick={deleteItem}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Dropzone accept=\"*/*\" onDrop={onDrop} fullHeight>\r\n        <span className={classes.uploadText}>\r\n          Click / Drop file <br /> here\r\n        </span>\r\n      </Dropzone>\r\n    );\r\n  }, [onDrop, files, classes, deleteItem]);\r\n\r\n \r\n\r\n  return (\r\n    <Fragment>\r\n \r\n      <Typography paragraph variant=\"h6\">\r\n        Upload File\r\n      </Typography>\r\n      <Box mb={2}>\r\n        {EmojiTextArea && (\r\n          <EmojiTextArea\r\n            inputClassName={classes.emojiTextArea}\r\n            maxCharacters={2200}\r\n            rightContent={printFile()}\r\n            emojiSet=\"google\"\r\n            placeholder=\"Description\"\r\n            inputRef={desc}\r\n\r\n          />\r\n        )}\r\n      </Box>\r\n \r\n      <List disablePadding>\r\n        <Bordered disableVerticalPadding disableBorderRadius>\r\n        {/* <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n              divider={true}\r\n              key={1}\r\n            >\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Auto Delete</Typography>\r\n              </ListItemText>\r\n              \r\n                <ListItemSecondaryAction>\r\n                <Switch\r\n        color=\"primary\"\r\n        name=\"checkedB\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n                </ListItemSecondaryAction>\r\n   \r\n            </ListItem>\r\n\r\n\r\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\r\n            <ListItemText>\r\n              <Typography variant=\"body2\">Auto Delete File At</Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              {DateTimePicker && (\r\n                <DateTimePicker\r\n                  value={uploadAt}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  onChange={onChangeUploadAt}\r\n                  disablePast\r\n                />\r\n              )}\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          */}\r\n            <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n              divider={true}\r\n              key={2}\r\n            >\r\n              <ListItemText >\r\n                <Typography variant=\"body2\">Enter Encrption key for the file</Typography>\r\n              </ListItemText>\r\n              \r\n                <ListItemSecondaryAction>\r\n                <VisibilityPasswordTextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            error={\r\n              status === \"passwordTooShort\" || status === \"passwordsDontMatch\"\r\n            }\r\n            label=\"Encryption Key\"\r\n            inputRef={encrpytKey}\r\n            autoComplete=\"off\"\r\n            size=\"small\"\r\n            onChange={() => {\r\n              if (\r\n                status === \"passwordTooShort\" ||\r\n                status === \"passwordsDontMatch\"\r\n              ) {\r\n                setStatus(null);\r\n              }\r\n            }}\r\n            helperText={(() => {\r\n              if (status === \"passwordTooShort\") {\r\n                return \"Create a password at least 6 characters long.\";\r\n              }\r\n              if (status === \"passwordsDontMatch\") {\r\n                return \"Your passwords dont match.\";\r\n              }\r\n              return null;\r\n            })()}\r\n            FormHelperTextProps={{ error: true }}\r\n            isVisible={isPasswordVisible}\r\n            onVisibilityChange={setIsPasswordVisible}\r\n            name=\"password\"\r\n          />\r\n                </ListItemSecondaryAction>\r\n   \r\n            </ListItem>\r\n            <ListItem\r\n              className=\"listItemLeftPadding\"\r\n              disableGutters\r\n           \r\n              key={3}\r\n            >\r\n              <ListItemText>\r\n                <Typography variant=\"body2\">Re-Enter Encrption key for the file</Typography>\r\n              </ListItemText>\r\n              \r\n                <ListItemSecondaryAction>\r\n               \r\n       \r\n          <VisibilityPasswordTextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            required\r\n            fullWidth\r\n            error={\r\n              status === \"passwordTooShort\" || status === \"passwordsDontMatch\"\r\n            }\r\n            label=\"Repeat Encryption Key\"\r\n            inputRef={reEncrpytKey}\r\n            autoComplete=\"off\"\r\n            onChange={() => {\r\n              if (\r\n                status === \"passwordTooShort\" ||\r\n                status === \"passwordsDontMatch\"\r\n              ) {\r\n                setStatus(null);\r\n              }\r\n            }}\r\n            helperText={(() => {\r\n              if (status === \"passwordTooShort\") {\r\n                return \"Create a password at least 6 characters long.\";\r\n              }\r\n              if (status === \"passwordsDontMatch\") {\r\n                return \"Your passwords dont match.\";\r\n              }\r\n            })()}\r\n            FormHelperTextProps={{ error: true }}\r\n            isVisible={isPasswordVisible}\r\n            onVisibilityChange={setIsPasswordVisible}\r\n          />\r\n                </ListItemSecondaryAction>\r\n   \r\n            </ListItem>\r\n       \r\n        </Bordered>\r\n      </List>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPostOptions.propTypes = {\r\n  onEmojiTextareaChange: PropTypes.func,\r\n  DateTimePicker: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  classes: PropTypes.object,\r\n  cropperFile: PropTypes.object,\r\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  deleteItem: PropTypes.func,\r\n  onDrop: PropTypes.func,\r\n  value: PropTypes.string,\r\n  characters: PropTypes.number,\r\n  uploadAt: PropTypes.instanceOf(Date),\r\n  onChangeUploadAt: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\r\n","import React, { Fragment, useState, useCallback,useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Box } from \"@material-ui/core\";\r\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\r\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\r\nimport AddPostOptions from \"./AddPostOptions\";\r\nimport {uploadfile} from '../../../services/connectToServer'\r\n\r\nfunction AddPost(props) {\r\n  const {\r\n    pushMessageToSnackbar,\r\n    Dropzone,\r\n    EmojiTextArea,\r\n    DateTimePicker,\r\n    ImageCropper,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const [uploadAt, setUploadAt] = useState(new Date());\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const encrpytKey=useRef(null)\r\n  const desc=useRef(null)\r\n const reEncrpytKey=useRef(null)\r\n\r\n\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      console.log(\"fielss==>\",acceptedFiles);\r\n      if (acceptedFiles.length  > 1) {\r\n        pushMessageToSnackbar({\r\n          isErrorMessage: true,\r\n          text: \"You cannot upload more than one file at once\",\r\n        });\r\n      } \r\n       else if (acceptedFiles.length === 1) {\r\n        if (acceptedFiles[0].size/1000000>5) {\r\n          pushMessageToSnackbar({\r\n            isErrorMessage: true,\r\n            text: \"File size should not be more than 5MB\",\r\n          });\r\n        }\r\n          else{\r\n        const curfile = acceptedFiles[0];\r\n        curfile.preview = URL.createObjectURL(curfile);\r\n        curfile.key = new Date().getTime();\r\n        setFiles([curfile]);\r\n          }\r\n      }\r\n    },\r\n    [pushMessageToSnackbar,setFiles]\r\n  );\r\n\r\n\r\n  const deleteItem = useCallback(() => {\r\n\r\n    setFiles([]);\r\n  }, [setFiles]);\r\n\r\n  const handleUpload = useCallback( async() => {\r\n    setLoading(true);\r\n    const data = new FormData() \r\n\r\n    console.log(\"priivatekey be3fore upload==>\",encrpytKey.current.value)\r\n    console.log(\"desc be3fore upload==>\",desc.current.value)\r\n    if(!encrpytKey.current.value ||encrpytKey.current.value===\"\"){\r\n      pushMessageToSnackbar({\r\n        text: \"invalid encryption key\",\r\n      });\r\n      setLoading(false);\r\n    }else if(encrpytKey.current.value===reEncrpytKey.current.value)\r\n    {\r\n    data.append('file', files[0]);\r\n    data.append('private_key',encrpytKey.current.value);\r\n    data.append('description',desc.current.value);\r\n    const resp= await uploadfile(data);\r\n    console.log(\"resp ==>\",resp)\r\n    setFiles([]);\r\n      pushMessageToSnackbar({\r\n        text: \"Your File has been uploaded\",\r\n      });\r\n      onClose();\r\n    }\r\n    else {\r\n      pushMessageToSnackbar({\r\n        text: \"encryption key mismatch\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n   \r\n  }, [setLoading, onClose, pushMessageToSnackbar,setFiles,files]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ActionPaper\r\n        helpPadding\r\n        maxWidth=\"md\"\r\n        content={\r\n          <AddPostOptions\r\n            EmojiTextArea={EmojiTextArea}\r\n            Dropzone={Dropzone}\r\n            files={files}\r\n            onDrop={onDrop}\r\n            deleteItem={deleteItem}\r\n            DateTimePicker={DateTimePicker}\r\n            uploadAt={uploadAt}\r\n            onChangeUploadAt={setUploadAt}\r\n            encrpytKey={encrpytKey}\r\n            desc={desc}\r\n            reEncrpytKey={reEncrpytKey}\r\n\r\n            ImageCropper={ImageCropper}\r\n          />\r\n        }\r\n        actions={\r\n          <Fragment>\r\n            <Box mr={1}>\r\n              <Button onClick={onClose} disabled={loading}>\r\n                Back\r\n              </Button>\r\n            </Box>\r\n            <Button\r\n              onClick={handleUpload}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={files.length===0 || loading}\r\n            >\r\n              Upload {loading && <ButtonCircularProgress />}\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAddPost.propTypes = {\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  Dropzone: PropTypes.elementType,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n};\r\n\r\nexport default AddPost;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PostContent from \"./PostContent\";\r\nimport AddPost from \"./AddPost\";\r\n\r\nfunction Posts(props) {\r\n  const {\r\n    selectPosts,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n \r\n  } = props;\r\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\r\n\r\n  const openAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(true);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  const closeAddPostModal = useCallback(() => {\r\n    setIsAddPostPaperOpen(false);\r\n  }, [setIsAddPostPaperOpen]);\r\n\r\n  useEffect(() => {\r\n    selectPosts();\r\n  }, [selectPosts]);\r\n\r\n  if (isAddPostPaperOpen) {\r\n    return <AddPost\r\n      onClose={closeAddPostModal}\r\n      EmojiTextArea={EmojiTextArea}\r\n      ImageCropper={ImageCropper}\r\n      Dropzone={Dropzone}\r\n      DateTimePicker={DateTimePicker}\r\n      pushMessageToSnackbar={pushMessageToSnackbar}\r\n    />\r\n  }\r\n  return <PostContent\r\n    openAddPostModal={openAddPostModal}\r\n    pushMessageToSnackbar={pushMessageToSnackbar}\r\n  />\r\n}\r\n\r\nPosts.propTypes = {\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setPosts: PropTypes.func.isRequired,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  selectPosts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useCallback, useState,useRef ,useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  TextField,Grid,Dialog,DialogTitle,DialogContentText,DialogContent,DialogActions,Button,Tooltip\r\n} from \"@material-ui/core\";\r\n\r\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {state_to_props} from '../../../util/common_utils'\r\nimport {setUserDetailsToStore,userFetchType} from '../../../store/action'\r\nimport {connect} from 'react-redux'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {addUserImage,getUserImage,changePassword} from '../../../services/connectToServer'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Dropzone,{useDropzone} from 'react-dropzone'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    width: \"100%\",\r\n    padding:\"15px\"\r\n  },\r\n  blackBackground: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  contentWrapper: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: theme.spacing(2)\r\n    },\r\n    width: \"100%\"\r\n  },\r\n  dBlock: {\r\n    display: \"block !important\"\r\n  },\r\n  dNone: {\r\n    display: \"none !important\"\r\n  },\r\n  firstData: {\r\n    paddingLeft: theme.spacing(3)\r\n  },\r\n  large: {\r\n    width: theme.spacing(9),\r\n    height: theme.spacing(9),\r\n  },\r\n}));\r\n\r\nconst plan = [\r\n  {\r\n    value: 'Free',\r\n    label: 'Free, 50MB',\r\n  },\r\n  {\r\n    value: 'Plan A',\r\n    label: 'Plan A, 100MB',\r\n  },\r\n  {\r\n    value: 'Plan B',\r\n    label: 'Plan B,  200MB',\r\n  }\r\n];\r\n\r\nfunction SubscriptionTable(props) {\r\n  const { transactions } = props;\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n  const  [isNameEdit,setNameEdit]=React.useState(false);\r\n  const[name,setName]=React.useState(props.user.username);\r\n  const [isPasswordEdit,setPasswordEdit]=useState(false);\r\n  const oldPassword=useRef(null);\r\n  const newPassword=useRef(null);\r\n  const [userImageUrl,setUserImageUrl]=useState(\"\");\r\n    const onDrop = useCallback(acceptedFiles => {\r\n    uploadFile(acceptedFiles[0]);\r\n  }, [])\r\n \r\n\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept: 'image/jpeg, image/png' })\r\n   const classes = useStyles();\r\n    useEffect(()=>{\r\n        const asyncprocess=async ()=>{\r\n        let imgResp= await getUserImage()\r\n        if(imgResp.status===200)\r\n        {\r\n        var urlCreator = window.URL || window.webkitURL;\r\n        var imageUrl = urlCreator.createObjectURL( imgResp.data );\r\n        console.log(\"imageUrl ==>\",imageUrl);\r\n        setUserImageUrl(imageUrl);\r\n        }\r\n        }\r\n        asyncprocess()\r\n    },[])\r\n const uploadFile=(file)=>\r\n{\r\n    if(file)\r\n    {\r\n        const data = new FormData() \r\n        data.append('file', file);\r\n       \r\n        console.log(\"onchange\",file);\r\n        addUserImage(data);\r\n    }\r\n}\r\n \r\n  console.log(\"subscription tablee \",props)\r\n const handleNameChange = (e) => {\r\n   console.log(\"setName \",e)\r\n    setName(e.target.value);\r\n  };\r\nconst updateName=()=>\r\n{   console.log(\"updatename \",name);\r\n    props.setUserDetailsToStore({username:name},userFetchType.UPDATE)\r\n    setNameEdit(false);\r\n}\r\nconst updatePassword=async ()=>{\r\n  console.log(\"pasword ==>  \",oldPassword)\r\n    console.log(\"new pasword ==>  \",newPassword)\r\n    if(oldPassword.current.value===\"\" ||oldPassword.current.value===null){\r\n       props.pushMessageToSnackbar({text:\"empty value for oldPassword\"})\r\n       return\r\n    }\r\n    if(newPassword.current.value===\"\" ||newPassword.current.value===null){\r\n      props.pushMessageToSnackbar({text:\"empty value for new Password\"})\r\n      return;\r\n    }\r\n  let response=await changePassword({old_password:oldPassword.current.value,new_password:newPassword.current.value});\r\n  setPasswordEdit(false)\r\n}\r\n\r\n  if (transactions.length > 0) {\r\n    return (\r\n      <div className={classes.tableWrapper}>\r\n      <Grid\r\n  container\r\n  direction=\"row\"\r\n  justify=\"center\"\r\n  alignItems=\"center\"\r\n>       \r\n      <Badge  badgeContent={ <div {...getRootProps()}><input {...getInputProps()} />\r\n     \r\n     <EditIcon/></div>\r\n    } color=\"primary\">\r\n      <Avatar className={classes.large} variant=\"rounded\"  alt= {props.user.userName} src={userImageUrl}></Avatar>\r\n      </Badge>\r\n      </Grid>\r\n      <div className={classes.demo}>\r\n            <List dense={dense}>\r\n          \r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Name\"\r\n                    secondary={secondary ? 'Secondary text' : null}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    {isNameEdit===false?<>{props.user.username} <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>setNameEdit(true)}>\r\n              <EditIcon />\r\n               </IconButton> </>: \r\n                    <TextField id=\"standard-password-input\" type=\"text\" variant=\"outlined\" size=\"small\" value={name} onChange={handleNameChange}\r\n       InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n             <IconButton edge=\"end\" aria-label=\"update\" onClick={updateName}>\r\n              <CheckCircleOutlineIcon style={{color:\"green\"}}/>\r\n               </IconButton>\r\n               <IconButton edge=\"end\" aria-label=\"close\"  style={{color:\"red\"}} onClick={()=>setNameEdit(false)}>\r\n                      <HighlightOffIcon />\r\n                    </IconButton>\r\n            </InputAdornment>)}}  /> }\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n\r\n                 <ListItem>\r\n                  <ListItemText  primary=\"Total Space\" />\r\n                  <ListItemSecondaryAction>\r\n                      <ListItemText >{props.license.totalSpace} MB</ListItemText>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                 <ListItem>\r\n                  <ListItemText  primary=\"Free Space\" />\r\n                  <ListItemSecondaryAction>\r\n                      <ListItemText>{props.license.totalSpace-props.license.usedSpace} MB</ListItemText>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText  primary=\"Plan\" />\r\n                  <ListItemSecondaryAction>\r\n                      <ListItemText><Tooltip title=\"paid verision is not available yet\"><TextField select defaultValue={props.license.licenseType}  disabled variant=\"outlined\" size=\"small\">\r\n                      {plan.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n                      </TextField></Tooltip></ListItemText>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                 <ListItem>\r\n                  <ListItemText  primary=\"Email Address\" />\r\n                  <ListItemSecondaryAction>\r\n                      <ListItemText>{props.user.email} </ListItemText>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Password\"\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                   <ListItemText> ****** <IconButton edge=\"end\"  onClick={()=>setPasswordEdit(true)}>\r\n              <EditIcon />\r\n               </IconButton></ListItemText>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n           \r\n            </List>\r\n          </div>\r\n            <Dialog\r\n        open={isPasswordEdit}\r\n        onClose={()=>setPasswordEdit(false)}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle   id=\"scroll-dialog-title\">Password reset</DialogTitle>\r\n        <DialogContent   >\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            tabIndex={-1}\r\n          >\r\n          <TextField\r\n                      id=\"standard-password-input\"\r\n          label=\"old Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          inputRef={oldPassword}\r\n          style={{margin:5}}\r\n         \r\n        />\r\n          <TextField\r\n                      id=\"standard-password-input\"\r\n          label=\"new Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          inputRef={newPassword}\r\n          style={{margin:5}}\r\n         \r\n        />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions   >\r\n        <Button    onClick={()=>setPasswordEdit(false)}>\r\n            cancel\r\n          </Button>\r\n          <Button  color=\"secondary\" variant=\"contained\"  onClick={updatePassword}>\r\n            update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className={classes.contentWrapper}>\r\n      <HighlightedInformation>\r\n        No transactions received yet.\r\n      </HighlightedInformation>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubscriptionTable.propTypes = {\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n\r\nexport default connect(state_to_props,{setUserDetailsToStore:setUserDetailsToStore})(SubscriptionTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ListItemText, Button, Toolbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    justifyContent: \"space-between\"\r\n  }\r\n};\r\n\r\nfunction SubscriptionInfo(props) {\r\n  const { classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={openAddBalanceDialog}\r\n        disableElevation\r\n      >\r\n        Add Balance\r\n      </Button>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nSubscriptionInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SubscriptionInfo);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   \r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n  \r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, Divider, Paper, withStyles } from \"@material-ui/core\";\r\nimport SubscriptionTable from \"./SubscriptionTable\";\r\nimport SubscriptionInfo from \"./SubscriptionInfo\";\r\nimport Account from \"../AccountView/index\"\r\n\r\nconst styles = {\r\n  divider: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\r\n  }\r\n};\r\n\r\nfunction Subscription(props) {\r\n  const {\r\n    transactions,\r\n    classes,\r\n    openAddBalanceDialog,\r\n    selectSubscription\r\n  } = props;\r\n\r\n  useEffect(selectSubscription, [selectSubscription]);\r\n\r\n  return (\r\n    <Paper>\r\n      <List disablePadding>\r\n        {/* <SubscriptionInfo openAddBalanceDialog={openAddBalanceDialog} />\r\n        <Divider className={classes.divider} /> */}\r\n        <SubscriptionTable transactions={transactions}  pushMessageToSnackbar={props.pushMessageToSnackbar}/>\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// function Subscription(props){\r\n// return(<Account {...props}/>)\r\n// }\r\n\r\nSubscription.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Subscription);\r\n","import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch,Route ,withRouter,Redirect } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport Posts from \"./posts/Posts\";\r\nimport Subscription from \"./subscription/Subscription\";\r\nimport PropsRoute from \"../../shared/components/PropsRoute\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    width: \"auto\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"95%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      marginTop: theme.spacing(4),\r\n      marginBottom: theme.spacing(4),\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"90%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"82.5%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      width: \"70%\",\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Routing(props) {\r\n  const {\r\n    classes,\r\n    EmojiTextArea,\r\n    ImageCropper,\r\n    Dropzone,\r\n    DateTimePicker,\r\n    pushMessageToSnackbar,\r\n    posts,\r\n    transactions,\r\n    toggleAccountActivation,\r\n    CardChart,\r\n    statistics,\r\n    targets,\r\n    setTargets,\r\n    setPosts,\r\n    isAccountActivated,\r\n    selectDashboard,\r\n    selectPosts,\r\n    selectSubscription,\r\n    openAddBalanceDialog,\r\n  } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Switch>\r\n        <PropsRoute\r\n          path=\"/home/files\"\r\n          component={Posts}\r\n          EmojiTextArea={EmojiTextArea}\r\n          ImageCropper={ImageCropper}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          posts={posts}\r\n          setPosts={setPosts}\r\n          selectPosts={selectPosts}\r\n        />\r\n        <PropsRoute\r\n          path=\"/home/accounts\"\r\n          component={Subscription}\r\n          transactions={transactions}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n        />\r\n <Route exact path =\"\" render={()=><Redirect to=\"/home/files\"/>} ></Route>\r\n        {/* <PropsRoute\r\n          path=\"\"\r\n          component={Dashboard}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          CardChart={CardChart}\r\n          statistics={statistics}\r\n          targets={targets}\r\n          setTargets={setTargets}\r\n          isAccountActivated={isAccountActivated}\r\n          selectDashboard={selectDashboard}\r\n        /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nRouting.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  EmojiTextArea: PropTypes.elementType,\r\n  ImageCropper: PropTypes.elementType,\r\n  Dropzone: PropTypes.elementType,\r\n  DateTimePicker: PropTypes.elementType,\r\n  pushMessageToSnackbar: PropTypes.func,\r\n  setTargets: PropTypes.func.isRequired,\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toggleAccountActivation: PropTypes.func,\r\n  CardChart: PropTypes.elementType,\r\n  statistics: PropTypes.object.isRequired,\r\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isAccountActivated: PropTypes.bool.isRequired,\r\n  selectDashboard: PropTypes.func.isRequired,\r\n  selectPosts: PropTypes.func.isRequired,\r\n  selectSubscription: PropTypes.func.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\r\n","import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport formatDistance from \"date-fns/formatDistance\";\r\n\r\nfunction MessageListItem(props) {\r\n  const { message, divider } = props;\r\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\r\n\r\n  const handleError = useCallback(() => {\r\n    setHasErrorOccurred(true);\r\n  }, [setHasErrorOccurred]);\r\n\r\n  return (\r\n    <ListItem divider={divider}>\r\n      <ListItemAvatar>\r\n        {hasErrorOccurred ? (\r\n          <ErrorIcon color=\"secondary\" />\r\n        ) : (\r\n          <Avatar\r\n            src={hasErrorOccurred ? null : message.src}\r\n            onError={handleError}\r\n          />\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={message.text}\r\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nMessageListItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  divider: PropTypes.bool,\r\n};\r\n\r\nexport default MessageListItem;\r\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Popover,\r\n  IconButton,\r\n  AppBar,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Box,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport MessageListItem from \"./MessageListItem\";\r\n\r\nconst styles = (theme) => ({\r\n  tabContainer: {\r\n    overflowY: \"auto\",\r\n    maxHeight: 350,\r\n  },\r\n  popoverPaper: {\r\n    width: \"100%\",\r\n    maxWidth: 350,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(1),\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: 270,\r\n    },\r\n  },\r\n  divider: {\r\n    marginTop: -2,\r\n  },\r\n  noShadow: {\r\n    boxShadow: \"none !important\",\r\n  },\r\n});\r\n\r\nfunction MessagePopperButton(props) {\r\n  const { classes, messages } = props;\r\n  const anchorEl = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(!isOpen);\r\n  }, [isOpen, setIsOpen]);\r\n\r\n  const handleClickAway = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const id = isOpen ? \"scroll-playground\" : null;\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        onClick={handleClick}\r\n        buttonRef={anchorEl}\r\n        aria-label=\"Open Messages\"\r\n        aria-describedby={id}\r\n        color=\"primary\"\r\n      >\r\n        <MessageIcon />\r\n      </IconButton>\r\n      <Popover\r\n        disableScrollLock\r\n        id={id}\r\n        open={isOpen}\r\n        anchorEl={anchorEl.current}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n        classes={{ paper: classes.popoverPaper }}\r\n        onClose={handleClickAway}\r\n      >\r\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\r\n          <Box pt={1} pl={2} pb={1} pr={1}>\r\n            <Typography variant=\"subtitle1\">Messages</Typography>\r\n          </Box>\r\n          <Divider className={classes.divider} />\r\n        </AppBar>\r\n        <List dense className={classes.tabContainer}>\r\n          {messages.length === 0 ? (\r\n            <ListItem>\r\n              <ListItemText>\r\n                You haven&apos;t received any messages yet.\r\n              </ListItemText>\r\n            </ListItem>\r\n          ) : (\r\n            messages.map((element, index) => (\r\n              <MessageListItem\r\n                key={index}\r\n                message={element}\r\n                divider={index !== messages.length - 1}\r\n              />\r\n            ))\r\n          )}\r\n        </List>\r\n      </Popover>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMessagePopperButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  Toolbar,\r\n  Divider,\r\n  Typography,\r\n  Box,\r\n  withStyles\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    minWidth: drawerWidth\r\n  }\r\n};\r\n\r\nfunction SideDrawer(props) {\r\n  const { classes, onClose, open } = props;\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n        <Box\r\n          pl={3}\r\n          pr={3}\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\r\n          <IconButton\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            aria-label=\"Close Sidedrawer\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Toolbar>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nSideDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SideDrawer);\r\n","function currencyPrettyPrint(cents) {\r\n  const dollars = cents / 100;\r\n  return dollars.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport default currencyPrettyPrint;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { OutlinedInput, withStyles } from \"@material-ui/core\";\r\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\r\n\r\nconst styles = {\r\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\r\n  outlinedInput: {\r\n    width: 90,\r\n    height: 40,\r\n    cursor: \"pointer\"\r\n  },\r\n  wrapper: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction Balance(props) {\r\n  const { balance, classes, openAddBalanceDialog } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <OutlinedInput\r\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\r\n        className={classes.outlinedInput}\r\n        classes={{ input: classes.input }}\r\n        readOnly\r\n        labelWidth={0}\r\n        onClick={openAddBalanceDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Balance);\r\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport {connect} from 'react-redux'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Avatar,\r\n  Drawer,\r\n  List,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Hidden,\r\n  Tooltip,\r\n  Box,\r\n  withStyles,\r\n  isWidthUp,\r\n  withWidth,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport MessagePopperButton from \"./MessagePopperButton\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Balance from \"./Balance\";\r\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\r\nimport {signout} from '../../../services/connectToServer'\r\nimport {deleteAuthorizationCookies} from '../../../util/common_utils'\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport {emtStores} from '../../../store/action'\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    boxShadow: theme.shadows[6],\r\n    backgroundColor: theme.palette.common.white,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  appBarToolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      paddingLeft: theme.spacing(4),\r\n      paddingRight: theme.spacing(4),\r\n    },\r\n  },\r\n  accountAvatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    height: 24,\r\n    width: 24,\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: theme.spacing(1.5),\r\n      marginRight: theme.spacing(1.5),\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    height: \"100%vh\",\r\n    whiteSpace: \"nowrap\",\r\n    border: 0,\r\n    width: theme.spacing(7),\r\n    overflowX: \"hidden\",\r\n    marginTop: theme.spacing(8),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    backgroundColor: theme.palette.common.black,\r\n  },\r\n  smBordered: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      borderRadius: \"50% !important\",\r\n    },\r\n  },\r\n  menuLink: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  iconListItem: {\r\n    width: \"auto\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: 11,\r\n    paddingBottom: 11,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  colorbox: {\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    display: \"inline-block\",\r\n    backgroudColor: \"#ccc\",\r\n    position: \"absolute\",\r\n    left: \"5px\",\r\n    top: \"5px\"\r\n},\r\n  textPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  mobileItemSelected: {\r\n    backgroundColor: `${theme.palette.primary.main} !important`,\r\n  },\r\n  brandText: {\r\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\r\n    fontWeight: 400,\r\n  },\r\n  username: {\r\n    paddingLeft: 0,\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  justifyCenter: {\r\n    justifyContent: \"center\",\r\n  },\r\n  permanentDrawerListItem: {\r\n    justifyContent: \"center\",\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n   bottomPush: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    textAlign: \"center\",\r\n    paddingBottom: 10,\r\n}\r\n});\r\n\r\n\r\n\r\nfunction NavBar(props) {\r\n  const { selectedTab, messages, classes, width, openAddBalanceDialog } = props;\r\n  // Will be use to make website more accessible by screen readers\r\n  const links = useRef([]);\r\n  const bottomLinks = useRef([]);\r\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\r\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\r\n\r\n  const openMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(true);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const closeMobileDrawer = useCallback(() => {\r\n    setIsMobileOpen(false);\r\n  }, [setIsMobileOpen]);\r\n\r\n  const openDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(true);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n  const closeDrawer = useCallback(() => {\r\n    setIsSideDrawerOpen(false);\r\n  }, [setIsSideDrawerOpen]);\r\n\r\n\r\n  const logOut=async()=>{\r\n    console.log(\"log out\")\r\n    const signOutRes=await signout();\r\n    if([200,204].includes(signOutRes.status))\r\n    {\r\n     props.emtStores()\r\n     deleteAuthorizationCookies();\r\n    \r\n    }\r\n    else\r\n    {\r\n        const exception=true;\r\n    }\r\n  }\r\n\r\n  const bottomMenuItems=[ {\r\n   \r\n    name: \"Logout\",\r\n    onClick:logOut,\r\n    icon: {\r\n      desktop: (\r\n        <ExitToAppIcon className=\"text-white\" style={{color:\"red\"}} fontSize=\"large\" />\r\n      ),\r\n      mobile: <ExitToAppIcon className=\"text-white\" />,\r\n    },\r\n  },];\r\n\r\n  const menuItems = [\r\n    \r\n    {\r\n      link: \"/home/files\",\r\n      name: \"Files\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <DescriptionIcon\r\n            className={\r\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <ImageIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n    {\r\n      link: \"/home/accounts\",\r\n      name: \"Accounts\",\r\n      onClick: closeMobileDrawer,\r\n      icon: {\r\n        desktop: (\r\n          <AccountBoxIcon\r\n            className={\r\n              selectedTab === \"Subscription\"\r\n                ? classes.textPrimary\r\n                : \"text-white\"\r\n            }\r\n            fontSize=\"small\"\r\n          />\r\n        ),\r\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\r\n      },\r\n    },\r\n   \r\n  ];\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar className={classes.appBarToolbar}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Box mr={1}>\r\n                <IconButton\r\n                  aria-label=\"Open Navigation\"\r\n                  onClick={openMobileDrawer}\r\n                  color=\"primary\"\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"primary\"\r\n              >\r\n                Digy- \r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                className={classes.brandText}\r\n                display=\"inline\"\r\n                color=\"secondary\"\r\n              >\r\n                Coffer\r\n              </Typography>\r\n            </Hidden>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n          >\r\n            {isWidthUp(\"sm\", width) && (\r\n              <Box mr={3}>\r\n                {/* <Balance\r\n                  balance={2573}\r\n                  openAddBalanceDialog={openAddBalanceDialog}\r\n                /> */}\r\n              </Box>\r\n            )}\r\n            <MessagePopperButton messages={messages} />\r\n            <ListItem\r\n              disableGutters\r\n              className={classNames(classes.iconListItem, classes.smBordered)}\r\n            >\r\n        \r\n            </ListItem>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Hidden xsDown>\r\n        <Drawer //  both drawers can be combined into one for performance\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          open={false}\r\n        >\r\n        <Grid\r\n  container\r\n  item\r\n  direction=\"column\"\r\n  justify=\"space-between\"\r\n  alignItems=\"stretch\"\r\n  flex\r\n  xs={11}\r\n>\r\n          <Grid item container flex>\r\n          <List>\r\n            {menuItems.map((element, index) => (\r\n              <Link\r\n                to={element.link}\r\n                className={classes.menuLink}\r\n                onClick={element.onClick}\r\n                key={index}\r\n                ref={(node) => {\r\n                  links.current[index] = node;\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={element.name}\r\n                  placement=\"right\"\r\n                  key={element.name}\r\n                >\r\n                  <ListItem\r\n                    selected={selectedTab === element.name}\r\n                    button\r\n                    divider={index !== menuItems.length - 1}\r\n                    className={classes.permanentDrawerListItem}\r\n                    onClick={() => {\r\n                      links.current[index].click();\r\n                    }}\r\n                    aria-label={\r\n                      element.name === \"Logout\"\r\n                        ? \"Logout\"\r\n                        : `Go to ${element.name}`\r\n                    }\r\n                  >\r\n                    <ListItemIcon className={classes.justifyCenter}>\r\n                      {element.icon.desktop}\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                </Tooltip>\r\n              </Link>\r\n\r\n             \r\n            ))}\r\n          </List>\r\n          </Grid>\r\n          <Grid item >\r\n          <List>\r\n            {bottomMenuItems.map((element, index) => (\r\n              <Link\r\n                to={element.link}\r\n                className={classes.menuLink}\r\n                onClick={element.onClick}\r\n                key={index}\r\n                ref={(node) => {\r\n                  bottomLinks.current[index] = node;\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={element.name}\r\n                  placement=\"right\"\r\n                  key={element.name}\r\n                >\r\n                  <ListItem\r\n                    selected={selectedTab === element.name}\r\n                    button\r\n                    divider={index !== menuItems.length - 1}\r\n                    className={classes.permanentDrawerListItem}\r\n                    onClick={() => {\r\n                      bottomLinks.current[index].click();\r\n                    }}\r\n                    aria-label={\r\n                      element.name === \"Logout\"\r\n                        ? \"Logout\"\r\n                        : `Go to ${element.name}`\r\n                    }\r\n                  >\r\n                    <ListItemIcon className={classes.justifyCenter}>\r\n                      {element.icon.desktop}\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                </Tooltip>\r\n              </Link>\r\n\r\n             \r\n            ))}\r\n          </List>\r\n          </Grid>\r\n          </Grid>\r\n        </Drawer>\r\n      </Hidden>\r\n      <NavigationDrawer\r\n        menuItems={menuItems.map((element) => ({\r\n          link: element.link,\r\n          name: element.name,\r\n          icon: element.icon.mobile,\r\n          onClick: element.onClick,\r\n        }))}\r\n        bottomMenuItems={bottomMenuItems.map((element) => ({\r\n          link: element.link,\r\n          name: element.name,\r\n          icon: element.icon.mobile,\r\n          onClick: element.onClick,\r\n        }))\r\n\r\n        }\r\n        anchor=\"left\"\r\n        open={isMobileOpen}\r\n        selectedItem={selectedTab}\r\n        onClose={closeMobileDrawer}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n  openAddBalanceDialog: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withWidth()(withStyles(styles, { withTheme: true })(connect(null,{emtStores})(NavBar)));\r\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Snackbar, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n});\r\n\r\nfunction ConsecutiveSnackbars(props) {\r\n  const { classes, getPushMessageFromChild } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messageInfo, setMessageInfo] = useState({});\r\n  const queue = useRef([]);\r\n\r\n  const processQueue = useCallback(() => {\r\n    if (queue.current.length > 0) {\r\n      setMessageInfo(queue.current.shift());\r\n      setIsOpen(true);\r\n    }\r\n  }, [setMessageInfo, setIsOpen, queue]);\r\n\r\n  const handleClose = useCallback((_, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setIsOpen(false);\r\n  }, [setIsOpen]);\r\n\r\n  const pushMessage = useCallback(message => {\r\n    queue.current.push({\r\n      message,\r\n      key: new Date().getTime(),\r\n    });\r\n    if (isOpen) {\r\n      // immediately begin dismissing current message\r\n      // to start showing new one\r\n      setIsOpen(false);\r\n    } else {\r\n      processQueue();\r\n    }\r\n  }, [queue, isOpen, setIsOpen, processQueue]);\r\n\r\n  useEffect(() => {\r\n    getPushMessageFromChild(pushMessage);\r\n  }, [getPushMessageFromChild, pushMessage]);\r\n\r\n  return (\r\n    <Snackbar\r\n      disableWindowBlurListener\r\n      key={messageInfo.key}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={isOpen}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      onExited={processQueue}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root,\r\n        },\r\n      }}\r\n      message={\r\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\r\n      }\r\n    />\r\n  );\r\n\r\n}\r\n\r\nConsecutiveSnackbars.propTypes = {\r\n  getPushMessageFromChild: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\r\n","export default [\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\r\n    name: \"Markus\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\r\n    name: \"David\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\r\n    name: \"Arold\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\r\n    name: \"Joanic\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\r\n    name: \"Sophia\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\r\n    name: \"Aaron\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\r\n    name: \"Steven\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\r\n    name: \"Felix\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\r\n    name: \"Vivien\",\r\n  },\r\n  {\r\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\r\n    name: \"Leonie\",\r\n  },\r\n];\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction LazyLoadAddBalanceDialog(props) {\r\n  const { open, onClose, onSuccess } = props;\r\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\r\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && !hasFetchedAddBalanceDialog) {\r\n      setHasFetchedAddBlanceDialog(true);\r\n      import(\"./AddBalanceDialog\").then(Component => {\r\n        setAddBalanceDialog(() => Component.default);\r\n      });\r\n    }\r\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {AddBalanceDialog && (\r\n        <AddBalanceDialog\r\n          open={open}\r\n          onClose={onClose}\r\n          onSuccess={onSuccess}\r\n        ></AddBalanceDialog>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n}\r\n\r\nLazyLoadAddBalanceDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSuccess: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LazyLoadAddBalanceDialog;\r\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport Routing from \"./Routing\";\r\nimport NavBar from \"./navigation/NavBar\";\r\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\r\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\r\nimport persons from \"../dummy_data/persons\";\r\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\r\nimport {listFiles} from '../../store/action'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {state_to_props} from '../../util/common_utils'\r\n\r\nconst styles = (theme) => ({\r\n  main: {\r\n    marginLeft: theme.spacing(9),\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n});\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nfunction Main(props) {\r\n  const { classes } = props;\r\n  const [selectedTab, setSelectedTab] = useState(null);\r\n  const [CardChart, setCardChart] = useState(null);\r\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\r\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\r\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\r\n\r\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\r\n  const [Dropzone, setDropzone] = useState(null);\r\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\r\n  const [DateTimePicker, setDateTimePicker] = useState(null);\r\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\r\n    false\r\n  );\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\r\n  const [posts, setPosts] = useState([]);\r\n  const [targets, setTargets] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\r\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\r\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\r\n\r\n  const fetchRandomTargets = useCallback(() => {\r\n    const targets = [];\r\n    for (let i = 0; i < 35; i += 1) {\r\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\r\n      const target = {\r\n        id: i,\r\n        number1: Math.floor(Math.random() * 251),\r\n        number2: Math.floor(Math.random() * 251),\r\n        number3: Math.floor(Math.random() * 251),\r\n        number4: Math.floor(Math.random() * 251),\r\n        name: randomPerson.name,\r\n        profilePicUrl: randomPerson.src,\r\n        isActivated: Math.round(Math.random()) ? true : false,\r\n      };\r\n      targets.push(target);\r\n    }\r\n    setTargets(targets);\r\n  }, [setTargets]);\r\n\r\n  const openAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(true);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const closeAddBalanceDialog = useCallback(() => {\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [setIsAddBalanceDialogOpen]);\r\n\r\n  const onPaymentSuccess = useCallback(() => {\r\n    pushMessageToSnackbar({\r\n      text: \"Your balance has been updated.\",\r\n    });\r\n    setIsAddBalanceDialogOpen(false);\r\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\r\n\r\n  const fetchRandomStatistics = useCallback(() => {\r\n    const statistics = { profit: [], views: [] };\r\n    const iterations = 300;\r\n    const oneYearSeconds = 60 * 60 * 24 * 365;\r\n    let curProfit = Math.round(3000 + Math.random() * 1000);\r\n    let curViews = Math.round(3000 + Math.random() * 1000);\r\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      curUnix += Math.round(oneYearSeconds / iterations);\r\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\r\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\r\n      statistics.profit.push({\r\n        value: curProfit,\r\n        timestamp: curUnix,\r\n      });\r\n      statistics.views.push({\r\n        value: curViews,\r\n        timestamp: curUnix,\r\n      });\r\n    }\r\n    setStatistics(statistics);\r\n  }, [setStatistics]);\r\n\r\n  const fetchRandomTransactions = useCallback(() => {\r\n    const transactions = [];\r\n    const iterations = 32;\r\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\r\n    const transactionTemplates = [\r\n      {\r\n        description: \"Starter subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -1499,\r\n      },\r\n      {\r\n        description: \"Premium subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -2999,\r\n      },\r\n      {\r\n        description: \"Business subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -4999,\r\n      },\r\n      {\r\n        description: \"Tycoon subscription\",\r\n        isSubscription: true,\r\n        balanceChange: -9999,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 2000,\r\n      },\r\n      {\r\n        description: \"Added funds\",\r\n        isSubscription: false,\r\n        balanceChange: 5000,\r\n      },\r\n    ];\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const randomTransactionTemplate =\r\n        transactionTemplates[\r\n          Math.floor(Math.random() * transactionTemplates.length)\r\n        ];\r\n      const transaction = {\r\n        id: i,\r\n        description: randomTransactionTemplate.description,\r\n        balanceChange: randomTransactionTemplate.balanceChange,\r\n        paidUntil: curUnix + oneMonthSeconds,\r\n        timestamp: curUnix,\r\n      };\r\n      curUnix += oneMonthSeconds;\r\n      transactions.push(transaction);\r\n    }\r\n    transactions.reverse();\r\n    setTransactions(transactions);\r\n  }, [setTransactions]);\r\n\r\n  const fetchRandomMessages = useCallback(() => {\r\n    shuffle(persons);\r\n    const messages = [];\r\n    const iterations = persons.length;\r\n    const oneDaySeconds = 60 * 60 * 24;\r\n    let curUnix = Math.round(\r\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\r\n    );\r\n    for (let i = 0; i < iterations; i += 1) {\r\n      const person = persons[i];\r\n      const message = {\r\n        id: i,\r\n        src: person.src,\r\n        date: curUnix,\r\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\r\n      };\r\n      curUnix += oneDaySeconds;\r\n      messages.push(message);\r\n    }\r\n    messages.reverse();\r\n    setMessages(messages);\r\n  }, [setMessages]);\r\n\r\n\r\n\r\n  const toggleAccountActivation = useCallback(() => {\r\n    if (pushMessageToSnackbar) {\r\n      if (isAccountActivated) {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now deactivated.\",\r\n        });\r\n      } else {\r\n        pushMessageToSnackbar({\r\n          text: \"Your account is now activated.\",\r\n        });\r\n      }\r\n    }\r\n    setIsAccountActivated(!isAccountActivated);\r\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\r\n\r\n  const selectDashboard = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Dashboard\";\r\n    setSelectedTab(\"Dashboard\");\r\n    if (!hasFetchedCardChart) {\r\n      setHasFetchedCardChart(true);\r\n      import(\"../../shared/components/CardChart\").then((Component) => {\r\n        setCardChart(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setCardChart,\r\n    hasFetchedCardChart,\r\n    setHasFetchedCardChart,\r\n  ]);\r\n\r\n  const selectPosts = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Posts\";\r\n    setSelectedTab(\"Posts\");\r\n    if (!hasFetchedEmojiTextArea) {\r\n      setHasFetchedEmojiTextArea(true);\r\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\r\n        setEmojiTextArea(Component.default);\r\n      });\r\n    }\r\n\r\n    if (!hasFetchedDropzone) {\r\n      setHasFetchedDropzone(true);\r\n      import(\"../../shared/components/Dropzone\").then((Component) => {\r\n        setDropzone(Component.default);\r\n      });\r\n    }\r\n    if (!hasFetchedDateTimePicker) {\r\n      setHasFetchedDateTimePicker(true);\r\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\r\n        setDateTimePicker(Component.default);\r\n      });\r\n    }\r\n  }, [\r\n    setSelectedTab,\r\n    setEmojiTextArea,\r\n\r\n    setDropzone,\r\n    setDateTimePicker,\r\n    hasFetchedEmojiTextArea,\r\n    setHasFetchedEmojiTextArea,\r\n    hasFetchedImageCropper,\r\n    setHasFetchedImageCropper,\r\n    hasFetchedDropzone,\r\n    setHasFetchedDropzone,\r\n    hasFetchedDateTimePicker,\r\n    setHasFetchedDateTimePicker,\r\n  ]);\r\n\r\n  const selectSubscription = useCallback(() => {\r\n    smoothScrollTop();\r\n    document.title = \"WaVer - Subscription\";\r\n    setSelectedTab(\"Subscription\");\r\n  }, [setSelectedTab]);\r\n\r\n  const getPushMessageFromChild = useCallback(\r\n    (pushMessage) => {\r\n      setPushMessageToSnackbar(() => pushMessage);\r\n    },\r\n    [setPushMessageToSnackbar]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchRandomTransactions();\r\n  }, [\r\n    fetchRandomTransactions,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LazyLoadAddBalanceDialog\r\n        open={isAddBalanceDialogOpen}\r\n        onClose={closeAddBalanceDialog}\r\n        onSuccess={onPaymentSuccess}\r\n      />\r\n      <NavBar\r\n        selectedTab={selectedTab}\r\n        messages={messages}\r\n        openAddBalanceDialog={openAddBalanceDialog}\r\n      />\r\n      <ConsecutiveSnackbarMessages\r\n        getPushMessageFromChild={getPushMessageFromChild}\r\n      />\r\n      <main className={classNames(classes.main)}>\r\n        <Routing\r\n          isAccountActivated={isAccountActivated}\r\n          EmojiTextArea={EmojiTextArea}\r\n          CardChart={CardChart}\r\n          Dropzone={Dropzone}\r\n          DateTimePicker={DateTimePicker}\r\n          toggleAccountActivation={toggleAccountActivation}\r\n          pushMessageToSnackbar={pushMessageToSnackbar}\r\n          transactions={transactions}\r\n          statistics={statistics}\r\n  \r\n          targets={targets}\r\n          selectDashboard={selectDashboard}\r\n          selectPosts={selectPosts}\r\n          selectSubscription={selectSubscription}\r\n          openAddBalanceDialog={openAddBalanceDialog}\r\n          setTargets={setTargets}\r\n     \r\n        />\r\n      </main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(memo(Main));\r\n"],"sourceRoot":""}