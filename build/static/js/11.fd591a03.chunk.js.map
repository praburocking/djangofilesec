{"version":3,"sources":["shared/components/ButtonCircularProgress.js","shared/components/HighlightedInformation.js","shared/components/PropsRoute.js","shared/components/NavigationDrawer.js","shared/functions/smoothScrollTop.js","shared/components/Bordered.js","logged_in/components/dashboard/Settings1.js","shared/components/HelpIcon.js","logged_in/components/dashboard/Settings2.js","logged_in/components/dashboard/SettingsArea.js","shared/components/EnhancedTableHead.js","shared/functions/stableSort.js","shared/functions/getSorting.js","shared/components/ConfirmationDialog.js","logged_in/components/dashboard/UserDataArea.js","logged_in/components/dashboard/AccountInformationArea.js","logged_in/components/dashboard/StatisticsArea.js","logged_in/components/dashboard/Dashboard.js","logged_in/components/posts/timeLine.js","logged_in/components/posts/filecard.js","logged_in/components/posts/PostContent.js","shared/components/ActionPaper.js","logged_in/components/posts/AddPostOptions.js","logged_in/components/posts/AddPost.js","logged_in/components/posts/Posts.js","logged_in/components/subscription/SubscriptionTable.js","logged_in/components/subscription/SubscriptionInfo.js","logged_in/components/subscription/Subscription.js","logged_in/components/Routing.js","logged_in/components/navigation/MessageListItem.js","logged_in/components/navigation/MessagePopperButton.js","logged_in/components/navigation/SideDrawer.js","shared/functions/currencyPrettyPrint.js","logged_in/components/navigation/Balance.js","logged_in/components/navigation/NavBar.js","shared/components/ConsecutiveSnackbarMessages.js","logged_in/dummy_data/persons.js","logged_in/components/subscription/LazyLoadAddBalanceDialog.js","logged_in/components/Main.js"],"names":["withStyles","theme","circularProgress","color","palette","secondary","main","withTheme","props","size","classes","pl","display","thickness","className","backgroundColor","warning","light","border","borderWidth","padding","spacing","borderRadius","shape","children","classNames","variant","PropsRoute","component","rest","render","routeProps","finalProps","Object","assign","React","createElement","renderMergedProps","withWidth","closeIcon","marginRight","headSection","width","blackList","common","black","height","noDecoration","textDecoration","open","onClose","anchor","menuItems","selectedItem","useEffect","window","onresize","isWidthUp","style","paddingTop","paddingBottom","justifyContent","disableGutters","onClick","aria-label","map","element","link","key","name","to","button","selected","disableRipple","disableTouchRipple","icon","primary","globLastC","Infinity","smoothScrollTopRec","c","document","documentElement","scrollTop","body","requestAnimationFrame","scrollTo","smoothScrollTop","setTimeout","wrapper","borderColor","greyed","disableVerticalPadding","disableBorderRadius","paddingLeft","paddingRight","inputOptions","numberInput","numberInputInput","dBlock","listItemLeftPadding","AccordionDetails","paddintTop","pushMessageToSnackbar","useState","isSaveLoading","setIsSaveLoading","isDefaultLoading","setIsDefaultLoading","option1","setOption1","option2","setOption2","option3","setOption3","option4","setOption4","option5","setOption5","option6","setOption6","handleChange","useCallback","event","target","value","Error","resetState","onSetDefault","text","onSubmit","inputs","state","label","stateName","Accordion","AccordionSummary","expandIcon","Typography","List","disablePadding","index","ListItem","divider","ListItemText","FormControl","ListItemSecondaryAction","Select","onChange","input","OutlinedInput","labelWidth","MenuProps","disableScrollLock","innerElement","MenuItem","type","inputProps","step","Box","mr","Button","disabled","ButtonCircularProgress","tooltipTypo","whiteSpace","typography","caption","white","tooltip","verticalAlign","fontSize","helpIcon","marginLeft","transition","transitions","create","duration","short","easing","easeInOut","title","isHovered","setIsHovered","onMouseOver","onMouseLeave","Tooltip","enterTouchDelay","onFocus","onBlur","cursor","breakpoints","down","listItem","up","option7","setOption7","handleInputChange","handleCheckboxChange","checked","secondaryAction","Checkbox","helpText","length","SettingsArea","tableSortLabel","userSelect","noIcon","paddingFix","order","orderBy","rows","onRequestSort","createSortHandler","property","TableHead","TableRow","row","TableCell","align","numeric","sortDirection","placement","enterDelay","TableSortLabel","active","id","direction","stableSort","array","cmp","stabilizedThis","el","sort","a","b","desc","getSorting","ConfirmationDialog","loading","content","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","tableWrapper","overflowX","alignRight","flexDirection","alignItems","blackIcon","avatar","firstData","iconButton","dNone","targets","setTargets","setOrder","setOrderBy","page","setPage","isDeleteTargetDialogOpen","setIsDeleteTargetDialogOpen","deleteTargetDialogRow","setDeleteTargetDialogRow","isDeleteTargetLoading","setIsDeleteTargetLoading","handleRequestSort","__","_orderBy","_order","deleteTarget","_targets","findIndex","splice","handleChangePage","_","handleDeleteTargetDialogClose","handleDeleteTargetDialogOpen","toggleTarget","isActivated","Table","aria-labelledby","rowCount","TableBody","slice","hover","tabIndex","scope","Avatar","src","profilePicUrl","number1","number2","number3","number4","IconButton","m","HighlightedInformation","TablePagination","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","select","selectIcon","actions","labelRowsPerPage","paper","borderBottomLeftRadius","borderBottomRightRadius","toolbar","scaleMinus","transform","from","spin","animation","listItemSecondaryAction","toggleAccountActivation","isAccountActivated","Paper","Toolbar","ListItemIcon","Switch","CardChart","data","profit","views","Grid","container","item","xs","md","Dashboard","useStyles","makeStyles","timeLine","secondaryTail","DownloadHistory","console","log","downloadHistory","Timeline","curHistory","TimelineItem","TimelineOppositeContent","time","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","elevation","download_success","ip","root","minWidth","minHeight","bullet","margin","deleteButton","getContrastText","red","pos","FileCard","openDownload","setOpenDownload","openDelete","setOpenDelete","openEdit","setOpenEdit","encryptKeyRef","useRef","setDownloadHistory","handleClose","download","record","current","downloadFiles","file","downloadResp","status","downloadUrl","URL","createObjectURL","Blob","href","setAttribute","appendChild","click","remove","message","handleDownloadHistory","getDownloadHistory","response","handeDelete","deleteFile","deleteResp","includes","deleteFromStore","Card","CardContent","justify","description","CardActions","fullWidth","ButtonGroup","undefined","scroll","aria-describedby","TextField","autoComplete","inputRef","multiline","defaultValue","connect","state_to_props","listFiles","openAddPostModal","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeletePostDialogLoading","setIsDeletePostDialogLoading","closeDeletePostDialog","onDelete","printImageGrid","files","p","sm","disableElevation","Divider","rowsPerPageOptions","files_count","helpPadding","maxWidth","fullWidthActions","pt","values","pb","pr","action","floatButtonWrapper","position","top","right","zIndex","inputRoot","uploadIcon","imgWrapper","img","borderTopLeftRadius","uploadText","emojiTextArea","borderTopRightRadius","Dropzone","deleteItem","onDrop","EmojiTextArea","encrpytKey","reEncrpytKey","DateTimePicker","printFile","uploadAt","onChangeUploadAt","accept","fullHeight","paragraph","mb","inputClassName","maxCharacters","rightContent","emojiSet","placeholder","AddPost","ImageCropper","setFiles","Date","setUploadAt","setLoading","acceptedFiles","isErrorMessage","curfile","preview","getTime","handleUpload","FormData","append","uploadfile","resp","Posts","selectPosts","isAddPostPaperOpen","setIsAddPostPaperOpen","closeAddPostModal","blackBackground","contentWrapper","large","plan","setUserDetailsToStore","transactions","dense","isNameEdit","setNameEdit","user","username","setName","isPasswordEdit","setPasswordEdit","oldPassword","newPassword","userImageUrl","setUserImageUrl","uploadFile","useDropzone","getRootProps","getInputProps","isDragActive","getUserImage","imgResp","urlCreator","webkitURL","imageUrl","asyncprocess","addUserImage","updatePassword","changePassword","old_password","new_password","Badge","badgeContent","alt","userName","demo","edge","e","InputProps","endAdornment","InputAdornment","userFetchType","UPDATE","license","totalSpace","usedSpace","licenseType","option","email","openAddBalanceDialog","selectSubscription","marginTop","marginBottom","memo","posts","setPosts","statistics","selectDashboard","path","Subscription","exact","MessageListItem","hasErrorOccurred","setHasErrorOccurred","handleError","ListItemAvatar","onError","formatDistance","date","tabContainer","overflowY","maxHeight","popoverPaper","noShadow","boxShadow","messages","anchorEl","isOpen","setIsOpen","handleClick","handleClickAway","buttonRef","Popover","anchorOrigin","vertical","horizontal","transformOrigin","AppBar","styles","Drawer","currencyPrettyPrint","cents","toLocaleString","currency","outlinedInput","balance","readOnly","appBar","shadows","sharp","leavingScreen","appBarToolbar","accountAvatar","drawerPaper","smBordered","menuLink","iconListItem","colorbox","backgroudColor","left","textPrimary","mobileItemSelected","brandText","fontFamily","fontWeight","justifyCenter","permanentDrawerListItem","emtStores","selectedTab","links","isMobileOpen","setIsMobileOpen","setIsSideDrawerOpen","openMobileDrawer","closeMobileDrawer","logOut","signout","signOutRes","deleteAuthorizationCookies","desktop","mobile","Hidden","smUp","xsDown","ref","node","NavigationDrawer","getPushMessageFromChild","messageInfo","setMessageInfo","queue","processQueue","shift","reason","pushMessage","push","Snackbar","disableWindowBlurListener","autoHideDuration","onExited","ContentProps","process","LazyLoadAddBalanceDialog","onSuccess","AddBalanceDialog","setAddBalanceDialog","hasFetchedAddBalanceDialog","setHasFetchedAddBlanceDialog","then","Component","default","setSelectedTab","setCardChart","hasFetchedCardChart","setHasFetchedCardChart","setEmojiTextArea","hasFetchedEmojiTextArea","setHasFetchedEmojiTextArea","hasFetchedImageCropper","setHasFetchedImageCropper","setDropzone","hasFetchedDropzone","setHasFetchedDropzone","setDateTimePicker","hasFetchedDateTimePicker","setHasFetchedDateTimePicker","setTransactions","setStatistics","setMessages","setIsAccountActivated","isAddBalanceDialogOpen","setIsAddBalanceDialogOpen","setPushMessageToSnackbar","i","randomPerson","persons","Math","floor","random","round","closeAddBalanceDialog","onPaymentSuccess","fetchRandomTransactions","curProfit","curViews","curUnix","oneYearSeconds","timestamp","oneMonthSeconds","transactionTemplates","isSubscription","balanceChange","randomTransactionTemplate","transaction","paidUntil","reverse","j","shuffle","iterations","ConsecutiveSnackbarMessages"],"mappings":"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","file":"static/js/11.fd591a03.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CircularProgress, Box, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  circularProgress: {\n    color: theme.palette.secondary.main\n  }\n});\n\nfunction ButtonCircularProgress(props) {\n  const { size, classes } = props;\n  return (\n    <Box color=\"secondary.main\" pl={1.5} display=\"flex\">\n      <CircularProgress\n        size={size ? size : 24}\n        thickness={size ? (size / 5) * 24 : 5}\n        className={classes.circularProgress}\n      />\n    </Box>\n  );\n}\n\nButtonCircularProgress.propTypes = {\n  size: PropTypes.number,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ButtonCircularProgress);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Typography, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  main: {\n    backgroundColor: theme.palette.warning.light,\n    border: `${theme.border.borderWidth}px solid ${theme.palette.warning.main}`,\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius\n  }\n});\n\nfunction HighlighedInformation(props) {\n  const { className, children, classes } = props;\n  return (\n    <div className={classNames(classes.main, className ? className : null)}>\n      <Typography variant=\"body2\">{children}</Typography>\n    </div>\n  );\n}\n\nHighlighedInformation.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.array\n  ]).isRequired,\n  className: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(HighlighedInformation);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\n\nconst renderMergedProps = (component, ...rest) => {\n  const finalProps = Object.assign({}, ...rest);\n  return React.createElement(component, finalProps);\n};\n\n/**\n * Wrapper around the Router component, which makes it pass the properties\n * to it's child.\n * Taken from https://github.com/ReactTraining/react-router/issues/4105\n */\nconst PropsRoute = ({ component, ...rest }) => (\n  <Route\n    {...rest}\n    render={routeProps => renderMergedProps(component, routeProps, rest)}\n  />\n);\n\nPropsRoute.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node])\n};\n\nexport default PropsRoute;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Drawer,\n  withStyles,\n  IconButton,\n  Typography,\n  withWidth,\n  isWidthUp,\n  Toolbar\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeIcon: {\n    marginRight: theme.spacing(0.5)\n  },\n  headSection: {\n    width: 200\n  },\n  blackList: {\n    backgroundColor: theme.palette.common.black,\n    height: \"100%\"\n  },\n  noDecoration: {\n    textDecoration: \"none !important\"\n  }\n});\n\nfunction NavigationDrawer(props) {\n  const {\n    width,\n    open,\n    onClose,\n    anchor,\n    classes,\n    menuItems,\n    selectedItem,\n    theme\n  } = props;\n\n  useEffect(() => {\n    window.onresize = () => {\n      if (isWidthUp(\"sm\", width) && open) {\n        onClose();\n      }\n    };\n  }, [width, open, onClose]);\n\n  return (\n    <Drawer variant=\"temporary\" open={open} onClose={onClose} anchor={anchor}>\n      <Toolbar className={classes.headSection}>\n        <ListItem\n          style={{\n            paddingTop: theme.spacing(0),\n            paddingBottom: theme.spacing(0),\n            height: \"100%\",\n            justifyContent: anchor === \"left\" ? \"flex-start\" : \"flex-end\"\n          }}\n          disableGutters\n        >\n          <ListItemIcon className={classes.closeIcon}>\n            <IconButton onClick={onClose} aria-label=\"Close Navigation\">\n              <CloseIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      </Toolbar>\n      <List className={classes.blackList}>\n        {menuItems.map(element => {\n          if (element.link) {\n            return (\n              <Link\n                key={element.name}\n                to={element.link}\n                className={classes.noDecoration}\n                onClick={onClose}\n              >\n                <ListItem\n                  button\n                  selected={selectedItem === element.name}\n                  /**\n                   * We disable ripple as it will make a weird animation\n                   * with primary and secondary color\n                   */\n                  disableRipple\n                  disableTouchRipple\n                >\n                  <ListItemIcon>{element.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={\n                      <Typography variant=\"subtitle1\" className=\"text-white\">\n                        {element.name}\n                      </Typography>\n                    }\n                  />\n                </ListItem>\n              </Link>\n            );\n          }\n          return (\n            <ListItem button key={element.name} onClick={element.onClick}>\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography variant=\"subtitle1\" className=\"text-white\">\n                    {element.name}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigationDrawer.propTypes = {\n  anchor: PropTypes.string.isRequired,\n  theme: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  menuItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired,\n  selectedItem: PropTypes.string\n};\n\nexport default withWidth()(\n  withStyles(styles, { withTheme: true })(NavigationDrawer)\n);\n","/**\n * When called scrolls smooth to the top of the page.\n * globLastC prevents shaky animations when scrolling to\n * bottom while topscrolling.\n */\nlet globLastC = Infinity;\n\nfunction smoothScrollTopRec() {\n  const c = document.documentElement.scrollTop || document.body.scrollTop;\n  if (c > 0 && globLastC > c) {\n    globLastC = c;\n    window.requestAnimationFrame(smoothScrollTopRec);\n    window.scrollTo(0, c - c / 8);\n  } else {\n    globLastC = Infinity;\n  }\n}\n\nfunction smoothScrollTop() {\n  /**\n   * Normally this gets called from componentDidMount()\n   * Not waiting a tiny fraction of time can lead\n   * to shaky behaviour\n   */\n  setTimeout(() => {\n    smoothScrollTopRec();\n  }, 10);\n}\n\nexport default smoothScrollTop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  wrapper: {\n    border: `${theme.border.borderWidth}px solid ${theme.border.borderColor}`\n  },\n  greyed: {\n    border: `${theme.border.borderWidth}px solid rgba(0, 0, 0, 0.23)`\n  }\n});\n\nfunction Bordered(props) {\n  const {\n    classes,\n    theme,\n    disableVerticalPadding,\n    disableBorderRadius,\n    children,\n    variant\n  } = props;\n  return (\n    <div\n      className={variant === \"greyed\" ? classes.greyed : classes.wrapper}\n      style={{\n        paddingLeft: disableVerticalPadding ? 0 : theme.spacing(2),\n        paddingRight: disableVerticalPadding ? 0 : theme.spacing(2),\n        borderRadius: disableBorderRadius ? 0 : theme.shape.borderRadius\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nBordered.propTypes = {\n  classes: PropTypes.object,\n  theme: PropTypes.object,\n  disableVerticalPadding: PropTypes.bool,\n  disableBorderRadius: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n    PropTypes.array\n  ]),\n  variant: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(Bordered);\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  Button,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  ListItemText,\n  OutlinedInput,\n  AccordionDetails,\n  MenuItem,\n  FormControl,\n  Select,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  dBlock: { display: \"block\" },\n  listItemLeftPadding: {\n    paddingRight: theme.spacing(3),\n  },\n  AccordionDetails: {\n    paddintTop: theme.spacing(0),\n    justifyContent: \"flex-end\",\n  },\n});\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction Settings1(props) {\n  const { classes, pushMessageToSnackbar } = props;\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [option1, setOption1] = useState(\"None\");\n  const [option2, setOption2] = useState(\"None\");\n  const [option3, setOption3] = useState(\"None\");\n  const [option4, setOption4] = useState(\"None\");\n  const [option5, setOption5] = useState(\"2 Days\");\n  const [option6, setOption6] = useState(7500);\n\n  const handleChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      if (name === \"option6\") {\n        if (value > 7500 || value < 1000) {\n          return;\n        }\n      }\n      switch (name) {\n        case \"option1\": {\n          setOption1(value);\n          break;\n        }\n        case \"option2\": {\n          setOption2(value);\n          break;\n        }\n        case \"option3\": {\n          setOption3(value);\n          break;\n        }\n        case \"option4\": {\n          setOption4(value);\n          break;\n        }\n        case \"option5\": {\n          setOption5(value);\n          break;\n        }\n        case \"option6\": {\n          setOption6(value);\n          break;\n        }\n        default:\n          throw new Error(\"No branch selected in switch statement.\");\n      }\n    },\n    [setOption1, setOption2, setOption3, setOption4, setOption5, setOption6]\n  );\n\n  const resetState = useCallback(() => {\n    setIsSaveLoading(false);\n    setIsDefaultLoading(false);\n    setOption1(\"None\");\n    setOption2(\"None\");\n    setOption3(\"None\");\n    setOption4(\"None\");\n    setOption5(\"2 Days\");\n    setOption6(7500);\n  }, [\n    setIsSaveLoading,\n    setIsDefaultLoading,\n    setOption1,\n    setOption2,\n    setOption3,\n    setOption4,\n    setOption5,\n    setOption6,\n  ]);\n\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\",\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState]);\n\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\",\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [setIsSaveLoading, pushMessageToSnackbar]);\n\n  const inputs = [\n    {\n      state: option1,\n      label: \"Option 1\",\n      stateName: \"option1\",\n    },\n    {\n      state: option2,\n      label: \"Option 2\",\n      stateName: \"option2\",\n    },\n    {\n      state: option3,\n      label: \"Option 3\",\n      stateName: \"option3\",\n    },\n    {\n      state: option4,\n      label: \"Option 4\",\n      stateName: \"option4\",\n    },\n  ];\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Settings 1</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n        <List disablePadding>\n          <Bordered disableVerticalPadding disableBorderRadius>\n            {inputs.map((element, index) => (\n              <ListItem\n                className=\"listItemLeftPadding\"\n                disableGutters\n                divider\n                key={index}\n              >\n                <ListItemText>\n                  <Typography variant=\"body2\">{element.label}</Typography>\n                </ListItemText>\n                <FormControl variant=\"outlined\">\n                  <ListItemSecondaryAction\n                    className={classes.ListItemSecondaryAction}\n                  >\n                    <Select\n                      value={element.state}\n                      onChange={handleChange}\n                      input={\n                        <OutlinedInput\n                          name={element.stateName}\n                          labelWidth={0}\n                          className={classes.numberInput}\n                          classes={{ input: classes.numberInputInput }}\n                        />\n                      }\n                      MenuProps={{ disableScrollLock: true }}\n                    >\n                      {inputOptions.map((innerElement) => (\n                        <MenuItem value={innerElement} key={innerElement}>\n                          {innerElement}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </ListItemSecondaryAction>\n                </FormControl>\n              </ListItem>\n            ))}\n            <ListItem className=\"listItemLeftPadding\" disableGutters divider>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 5</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <Select\n                    value={option5}\n                    onChange={handleChange}\n                    input={\n                      <OutlinedInput\n                        name=\"option5\"\n                        labelWidth={0}\n                        className={classes.numberInput}\n                        classes={{ input: classes.numberInputInput }}\n                      />\n                    }\n                    MenuProps={{ disableScrollLock: true }}\n                  >\n                    {[\n                      \"Always\",\n                      \"6 Hours\",\n                      \"12 Hours\",\n                      \"1 Day\",\n                      \"2 Days\",\n                      \"3 Days\",\n                      \"1 Week\",\n                    ].map((element) => (\n                      <MenuItem value={element} key={element}>\n                        {element}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n            <ListItem className=\"listItemLeftPadding\" disableGutters>\n              <ListItemText>\n                <Typography variant=\"body2\">Option 6</Typography>\n              </ListItemText>\n              <FormControl variant=\"outlined\">\n                <ListItemSecondaryAction\n                  className={classes.ListItemSecondaryAction}\n                >\n                  <OutlinedInput\n                    labelWidth={0}\n                    name=\"option6\"\n                    value={option6}\n                    type=\"number\"\n                    onChange={handleChange}\n                    className={classes.numberInput}\n                    classes={{ input: classes.numberInputInput }}\n                    inputProps={{ step: 20 }}\n                  />\n                </ListItemSecondaryAction>\n              </FormControl>\n            </ListItem>\n          </Bordered>\n        </List>\n      </AccordionDetails>\n      <AccordionDetails className={classes.AccordionDetails}>\n        <Box mr={1}>\n          <Button\n            onClick={onSetDefault}\n            disabled={isSaveLoading || isDefaultLoading}\n          >\n            Default {isDefaultLoading && <ButtonCircularProgress />}\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={isSaveLoading || isDefaultLoading}\n          onClick={onSubmit}\n        >\n          Save {isSaveLoading && <ButtonCircularProgress />}\n        </Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nSettings1.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(Settings1));\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip, Typography, withStyles } from \"@material-ui/core\";\nimport HelpIconOutline from \"@material-ui/icons/HelpOutline\";\n\nconst styles = theme => ({\n  tooltipTypo: {\n    whiteSpace: \"pre-line !important\",\n    ...theme.typography.caption,\n    color: theme.palette.common.white\n  },\n  tooltip: {\n    verticalAlign: \"middle\",\n    fontSize: \"1.25rem\"\n  },\n  helpIcon: {\n    marginLeft: theme.spacing(1),\n    \"@media (max-width: 350px)\": {\n      marginLeft: theme.spacing(0.5)\n    },\n    transition: theme.transitions.create([\"color\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut\n    })\n  }\n});\n\nfunction HelpIcon(props) {\n  const { classes, title } = props;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const onMouseOver = useCallback(() => {\n    setIsHovered(true);\n  }, []);\n\n  const onMouseLeave = useCallback(() => {\n    setIsHovered(false);\n  }, []);\n\n  return (\n    <Tooltip\n      title={\n        <Typography variant=\"body2\" className={classes.tooltipTypo}>\n          {title}\n        </Typography>\n      }\n      className={classes.tooltip}\n      enterTouchDelay={300}\n    >\n      <HelpIconOutline\n        /**\n         * We have to use onMouseOver and not onMouseEnter, because if we have overlapping\n         * tooltips, the onMouseEnter wont fire when the old tooltip is fading\n         * */\n        onMouseOver={onMouseOver}\n        onFocus={onMouseOver}\n        onBlur={onMouseLeave}\n        onMouseLeave={onMouseLeave}\n        color={isHovered ? \"primary\" : \"inherit\"}\n        className={classes.helpIcon}\n        style={{ cursor: isHovered ? \"pointer\" : \"auto\" }}\n      />\n    </Tooltip>\n  );\n}\n\nHelpIcon.propTypes = {\n  classes: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default withStyles(styles, { withTheme: true })(HelpIcon);\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  FormControl,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Checkbox,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport HelpIcon from \"../../../shared/components/HelpIcon\";\nimport Bordered from \"../../../shared/components/Bordered\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\n\nconst styles = (theme) => ({\n  numberInput: {\n    width: 120,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: 80,\n    },\n    \"@media (max-width: 350px)\": {\n      width: 65,\n    },\n  },\n  numberInputInput: {\n    padding: \"9px 14.5px\",\n    \"@media (max-width: 380px)\": {\n      padding: \"9px 8.5px\",\n    },\n    \"@media (max-width: 350px)\": {\n      padding: \"9px 6.5px\",\n    },\n  },\n  listItem: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(4),\n    },\n    paddingLeft: 100,\n  },\n  AccordionDetails: {\n    paddingTop: theme.spacing(0),\n    justifyContent: \"flex-end\",\n  },\n  dBlock: {\n    display: \"block\",\n  },\n});\n\nfunction Settings2(props) {\n  const { pushMessageToSnackbar, classes } = props;\n  const [isDefaultLoading, setIsDefaultLoading] = useState(false);\n  const [isSaveLoading, setIsSaveLoading] = useState(false);\n  const [option1, setOption1] = useState(false);\n  const [option2, setOption2] = useState(false);\n  const [option3, setOption3] = useState(false);\n  const [option4, setOption4] = useState(false);\n  const [option5, setOption5] = useState(false);\n  const [option6, setOption6] = useState(\"Both\");\n  const [option7, setOption7] = useState(\"2 weeks\");\n\n  const resetState = useCallback(() => {\n    setIsDefaultLoading(false);\n    setIsSaveLoading(false);\n    setOption1(false);\n    setOption2(false);\n    setOption3(false);\n    setOption4(false);\n    setOption5(false);\n    setOption6(\"Both\");\n    setOption7(\"2 weeks\");\n  }, [\n    setOption1,\n    setOption2,\n    setOption3,\n    setOption4,\n    setOption5,\n    setOption6,\n    setOption7,\n  ]);\n\n  const onSubmit = useCallback(() => {\n    setIsSaveLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been saved\",\n      });\n      setIsSaveLoading(false);\n    }, 1500);\n  }, [pushMessageToSnackbar, setIsSaveLoading]);\n\n  const onSetDefault = useCallback(() => {\n    setIsDefaultLoading(true);\n    setTimeout(() => {\n      pushMessageToSnackbar({\n        text: \"Your settings have been reset to default\",\n      });\n      resetState();\n    }, 1500);\n  }, [pushMessageToSnackbar, resetState, setIsDefaultLoading]);\n\n  const handleInputChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      switch (name) {\n        case \"option6\": {\n          setOption6(value);\n          break;\n        }\n        case \"option7\": {\n          setOption7(value);\n          break;\n        }\n        default:\n          throw new Error(\"No branch selected in switch statement\");\n      }\n    },\n    [setOption6, setOption7]\n  );\n\n  const handleCheckboxChange = (name) => (event) => {\n    switch (name) {\n      case \"option1\":\n        setOption1(event.target.checked);\n        break;\n      case \"option2\":\n        setOption2(event.target.checked);\n        break;\n      case \"option3\":\n        setOption3(event.target.checked);\n        break;\n      case \"option4\":\n        setOption4(event.target.checked);\n        break;\n      case \"option5\":\n        setOption5(event.target.checked);\n        break;\n      default:\n        throw new Error(\"No branch selected in switch statement.\");\n    }\n  };\n\n  const inputs = [\n    {\n      title: \"Option 1\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option1\"\n          color=\"primary\"\n          checked={option1}\n          onChange={handleCheckboxChange(\"option1\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 2\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option2\"\n          color=\"primary\"\n          checked={option2}\n          onChange={handleCheckboxChange(\"option2\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 3\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option3\"\n          color=\"primary\"\n          checked={option3}\n          onChange={handleCheckboxChange(\"option3\")}\n        />\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n    {\n      title: \"Option 4\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option4\"\n          color=\"primary\"\n          checked={option4}\n          onChange={handleCheckboxChange(\"option4\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 5\",\n      secondaryAction: (\n        <Checkbox\n          value=\"option5\"\n          color=\"primary\"\n          checked={option5}\n          onChange={handleCheckboxChange(\"option5\")}\n        />\n      ),\n    },\n    {\n      title: \"Option 6\",\n      secondaryAction: (\n        <Select\n          value={option6}\n          input={\n            <OutlinedInput\n              onChange={handleInputChange}\n              labelWidth={0}\n              className={classes.numberInput}\n              classes={{ input: classes.numberInputInput }}\n              name=\"option6\"\n            />\n          }\n        >\n          <MenuItem value=\"Both\">Both</MenuItem>\n          <MenuItem value=\"Male+\">Male+</MenuItem>\n          <MenuItem value=\"Female+\">Female+</MenuItem>\n          <MenuItem value=\"Only male\">Only male</MenuItem>\n          <MenuItem value=\"Only female\">Only female</MenuItem>\n        </Select>\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n    {\n      title: \"Option 7\",\n      secondaryAction: (\n        <Select\n          value={option7}\n          input={\n            <OutlinedInput\n              onChange={handleInputChange}\n              labelWidth={0}\n              className={classes.numberInput}\n              classes={{ input: classes.numberInputInput }}\n              name=\"option7\"\n            />\n          }\n        >\n          <MenuItem value=\"None\">None</MenuItem>\n          <MenuItem value=\"6 hours\">6 hours</MenuItem>\n          <MenuItem value=\"12 hours\">12 hours</MenuItem>\n          <MenuItem value=\"1 day\">1 day</MenuItem>\n          <MenuItem value=\"3 days\">3 days</MenuItem>\n          <MenuItem value=\"1 week\">1 week</MenuItem>\n          <MenuItem value=\"2 weeks\">2 weeks</MenuItem>\n          <MenuItem value=\"1 month\">1 month</MenuItem>\n          <MenuItem value=\"3 months\">3 months</MenuItem>\n          <MenuItem value=\"6 months\">6 months</MenuItem>\n        </Select>\n      ),\n      helpText: \"You can add some further explanation here.\",\n    },\n  ];\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Settings 2</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.dBlock}>\n        <List disablePadding>\n          <Bordered disableVerticalPadding disableBorderRadius>\n            {inputs.map((element, index) => (\n              <ListItem\n                key={index}\n                divider={index !== inputs.length - 1}\n                className=\"listItemLeftPadding\"\n              >\n                <ListItemText>\n                  <Typography variant=\"body2\">\n                    {element.title}\n                    {element.helpText && <HelpIcon title={element.helpText} />}\n                  </Typography>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                  <FormControl variant=\"outlined\">\n                    {element.secondaryAction}\n                  </FormControl>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </Bordered>\n        </List>\n      </AccordionDetails>\n      <AccordionDetails className={classes.AccordionDetails}>\n        <Box mr={1}>\n          <Button\n            onClick={onSetDefault}\n            disabled={isSaveLoading || isDefaultLoading}\n          >\n            Default {isDefaultLoading && <ButtonCircularProgress />}\n          </Button>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={onSubmit}\n          disabled={isSaveLoading || isDefaultLoading}\n        >\n          Save {isSaveLoading && <ButtonCircularProgress />}\n        </Button>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nSettings2.propTypes = {\n  classes: PropTypes.object,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(Settings2);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Settings1 from \"./Settings1\";\nimport Settings2 from \"./Settings2\";\n\nfunction SettingsArea(props) {\n  const { pushMessageToSnackbar } = props;\n  return (\n    <Fragment>\n      <Settings1 pushMessageToSnackbar={pushMessageToSnackbar} />\n      <Settings2 pushMessageToSnackbar={pushMessageToSnackbar} />\n    </Fragment>\n  );\n}\n\nSettingsArea.propTypes = {\n  pushMessageToSnackbar: PropTypes.func\n};\n\nexport default SettingsArea;\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Typography,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  tableSortLabel: {\n    cursor: \"text\",\n    userSelect: \"auto\",\n    color: \"inherit !important\"\n  },\n  noIcon: {\n    \"& path\": {\n      display: \"none !important\"\n    }\n  },\n  paddingFix: {\n    paddingLeft: theme.spacing(3)\n  }\n});\n\nfunction EnhancedTableHead(props) {\n  const { order, orderBy, rows, onRequestSort, classes } = props;\n\n  const createSortHandler = useCallback(\n    property => event => {\n      onRequestSort(event, property);\n    },\n    [onRequestSort]\n  );\n\n  return (\n    <TableHead>\n      <TableRow>\n        {rows.map((row, index) => (\n          <TableCell\n            key={index}\n            align={row.numeric ? \"right\" : \"inherit\"}\n            padding=\"default\"\n            sortDirection={orderBy === row.name ? order : false}\n            className={index === 0 ? classes.paddingFix : null}\n          >\n            {onRequestSort ? (\n              <Tooltip\n                title=\"Sort\"\n                placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\n                enterDelay={300}\n              >\n                <TableSortLabel\n                  active={orderBy === row.id}\n                  direction={order}\n                  onClick={createSortHandler(row.id)}\n                >\n                  <Typography variant=\"body2\">{row.label}</Typography>\n                </TableSortLabel>\n              </Tooltip>\n            ) : (\n              <TableSortLabel\n                className={classNames(classes.tableSortLabel, classes.noIcon)}\n              >\n                <Typography variant=\"body2\" className={classes.label}>\n                  {row.label}\n                </Typography>\n              </TableSortLabel>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func,\n  order: PropTypes.string,\n  orderBy: PropTypes.string,\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(EnhancedTableHead);\n","function stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\nexport default stableSort;\n","function desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\nexport default getSorting;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from \"@material-ui/core\";\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\n\nfunction ConfirmationDialog(props) {\n  const { open, onClose, loading, title, content, onConfirm } = props;\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      disableBackdropClick={loading}\n      disableEscapeKeyDown={loading}\n    >\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>{content}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} disabled={loading}>\n          Close\n        </Button>\n        <Button\n          color=\"secondary\"\n          onClick={onConfirm}\n          variant=\"contained\"\n          disabled={loading}\n        >\n          Yes {loading && <ButtonCircularProgress />}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  loading: PropTypes.bool,\n  title: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  onConfirm: PropTypes.func\n};\n\nexport default ConfirmationDialog;\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TablePagination,\n  TableRow,\n  IconButton,\n  Avatar,\n  Box,\n  Accordion,\n  AccordionSummary,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport PlayCirlceOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EnhancedTableHead from \"../../../shared/components/EnhancedTableHead\";\nimport stableSort from \"../../../shared/functions/stableSort\";\nimport getSorting from \"../../../shared/functions/getSorting\";\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\n\nconst styles = (theme) => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n  },\n  alignRight: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n  },\n  blackIcon: {\n    color: theme.palette.common.black,\n  },\n  avatar: {\n    width: 28,\n    height: 28,\n  },\n  firstData: {\n    paddingLeft: theme.spacing(3),\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n  dBlock: {\n    display: \"block\",\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst rows = [\n  {\n    id: \"icon\",\n    numeric: true,\n    label: \"\",\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    label: \"Name\",\n  },\n  { id: \"number1\", numeric: false, label: \"Category 1\" },\n  { id: \"number2\", numeric: false, label: \"Category 2\" },\n  { id: \"number3\", numeric: false, label: \"Category 3\" },\n  {\n    id: \"number4\",\n    numeric: false,\n    label: \"Category 4\",\n  },\n  {\n    id: \"actions\",\n    numeric: false,\n    label: \"\",\n  },\n];\n\nconst rowsPerPage = 25;\n\nfunction CustomTable(props) {\n  const { pushMessageToSnackbar, classes, targets, setTargets } = props;\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState(null);\n  const [page, setPage] = useState(0);\n  const [isDeleteTargetDialogOpen, setIsDeleteTargetDialogOpen] = useState(\n    false\n  );\n  const [deleteTargetDialogRow, setDeleteTargetDialogRow] = useState(null);\n  const [isDeleteTargetLoading, setIsDeleteTargetLoading] = useState(false);\n\n  const handleRequestSort = useCallback(\n    (__, property) => {\n      const _orderBy = property;\n      let _order = \"desc\";\n      if (orderBy === property && order === \"desc\") {\n        _order = \"asc\";\n      }\n      setOrder(_order);\n      setOrderBy(_orderBy);\n    },\n    [setOrder, setOrderBy, order, orderBy]\n  );\n\n  const deleteTarget = useCallback(() => {\n    setIsDeleteTargetLoading(true);\n    setTimeout(() => {\n      setIsDeleteTargetDialogOpen(false);\n      setIsDeleteTargetLoading(false);\n      const _targets = [...targets];\n      const index = _targets.findIndex(\n        (element) => element.id === deleteTargetDialogRow.id\n      );\n      _targets.splice(index, 1);\n      setTargets(_targets);\n      pushMessageToSnackbar({\n        text: \"Your friend has been removed\",\n      });\n    }, 1500);\n  }, [\n    setIsDeleteTargetDialogOpen,\n    setIsDeleteTargetLoading,\n    pushMessageToSnackbar,\n    setTargets,\n    deleteTargetDialogRow,\n    targets,\n  ]);\n\n  const handleChangePage = useCallback(\n    (_, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  const handleDeleteTargetDialogClose = useCallback(() => {\n    setIsDeleteTargetDialogOpen(false);\n  }, [setIsDeleteTargetDialogOpen]);\n\n  const handleDeleteTargetDialogOpen = useCallback(\n    (row) => {\n      setIsDeleteTargetDialogOpen(true);\n      setDeleteTargetDialogRow(row);\n    },\n    [setIsDeleteTargetDialogOpen, setDeleteTargetDialogRow]\n  );\n\n  const toggleTarget = useCallback(\n    (row) => {\n      const _targets = [...targets];\n      const index = _targets.findIndex((element) => element.id === row.id);\n      row.isActivated = !row.isActivated;\n      _targets[index] = row;\n      if (row.isActivated) {\n        pushMessageToSnackbar({\n          text: \"The row is now activated\",\n        });\n      } else {\n        pushMessageToSnackbar({\n          text: \"The row is now deactivated\",\n        });\n      }\n      setTargets(_targets);\n    },\n    [pushMessageToSnackbar, targets, setTargets]\n  );\n\n  return (\n    <Accordion>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography>Some user data</Typography>\n      </AccordionSummary>\n      <ConfirmationDialog\n        open={isDeleteTargetDialogOpen}\n        title=\"Confirmation\"\n        content={\n          deleteTargetDialogRow ? (\n            <span>\n              {\"Do you really want to remove the friend \"}\n              <b>{deleteTargetDialogRow.name}</b>\n              {\" from your list?\"}\n            </span>\n          ) : null\n        }\n        onClose={handleDeleteTargetDialogClose}\n        onConfirm={deleteTarget}\n        loading={isDeleteTargetLoading}\n      />\n      <Box width=\"100%\">\n        <div className={classes.tableWrapper}>\n          {targets.length > 0 ? (\n            <Table aria-labelledby=\"tableTitle\">\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                rowCount={targets.length}\n                rows={rows}\n              />\n              <TableBody>\n                {stableSort(targets, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <TableRow hover tabIndex={-1} key={index}>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.firstData}\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          src={row.profilePicUrl}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number1}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number2}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number3}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.number4}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        <Box display=\"flex\" justifyContent=\"flex-end\">\n                          {row.isActivated ? (\n                            <IconButton\n                              className={classes.iconButton}\n                              onClick={() => {\n                                toggleTarget(row);\n                              }}\n                              aria-label=\"Pause\"\n                            >\n                              <PauseCircleOutlineIcon\n                                className={classes.blackIcon}\n                              />\n                            </IconButton>\n                          ) : (\n                            <IconButton\n                              className={classes.iconButton}\n                              color=\"primary\"\n                              onClick={() => {\n                                toggleTarget(row);\n                              }}\n                              aria-label=\"Resume\"\n                            >\n                              <PlayCirlceOutlineIcon />\n                            </IconButton>\n                          )}\n                          <IconButton\n                            className={classes.iconButton}\n                            onClick={() => {\n                              handleDeleteTargetDialogOpen(row);\n                            }}\n                            aria-label=\"Delete\"\n                          >\n                            <DeleteIcon className={classes.blackIcon} />\n                          </IconButton>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <Box m={2}>\n              <HighlightedInformation>\n                No friends added yet.\n              </HighlightedInformation>\n            </Box>\n          )}\n        </div>\n        <div className={classes.alignRight}>\n          <TablePagination\n            component=\"div\"\n            count={targets.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              \"aria-label\": \"Previous Page\",\n            }}\n            nextIconButtonProps={{\n              \"aria-label\": \"Next Page\",\n            }}\n            onChangePage={handleChangePage}\n            classes={{\n              select: classes.dNone,\n              selectIcon: classes.dNone,\n              actions: targets.length > 0 ? classes.dBlock : classes.dNone,\n              caption: targets.length > 0 ? classes.dBlock : classes.dNone,\n            }}\n            labelRowsPerPage=\"\"\n          />\n        </div>\n      </Box>\n    </Accordion>\n  );\n}\n\nCustomTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTargets: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {\n  Paper,\n  Toolbar,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Switch,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\n\nconst styles = theme => ({\n  paper: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  toolbar: { justifyContent: \"space-between\" },\n  scaleMinus: {\n    transform: \"scaleX(-1)\"\n  },\n  \"@keyframes spin\": {\n    from: { transform: \"rotate(359deg)\" },\n    to: { transform: \"rotate(0deg)\" }\n  },\n  spin: { animation: \"$spin 2s infinite linear\" },\n  listItemSecondaryAction: { paddingRight: theme.spacing(1) }\n});\n\nfunction AccountInformationArea(props) {\n  const { classes, toggleAccountActivation, isAccountActivated } = props;\n  return (\n    <Paper className={classes.paper}>\n      <Toolbar className={classes.toolbar}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Box mr={2}>\n            <ListItemText\n              primary=\"Status\"\n              secondary={isAccountActivated ? \"Activated\" : \"Not activated\"}\n              className=\"mr-2\"\n            />\n          </Box>\n          <ListItemIcon>\n            <LoopIcon\n              className={classNames(\n                isAccountActivated ? classes.spin : null,\n                classes.scaleMinus\n              )}\n            />\n          </ListItemIcon>\n        </Box>\n        <ListItemSecondaryAction className={classes.listItemSecondaryAction}>\n          <Switch\n            color=\"secondary\"\n            checked={isAccountActivated}\n            onClick={toggleAccountActivation}\n            inputProps={{\n              \"aria-label\": isAccountActivated\n                ? \"Deactivate Account\"\n                : \"Activate Account\"\n            }}\n          />\n        </ListItemSecondaryAction>\n      </Toolbar>\n    </Paper>\n  );\n}\n\nAccountInformationArea.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AccountInformationArea);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, withTheme } from \"@material-ui/core\";\n\nfunction StatisticsArea(props) {\n  const { theme, CardChart, data } = props;\n  return (\n    CardChart &&\n    data.profit.length >= 2 &&\n    data.views.length >= 2 && (\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <CardChart\n            data={data.profit}\n            color={theme.palette.secondary.light}\n            height=\"70px\"\n            title=\"Profit\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <CardChart\n            data={data.views}\n            color={theme.palette.primary.light}\n            height=\"70px\"\n            title=\"Views\"\n          />\n        </Grid>\n      </Grid>\n    )\n  );\n}\n\nStatisticsArea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n  CardChart: PropTypes.elementType\n};\n\nexport default withTheme(StatisticsArea);\n","import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport SettingsArea from \"./SettingsArea\";\nimport UserDataArea from \"./UserDataArea\";\nimport AccountInformationArea from \"./AccountInformationArea\";\nimport StatisticsArea from \"./StatisticsArea\";\n\nfunction Dashboard(props) {\n  const {\n    selectDashboard,\n    CardChart,\n    statistics,\n    toggleAccountActivation,\n    pushMessageToSnackbar,\n    targets,\n    setTargets,\n    isAccountActivated,\n  } = props;\n\n  useEffect(selectDashboard, [selectDashboard]);\n\n  return (\n    <Fragment>\n      <StatisticsArea CardChart={CardChart} data={statistics} />\n      <Box mt={4}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Your Account\n        </Typography>\n      </Box>\n      <AccountInformationArea\n        isAccountActivated={isAccountActivated}\n        toggleAccountActivation={toggleAccountActivation}\n      />\n      <Box mt={4}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          Settings\n        </Typography>\n      </Box>\n      <SettingsArea pushMessageToSnackbar={pushMessageToSnackbar} />\n      <UserDataArea\n        pushMessageToSnackbar={pushMessageToSnackbar}\n        targets={targets}\n        setTargets={setTargets}\n      />\n    </Fragment>\n  );\n}\n\nDashboard.propTypes = {\n  CardChart: PropTypes.elementType,\n  statistics: PropTypes.object.isRequired,\n  toggleAccountActivation: PropTypes.func,\n  pushMessageToSnackbar: PropTypes.func,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setTargets: PropTypes.func.isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  selectDashboard: PropTypes.func.isRequired,\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport HotelIcon from '@material-ui/icons/Hotel';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: '6px 16px',\n  },\n  timeLine: {\n  \n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function DownloadHistory(props) {\n  const classes = useStyles();\nconsole.log(props.downloadHistory)\n  return (\n    <Timeline align=\"alternate\" className={classes.timeLine}>\n\n      {!props.downloadHistory &&  <Typography variant=\"h6\" component=\"h1\">\n             Not Downloaded Yet\n            </Typography>}\n            {props.downloadHistory && props.downloadHistory.length===0 &&  <Typography variant=\"h6\" component=\"h1\">\n             Not Downloaded Yet\n            </Typography>}\n   { props.downloadHistory && props.downloadHistory.map((curHistory)=>(\n<TimelineItem>\n        <TimelineOppositeContent>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n           {curHistory.time}\n          </Typography>\n        </TimelineOppositeContent>\n        <TimelineSeparator>\n          <TimelineDot>\n            <FastfoodIcon />\n          </TimelineDot>\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <Paper elevation={3} className={classes.paper}>\n            <Typography variant=\"h6\" component=\"h1\">\n              Download {curHistory.download_success?\"successful\":\"Failed\"} from IP {curHistory.ip}\n            </Typography>\n          </Paper>\n        </TimelineContent>\n      </TimelineItem>\n    ))}\n    </Timeline>\n  );\n}\n","import React,{useState,useRef,useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card,TextField } from \"@material-ui/core\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport {  red } from \"@material-ui/core/colors\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DownloadHistory from \"./timeLine\";\nimport {downloadFiles,deleteFile,getDownloadHistory} from '../../../services/connectToServer'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 270,\n    minHeight:250,\n    backgroundColor:\"#ff914d38\"\n\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  deleteButton: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    \"&:hover\": {\n      backgroundColor: red[700]\n    }\n  },\n  pos: {\n    fontSize: 12\n  }\n}));\n\n\nexport default function FileCard(props) {\n  const classes = useStyles();\n  // const [openDownloadHist, setOpenDownloadHist] = useState(false);\n  const [openDownload, setOpenDownload] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n   const [openEdit, setOpenEdit] = useState(false);\n\n  const encryptKeyRef=useRef(null);\n  const [downloadHistory,setDownloadHistory]=useState(null);\n  const handleClose = () => {\n    setDownloadHistory(null);\n  };\n\n  // useEffect(() => {\n  //   if (openDownloadHist) {\n  //     const { current: descriptionElement } = descriptionElementRef;\n  //     if (descriptionElement !== null) {\n  //       descriptionElement.focus();\n  //     }\n  //   }\n  // }, [openDownloadHist]);\n\n  const download=async (record)=>\n    {\n      if(encryptKeyRef.current.value===\"\"||encryptKeyRef.current.value===null){\n         props.pushMessageToSnackbar({text:\"empty encryption key\"})\n         return\n      }\n      var downloadResp=await downloadFiles(props.file.id,encryptKeyRef.current.value);\n      if(downloadResp.status===200)\n        { \n            var data=downloadResp.data;\n            const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.setAttribute('download', props.file.name); //any other extension\n            document.body.appendChild(link);\n            link.click();\n            link.remove(); \n        }\n      else\n        {\n          if(downloadResp.data && downloadResp.data.message)\n            {\n              props.pushMessageToSnackbar({text:downloadResp.data.message})\n            }\n          else\n          {\n            props.pushMessageToSnackbar({text:\"Exception while downloading the file\"})\n          }\n        }\n        setOpenDownload(false)\n\n    }\n\n    const handleDownloadHistory=async ()=>{\n      var response=await getDownloadHistory(props.file.id);\n      setDownloadHistory(response.data);\n      console.log(response);\n    }\n\n  const handeEdit=()=>{\n    setOpenEdit(false)\n  }\n    const handeDelete=async()=>\n    {\n        let deleteResp=await deleteFile(props.file.id)\n        if([200,201,204].includes( deleteResp.status) )\n          {\n            props.deleteFromStore(props.file.id)\n          }\n        else\n          {\n            if(deleteResp.data && deleteResp.data.message)\n              {\n                props.pushMessageToSnackbar({text:deleteResp.data.message})\n              }\n            else\n              {\n                props.pushMessageToSnackbar({text:\"Exception while deleting the file, Please try again later\"})\n              }\n            }\n          setOpenDelete(false)\n      }\n\n  return (\n   <div>\n    <Card className={classes.root}>\n      <CardContent style={{minHeight:200}}>\n        <Typography variant=\"h5\" component=\"h2\">\n         {props.file.name}\n        </Typography>\n        <Grid container justify=\"space-between\" color=\"textSecondary\">\n          <Typography className={classes.pos}>Total download : 30</Typography>\n          <Typography className={classes.pos} style={{ color: \"red\" }}>\n            failed :10\n          </Typography>\n        </Grid>\n        <Grid container justify=\"space-between\" color=\"textSecondary\" style={{margin:5,paddingTop:7}}>\n        <Typography variant=\"body2\" component=\"p\">\n          Description:\n        </Typography>\n          <Typography className={classes.pos}>Size :{props.file.size}</Typography>\n        </Grid>\n        <Grid container justify=\"space-between\" style={{minHeight:110}}  >\n        <Typography variant=\"body2\" component=\"p\" >\n        {props.file.description}\n        </Typography>\n        </Grid>\n      </CardContent>\n      <CardActions >\n        <Grid\n          container\n          item\n          justify=\"space-around\"\n          spacing=\"1\"\n          direction={\"row\"}\n        >\n          <Grid item container justify=\"center\" xs={12} fullWidth>\n            <ButtonGroup\n              color=\"primary\"\n              aria-label=\"outlined primary button group\"\n              variant=\"text\"\n            >\n              <Tooltip title=\"view Download History\">\n                <Button aria-label=\"edit\" color=\"secondary\" fullWidth onClick={handleDownloadHistory}>\n                  <HistoryIcon />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"edit description\">\n                <Button aria-label=\"edit\" color=\"secondary\" fullWidth  onClick={()=>setOpenEdit(true)}>\n                  <EditIcon />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"download\">\n                <Button aria-label=\"download\" color=\"secondary\" fullWidth  onClick={()=>setOpenDownload(true)}>\n                  <GetAppIcon />\n                </Button>\n              </Tooltip>\n              <Tooltip title=\"Delete\">\n                <Button aria-label=\"delete\" color=\"secondary\" fullWidth onClick={()=>setOpenDelete(true)}>\n                  <DeleteRoundedIcon style={{ color: \"red\" }}  />\n                </Button>\n              </Tooltip>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n      </CardActions>\n    </Card>\n    <Dialog\n        open={downloadHistory!==null && downloadHistory!==undefined}\n        onClose={handleClose}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n       \n      >\n        <DialogTitle   id=\"scroll-dialog-title\">Download History -  {props.file.name}</DialogTitle>\n        <DialogContent >\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            tabIndex={-1}\n          \n          >\n            <DownloadHistory downloadHistory={downloadHistory}/>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions   >\n          <Button onClick={handleClose} >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDownload}\n        onClose={()=>setOpenDownload(false)}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle   id=\"scroll-dialog-title\">Download -  {props.file.name}</DialogTitle>\n        <DialogContent   >\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            tabIndex={-1}\n          >\n          <TextField\n                      id=\"standard-password-input\"\n          label=\"Encryption Key\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputRef={encryptKeyRef}\n         \n        />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions   >\n          <Button onClick={()=>setOpenDownload(false)}  >\n            cancel\n          </Button>\n          <Button onClick={download} color=\"secondary\" variant=\"contained\">\n            download\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openDelete}\n        onClose={()=>setOpenDelete(false)}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle   id=\"scroll-dialog-title\"> Delete -  {props.file.name}</DialogTitle>\n        <DialogContent>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            tabIndex={-1}\n          >\n          This operation is irreversible. Are you sure want to delete this file ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions   >\n        <Button onClick={()=>setOpenDelete(false)} >\n          cancel\n          </Button>\n          <Button onClick={handeDelete} color=\"secondary\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openEdit}\n        onClose={()=>setOpenEdit(false)}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle   id=\"scroll-dialog-title\"> Edit -  {props.file.name}</DialogTitle>\n        <DialogContent>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            tabIndex={-1}\n          >\n         <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Multiline\"\n          multiline\n          rows={4}\n          defaultValue={props.file.description}\n          variant=\"outlined\"\n        />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions   >\n        <Button onClick={()=>setOpenEdit(false)}  >\n            Cancel\n          </Button>\n          <Button onClick={handeEdit} color=\"secondary\" variant=\"contained\">\n            Edit\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n    </div>\n  );\n}\n","import React, { useState, useCallback,useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  TablePagination,\n  Divider,\n  Toolbar,\n  Typography,\n  Button,\n  Paper,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\n\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport ConfirmationDialog from \"../../../shared/components/ConfirmationDialog\";\nimport {state_to_props} from '../../../util/common_utils'\nimport FileCard from './filecard'\nimport {listFiles} from '../../../store/action'\nimport {connect} from 'react-redux'\n\nconst styles = {\n  dBlock: { display: \"block\" },\n  dNone: { display: \"none\" },\n  toolbar: {\n    justifyContent: \"space-between\",\n  },\n};\n\nconst rowsPerPage = 10;\n\nfunction PostContent(props) {\n  const {\n    pushMessageToSnackbar,\n    openAddPostModal,\n    classes,\n  } = props;\n\n\n  const [page, setPage] = useState(0);\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeletePostDialogLoading, setIsDeletePostDialogLoading] = useState(\n    false\n  );\n\n  const closeDeletePostDialog = useCallback(() => {\n    setIsDeletePostDialogOpen(false);\n    setIsDeletePostDialogLoading(false);\n  }, [setIsDeletePostDialogOpen, setIsDeletePostDialogLoading]);\n\n  useEffect(()=>\n  {\n     props.listFiles()\n  },[])\n\n  const onDelete = useCallback(() => {\n    setIsDeletePostDialogOpen(true);\n  }, [setIsDeletePostDialogOpen]);\n\n  const handleChangePage = useCallback(\n    (__, page) => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  const printImageGrid = useCallback(() => {\n    if ( props.files.length > 0) {\n      return (\n        <Box p={1}>\n          <Grid container spacing={1}>\n            { props.files\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((file) => (\n                <Grid item xs={12} sm={6} md={3} key={file.id}>\n                    <FileCard file={file} setIsDeletePostDialogOpen={setIsDeletePostDialogOpen} pushMessageToSnackbar={pushMessageToSnackbar}/>\n                </Grid>\n              ))}\n          </Grid>\n        </Box>\n      );\n    }\n    return (\n      <Box m={2}>\n        <HighlightedInformation>\n          No posts added yet. Click on &quot;NEW&quot; to create your first one.\n        </HighlightedInformation>\n      </Box>\n    );\n  }, [ props.files, onDelete, page]);\n\n  return (\n    <Paper>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\">Your Encrypted Files</Typography>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={openAddPostModal}\n          disableElevation\n        >\n          Add Files\n        </Button>\n      </Toolbar>\n      <Divider />\n      {printImageGrid()}\n      <TablePagination\n        component=\"div\"\n        rowsPerPageOptions={[5, 10, 25]}\n        count={ props.files_count}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          \"aria-label\": \"Previous Page\",\n        }}\n        nextIconButtonProps={{\n          \"aria-label\": \"Next Page\",\n        }}\n        onChangePage={handleChangePage}\n        classes={{\n          select: classes.dNone,\n          selectIcon: classes.dNone,\n          actions:  props.files.length > 0 ? classes.dBlock : classes.dNone,\n          caption:  props.files.length > 0 ? classes.dBlock : classes.dNone,\n        }}\n        labelRowsPerPage=\"\"\n      />\n      <ConfirmationDialog\n        open={isDeletePostDialogOpen}\n        title=\"Confirmation\"\n        content=\"Do you really want to delete the post?\"\n        onClose={closeDeletePostDialog}\n        loading={isDeletePostDialogLoading}\n      />\n    </Paper>\n  );\n}\n\nPostContent.propTypes = {\n  openAddPostModal: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n};\n\nexport default withStyles(styles)(connect(state_to_props,{listFiles})(PostContent));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Paper,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  helpPadding: {\n    \"@media (max-width:  400px)\": {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  },\n  fullWidth: {\n    width: \"100%\"\n  }\n});\n\nfunction ActionPaper(props) {\n  const {\n    theme,\n    classes,\n    title,\n    content,\n    maxWidth,\n    actions,\n    helpPadding,\n    fullWidthActions\n  } = props;\n  return (\n    <Box pt={1}>\n      <Paper style={{ maxWidth: theme.breakpoints.values[maxWidth] }}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n        {content && (\n          <DialogContent\n            classes={helpPadding ? { root: classes.helpPadding } : null}\n          >\n            {content}\n          </DialogContent>\n        )}\n        {actions && (\n          <Box pb={2} pr={2}>\n            <DialogActions\n              classes={{ action: fullWidthActions ? classes.fullWidth : null }}\n            >\n              {actions}\n            </DialogActions>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n}\n\nActionPaper.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n    PropTypes.string\n  ]),\n  content: PropTypes.element,\n  maxWidth: PropTypes.string,\n  actions: PropTypes.element,\n  helpPadding: PropTypes.bool,\n  fullWidthActions: PropTypes.bool\n};\n\nexport default withStyles(styles, { withTheme: true })(ActionPaper);\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {useDropzone} from 'react-dropzone'\nimport {\n  Typography,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Switch,\n  Box,\n  withStyles,\n  TextField,\n  Grid,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Bordered from \"../../../shared/components/Bordered\";\n\nconst styles = (theme) => ({\n  floatButtonWrapper: {\n    position: \"absolute\",\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: 1000,\n  },\n  inputRoot: {\n    width: 190,\n    \"@media (max-width:  400px)\": {\n      width: 160,\n    },\n    \"@media (max-width:  360px)\": {\n      width: 140,\n    },\n    \"@media (max-width:  340px)\": {\n      width: 120,\n    },\n  },\n  uploadIcon: {\n    fontSize: 48,\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  imgWrapper: { position: \"relative\" },\n  img: {\n    width: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.23)\",\n    borderRadius: theme.shape.borderRadius,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  uploadText: {\n    transition: theme.transitions.create([\"color\", \"box-shadow\", \"border\"], {\n      duration: theme.transitions.duration.short,\n      easing: theme.transitions.easing.easeInOut,\n    }),\n  },\n  numberInput: {\n    width: 110,\n  },\n  numberInputInput: {\n    padding: \"9px 34px 9px 14.5px\",\n  },\n  emojiTextArea: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    marginRight: -1,\n  },\n  dNone: {\n    display: \"none\",\n  },\n});\n\nconst inputOptions = [\"None\", \"Slow\", \"Normal\", \"Fast\"];\n\nfunction AddPostOptions(props) {\n  const {\n    Dropzone,\n    classes,\n    files,\n    deleteItem,\n    onDrop,\n    EmojiTextArea,\n    encrpytKey,\n    DateTimePicker,\n    reEncrpytKey,\n    desc,\n\n    uploadAt,\n    onChangeUploadAt,\n  } = props;\n\n  const printFile = useCallback(() => {\n    if (files[0]) {\n      return (\n        <div className={classes.imgWrapper}>\n        <Grid  className={classes.img}  style={{ height: 148,backgroundColor:\"#ff914d38\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Typography>\n          {files[0].name}\n          </Typography>\n          </Grid> \n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={deleteItem}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Dropzone accept=\"*/*\" onDrop={onDrop} fullHeight>\n        <span className={classes.uploadText}>\n          Click / Drop file <br /> here\n        </span>\n      </Dropzone>\n    );\n  }, [onDrop, files, classes, deleteItem]);\n\n \n\n  return (\n    <Fragment>\n \n      <Typography paragraph variant=\"h6\">\n        Upload File\n      </Typography>\n      <Box mb={2}>\n        {EmojiTextArea && (\n          <EmojiTextArea\n            inputClassName={classes.emojiTextArea}\n            maxCharacters={2200}\n            rightContent={printFile()}\n            emojiSet=\"google\"\n            placeholder=\"Description\"\n            inputRef={desc}\n\n          />\n        )}\n      </Box>\n \n      <List disablePadding>\n        <Bordered disableVerticalPadding disableBorderRadius>\n        {/* <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n              divider={true}\n              key={1}\n            >\n              <ListItemText>\n                <Typography variant=\"body2\">Auto Delete</Typography>\n              </ListItemText>\n              \n                <ListItemSecondaryAction>\n                <Switch\n        color=\"primary\"\n        name=\"checkedB\"\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n      />\n                </ListItemSecondaryAction>\n   \n            </ListItem>\n\n\n          <ListItem divider disableGutters className=\"listItemLeftPadding\">\n            <ListItemText>\n              <Typography variant=\"body2\">Auto Delete File At</Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              {DateTimePicker && (\n                <DateTimePicker\n                  value={uploadAt}\n                  format=\"yyyy/MM/dd hh:mm a\"\n                  onChange={onChangeUploadAt}\n                  disablePast\n                />\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n          */}\n            <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n              divider={true}\n              key={2}\n            >\n              <ListItemText >\n                <Typography variant=\"body2\">Enter Encrption key for the file</Typography>\n              </ListItemText>\n              \n                <ListItemSecondaryAction>\n                <TextField\n                      id=\"standard-password-input\"\n          label=\"Encryption Key\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputRef={encrpytKey}\n        />\n                </ListItemSecondaryAction>\n   \n            </ListItem>\n            <ListItem\n              className=\"listItemLeftPadding\"\n              disableGutters\n           \n              key={3}\n            >\n              <ListItemText>\n                <Typography variant=\"body2\">Re-Enter Encrption key for the file</Typography>\n              </ListItemText>\n              \n                <ListItemSecondaryAction>\n                <TextField\n                      id=\"standard-password-input\"\n          label=\"Encryption Key\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputRef={reEncrpytKey}\n         \n        />\n                </ListItemSecondaryAction>\n   \n            </ListItem>\n       \n        </Bordered>\n      </List>\n    </Fragment>\n  );\n}\n\nAddPostOptions.propTypes = {\n  onEmojiTextareaChange: PropTypes.func,\n  DateTimePicker: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  classes: PropTypes.object,\n  cropperFile: PropTypes.object,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteItem: PropTypes.func,\n  onDrop: PropTypes.func,\n  value: PropTypes.string,\n  characters: PropTypes.number,\n  uploadAt: PropTypes.instanceOf(Date),\n  onChangeUploadAt: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(AddPostOptions);\n","import React, { Fragment, useState, useCallback,useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Box } from \"@material-ui/core\";\nimport ActionPaper from \"../../../shared/components/ActionPaper\";\nimport ButtonCircularProgress from \"../../../shared/components/ButtonCircularProgress\";\nimport AddPostOptions from \"./AddPostOptions\";\nimport {uploadfile} from '../../../services/connectToServer'\n\nfunction AddPost(props) {\n  const {\n    pushMessageToSnackbar,\n    Dropzone,\n    EmojiTextArea,\n    DateTimePicker,\n    ImageCropper,\n    onClose,\n  } = props;\n\n  const [files, setFiles] = useState([]);\n\n  const [uploadAt, setUploadAt] = useState(new Date());\n  const [loading, setLoading] = useState(false);\n  \n  const encrpytKey=useRef(null)\n  const desc=useRef(null)\n const reEncrpytKey=useRef(null)\n\n\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      console.log(\"fielss==>\",acceptedFiles);\n      if (acceptedFiles.length  > 1) {\n        pushMessageToSnackbar({\n          isErrorMessage: true,\n          text: \"You cannot upload more than one file at once\",\n        });\n      } else if (acceptedFiles.length === 0) {\n        pushMessageToSnackbar({\n          isErrorMessage: true,\n          text: \"File size is more than 5MB\",\n        });\n      } else if (acceptedFiles.length === 1) {\n        const curfile = acceptedFiles[0];\n        curfile.preview = URL.createObjectURL(curfile);\n        curfile.key = new Date().getTime();\n        setFiles([curfile]);\n      }\n    },\n    [pushMessageToSnackbar,setFiles]\n  );\n\n\n  const deleteItem = useCallback(() => {\n\n    setFiles([]);\n  }, [setFiles]);\n\n  const handleUpload = useCallback( async() => {\n    setLoading(true);\n    const data = new FormData() \n\n    console.log(\"priivatekey be3fore upload==>\",encrpytKey.current.value)\n    console.log(\"desc be3fore upload==>\",desc.current.value)\n    if(!encrpytKey.current.value ||encrpytKey.current.value===\"\"){\n      pushMessageToSnackbar({\n        text: \"invalid encryption key\",\n      });\n      setLoading(false);\n    }else if(encrpytKey.current.value===reEncrpytKey.current.value)\n    {\n    data.append('file', files[0]);\n    data.append('private_key',encrpytKey.current.value);\n    data.append('description',desc.current.value);\n    const resp= await uploadfile(data);\n    console.log(\"resp ==>\",resp)\n    setFiles([]);\n      pushMessageToSnackbar({\n        text: \"Your File has been uploaded\",\n      });\n      onClose();\n    }\n    else {\n      pushMessageToSnackbar({\n        text: \"encryption key mismatch\",\n      });\n      setLoading(false);\n    }\n   \n  }, [setLoading, onClose, pushMessageToSnackbar,setFiles,files]);\n\n  return (\n    <Fragment>\n      <ActionPaper\n        helpPadding\n        maxWidth=\"md\"\n        content={\n          <AddPostOptions\n            EmojiTextArea={EmojiTextArea}\n            Dropzone={Dropzone}\n            files={files}\n            onDrop={onDrop}\n            deleteItem={deleteItem}\n            DateTimePicker={DateTimePicker}\n            uploadAt={uploadAt}\n            onChangeUploadAt={setUploadAt}\n            encrpytKey={encrpytKey}\n            desc={desc}\n            reEncrpytKey={reEncrpytKey}\n\n            ImageCropper={ImageCropper}\n          />\n        }\n        actions={\n          <Fragment>\n            <Box mr={1}>\n              <Button onClick={onClose} disabled={loading}>\n                Back\n              </Button>\n            </Box>\n            <Button\n              onClick={handleUpload}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={files.length===0 || loading}\n            >\n              Upload {loading && <ButtonCircularProgress />}\n            </Button>\n          </Fragment>\n        }\n      />\n    </Fragment>\n  );\n}\n\nAddPost.propTypes = {\n  pushMessageToSnackbar: PropTypes.func,\n  onClose: PropTypes.func,\n  Dropzone: PropTypes.elementType,\n  EmojiTextArea: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n};\n\nexport default AddPost;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PostContent from \"./PostContent\";\nimport AddPost from \"./AddPost\";\n\nfunction Posts(props) {\n  const {\n    selectPosts,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n \n  } = props;\n  const [isAddPostPaperOpen, setIsAddPostPaperOpen] = useState(false);\n\n  const openAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(true);\n  }, [setIsAddPostPaperOpen]);\n\n  const closeAddPostModal = useCallback(() => {\n    setIsAddPostPaperOpen(false);\n  }, [setIsAddPostPaperOpen]);\n\n  useEffect(() => {\n    selectPosts();\n  }, [selectPosts]);\n\n  if (isAddPostPaperOpen) {\n    return <AddPost\n      onClose={closeAddPostModal}\n      EmojiTextArea={EmojiTextArea}\n      ImageCropper={ImageCropper}\n      Dropzone={Dropzone}\n      DateTimePicker={DateTimePicker}\n      pushMessageToSnackbar={pushMessageToSnackbar}\n    />\n  }\n  return <PostContent\n    openAddPostModal={openAddPostModal}\n    pushMessageToSnackbar={pushMessageToSnackbar}\n  />\n}\n\nPosts.propTypes = {\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setPosts: PropTypes.func.isRequired,\n  pushMessageToSnackbar: PropTypes.func,\n  selectPosts: PropTypes.func.isRequired,\n};\n\nexport default Posts;\n","import React, { useCallback, useState,useRef ,useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TextField,Grid,Dialog,DialogTitle,DialogContentText,DialogContent,DialogActions,Button,Tooltip\n} from \"@material-ui/core\";\n\nimport HighlightedInformation from \"../../../shared/components/HighlightedInformation\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport {state_to_props} from '../../../util/common_utils'\nimport {setUserDetailsToStore,userFetchType} from '../../../store/action'\nimport {connect} from 'react-redux'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {addUserImage,getUserImage,changePassword} from '../../../services/connectToServer'\nimport Badge from '@material-ui/core/Badge';\nimport Dropzone,{useDropzone} from 'react-dropzone'\n\nconst useStyles = makeStyles((theme) => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n    width: \"100%\",\n    padding:\"15px\"\n  },\n  blackBackground: {\n    backgroundColor: theme.palette.primary.main\n  },\n  contentWrapper: {\n    padding: theme.spacing(3),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: theme.spacing(2)\n    },\n    width: \"100%\"\n  },\n  dBlock: {\n    display: \"block !important\"\n  },\n  dNone: {\n    display: \"none !important\"\n  },\n  firstData: {\n    paddingLeft: theme.spacing(3)\n  },\n  large: {\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n}));\n\nconst plan = [\n  {\n    value: 'Free',\n    label: 'Free, 50MB',\n  },\n  {\n    value: 'Plan A',\n    label: 'Plan A, 100MB',\n  },\n  {\n    value: 'Plan B',\n    label: 'Plan B,  200MB',\n  }\n];\n\nfunction SubscriptionTable(props) {\n  const { transactions } = props;\n  const [dense, setDense] = React.useState(false);\n  const [secondary, setSecondary] = React.useState(false);\n  const  [isNameEdit,setNameEdit]=React.useState(false);\n  const[name,setName]=React.useState(props.user.username);\n  const [isPasswordEdit,setPasswordEdit]=useState(false);\n  const oldPassword=useRef(null);\n  const newPassword=useRef(null);\n  const [userImageUrl,setUserImageUrl]=useState(\"\");\n    const onDrop = useCallback(acceptedFiles => {\n    uploadFile(acceptedFiles[0]);\n  }, [])\n \n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept: 'image/jpeg, image/png' })\n   const classes = useStyles();\n    useEffect(()=>{\n        const asyncprocess=async ()=>{\n        let imgResp= await getUserImage()\n        if(imgResp.status===200)\n        {\n        var urlCreator = window.URL || window.webkitURL;\n        var imageUrl = urlCreator.createObjectURL( imgResp.data );\n        console.log(\"imageUrl ==>\",imageUrl);\n        setUserImageUrl(imageUrl);\n        }\n        }\n        asyncprocess()\n    },[])\n const uploadFile=(file)=>\n{\n    if(file)\n    {\n        const data = new FormData() \n        data.append('file', file);\n       \n        console.log(\"onchange\",file);\n        addUserImage(data);\n    }\n}\n \n  console.log(\"subscription tablee \",props)\n const handleNameChange = (e) => {\n   console.log(\"setName \",e)\n    setName(e.target.value);\n  };\nconst updateName=()=>\n{   console.log(\"updatename \",name);\n    props.setUserDetailsToStore({username:name},userFetchType.UPDATE)\n    setNameEdit(false);\n}\nconst updatePassword=async ()=>{\n  console.log(\"pasword ==>  \",oldPassword)\n    console.log(\"new pasword ==>  \",newPassword)\n    if(oldPassword.current.value===\"\" ||oldPassword.current.value===null){\n       props.pushMessageToSnackbar({text:\"empty value for oldPassword\"})\n       return\n    }\n    if(newPassword.current.value===\"\" ||newPassword.current.value===null){\n      props.pushMessageToSnackbar({text:\"empty value for new Password\"})\n      return;\n    }\n  let response=await changePassword({old_password:oldPassword.current.value,new_password:newPassword.current.value});\n  setPasswordEdit(false)\n}\n\n  if (transactions.length > 0) {\n    return (\n      <div className={classes.tableWrapper}>\n      <Grid\n  container\n  direction=\"row\"\n  justify=\"center\"\n  alignItems=\"center\"\n>       \n      <Badge  badgeContent={ <div {...getRootProps()}><input {...getInputProps()} />\n     \n     <EditIcon/></div>\n    } color=\"primary\">\n      <Avatar className={classes.large} variant=\"rounded\"  alt= {props.user.userName} src={userImageUrl}></Avatar>\n      </Badge>\n      </Grid>\n      <div className={classes.demo}>\n            <List dense={dense}>\n          \n                <ListItem>\n                  <ListItemText\n                    primary=\"Name\"\n                    secondary={secondary ? 'Secondary text' : null}\n                  />\n                  <ListItemSecondaryAction>\n                    {isNameEdit===false?<>{props.user.username} <IconButton edge=\"end\" aria-label=\"delete\" onClick={()=>setNameEdit(true)}>\n              <EditIcon />\n               </IconButton> </>: \n                    <TextField id=\"standard-password-input\" type=\"text\" variant=\"outlined\" size=\"small\" value={name} onChange={handleNameChange}\n       InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n             <IconButton edge=\"end\" aria-label=\"update\" onClick={updateName}>\n              <CheckCircleOutlineIcon style={{color:\"green\"}}/>\n               </IconButton>\n               <IconButton edge=\"end\" aria-label=\"close\"  style={{color:\"red\"}} onClick={()=>setNameEdit(false)}>\n                      <HighlightOffIcon />\n                    </IconButton>\n            </InputAdornment>)}}  /> }\n                  </ListItemSecondaryAction>\n                </ListItem>\n\n                 <ListItem>\n                  <ListItemText  primary=\"Total Space\" />\n                  <ListItemSecondaryAction>\n                      <ListItemText >{props.license.totalSpace} MB</ListItemText>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                 <ListItem>\n                  <ListItemText  primary=\"Free Space\" />\n                  <ListItemSecondaryAction>\n                      <ListItemText>{props.license.totalSpace-props.license.usedSpace} MB</ListItemText>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                  <ListItemText  primary=\"Plan\" />\n                  <ListItemSecondaryAction>\n                      <ListItemText><Tooltip title=\"paid verision is not available yet\"><TextField select defaultValue={props.license.licenseType}  disabled variant=\"outlined\" size=\"small\">\n                      {plan.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n                      </TextField></Tooltip></ListItemText>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                 <ListItem>\n                  <ListItemText  primary=\"Email Address\" />\n                  <ListItemSecondaryAction>\n                      <ListItemText>{props.user.email} </ListItemText>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                  <ListItemText\n                    primary=\"Password\"\n                  />\n                  <ListItemSecondaryAction>\n                   <ListItemText> ****** <IconButton edge=\"end\"  onClick={()=>setPasswordEdit(true)}>\n              <EditIcon />\n               </IconButton></ListItemText>\n                  </ListItemSecondaryAction>\n                </ListItem>\n           \n            </List>\n          </div>\n            <Dialog\n        open={isPasswordEdit}\n        onClose={()=>setPasswordEdit(false)}\n        scroll={'paper'}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle   id=\"scroll-dialog-title\">Password reset</DialogTitle>\n        <DialogContent   >\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            tabIndex={-1}\n          >\n          <TextField\n                      id=\"standard-password-input\"\n          label=\"old Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputRef={oldPassword}\n          style={{margin:5}}\n         \n        />\n          <TextField\n                      id=\"standard-password-input\"\n          label=\"new Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          size=\"small\"\n          inputRef={newPassword}\n          style={{margin:5}}\n         \n        />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions   >\n        <Button    onClick={()=>setPasswordEdit(false)}>\n            cancel\n          </Button>\n          <Button  color=\"secondary\" variant=\"contained\"  onClick={updatePassword}>\n            update\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.contentWrapper}>\n      <HighlightedInformation>\n        No transactions received yet.\n      </HighlightedInformation>\n    </div>\n  );\n}\n\nSubscriptionTable.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default connect(state_to_props,{setUserDetailsToStore:setUserDetailsToStore})(SubscriptionTable);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ListItemText, Button, Toolbar, withStyles } from \"@material-ui/core\";\n\nconst styles = {\n  toolbar: {\n    justifyContent: \"space-between\"\n  }\n};\n\nfunction SubscriptionInfo(props) {\n  const { classes, openAddBalanceDialog } = props;\n  return (\n    <Toolbar className={classes.toolbar}>\n      <ListItemText primary=\"Status\" secondary=\"Premium Account\" />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={openAddBalanceDialog}\n        disableElevation\n      >\n        Add Balance\n      </Button>\n    </Toolbar>\n  );\n}\n\nSubscriptionInfo.propTypes = {\n  classes: PropTypes.object.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SubscriptionInfo);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Divider, Paper, withStyles } from \"@material-ui/core\";\nimport SubscriptionTable from \"./SubscriptionTable\";\nimport SubscriptionInfo from \"./SubscriptionInfo\";\n\nconst styles = {\n  divider: {\n    backgroundColor: \"rgba(0, 0, 0, 0.26)\"\n  }\n};\n\nfunction Subscription(props) {\n  const {\n    transactions,\n    classes,\n    openAddBalanceDialog,\n    selectSubscription\n  } = props;\n\n  useEffect(selectSubscription, [selectSubscription]);\n\n  return (\n    <Paper>\n      <List disablePadding>\n        {/* <SubscriptionInfo openAddBalanceDialog={openAddBalanceDialog} />\n        <Divider className={classes.divider} /> */}\n        <SubscriptionTable transactions={transactions}  pushMessageToSnackbar={props.pushMessageToSnackbar}/>\n      </List>\n    </Paper>\n  );\n}\n\nSubscription.propTypes = {\n  classes: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectSubscription: PropTypes.func.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Subscription);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch,Route ,withRouter,Redirect } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport Posts from \"./posts/Posts\";\nimport Subscription from \"./subscription/Subscription\";\nimport PropsRoute from \"../../shared/components/PropsRoute\";\n\nconst styles = (theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    width: \"auto\",\n    [theme.breakpoints.up(\"xs\")]: {\n      width: \"95%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"90%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"82.5%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      width: \"70%\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n});\n\nfunction Routing(props) {\n  const {\n    classes,\n    EmojiTextArea,\n    ImageCropper,\n    Dropzone,\n    DateTimePicker,\n    pushMessageToSnackbar,\n    posts,\n    transactions,\n    toggleAccountActivation,\n    CardChart,\n    statistics,\n    targets,\n    setTargets,\n    setPosts,\n    isAccountActivated,\n    selectDashboard,\n    selectPosts,\n    selectSubscription,\n    openAddBalanceDialog,\n  } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Switch>\n        <PropsRoute\n          path=\"/home/files\"\n          component={Posts}\n          EmojiTextArea={EmojiTextArea}\n          ImageCropper={ImageCropper}\n          Dropzone={Dropzone}\n          DateTimePicker={DateTimePicker}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          posts={posts}\n          setPosts={setPosts}\n          selectPosts={selectPosts}\n        />\n        <PropsRoute\n          path=\"/home/accounts\"\n          component={Subscription}\n          transactions={transactions}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          selectSubscription={selectSubscription}\n          openAddBalanceDialog={openAddBalanceDialog}\n        />\n <Route exact path =\"\" render={()=><Redirect to=\"/home/files\"/>} ></Route>\n        {/* <PropsRoute\n          path=\"\"\n          component={Dashboard}\n          toggleAccountActivation={toggleAccountActivation}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          CardChart={CardChart}\n          statistics={statistics}\n          targets={targets}\n          setTargets={setTargets}\n          isAccountActivated={isAccountActivated}\n          selectDashboard={selectDashboard}\n        /> */}\n      </Switch>\n    </div>\n  );\n}\n\nRouting.propTypes = {\n  classes: PropTypes.object.isRequired,\n  EmojiTextArea: PropTypes.elementType,\n  ImageCropper: PropTypes.elementType,\n  Dropzone: PropTypes.elementType,\n  DateTimePicker: PropTypes.elementType,\n  pushMessageToSnackbar: PropTypes.func,\n  setTargets: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleAccountActivation: PropTypes.func,\n  CardChart: PropTypes.elementType,\n  statistics: PropTypes.object.isRequired,\n  targets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isAccountActivated: PropTypes.bool.isRequired,\n  selectDashboard: PropTypes.func.isRequired,\n  selectPosts: PropTypes.func.isRequired,\n  selectSubscription: PropTypes.func.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Routing));\n","import React, { useCallback, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport formatDistance from \"date-fns/formatDistance\";\n\nfunction MessageListItem(props) {\n  const { message, divider } = props;\n  const [hasErrorOccurred, setHasErrorOccurred] = useState(false);\n\n  const handleError = useCallback(() => {\n    setHasErrorOccurred(true);\n  }, [setHasErrorOccurred]);\n\n  return (\n    <ListItem divider={divider}>\n      <ListItemAvatar>\n        {hasErrorOccurred ? (\n          <ErrorIcon color=\"secondary\" />\n        ) : (\n          <Avatar\n            src={hasErrorOccurred ? null : message.src}\n            onError={handleError}\n          />\n        )}\n      </ListItemAvatar>\n      <ListItemText\n        primary={message.text}\n        secondary={`${formatDistance(message.date * 1000, new Date())} ago`}\n      />\n    </ListItem>\n  );\n}\n\nMessageListItem.propTypes = {\n  message: PropTypes.object.isRequired,\n  divider: PropTypes.bool,\n};\n\nexport default MessageListItem;\n","import React, { Fragment, useState, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Popover,\n  IconButton,\n  AppBar,\n  List,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  withStyles,\n} from \"@material-ui/core\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport MessageListItem from \"./MessageListItem\";\n\nconst styles = (theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  divider: {\n    marginTop: -2,\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n});\n\nfunction MessagePopperButton(props) {\n  const { classes, messages } = props;\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleClickAway = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const id = isOpen ? \"scroll-playground\" : null;\n  return (\n    <Fragment>\n      <IconButton\n        onClick={handleClick}\n        buttonRef={anchorEl}\n        aria-label=\"Open Messages\"\n        aria-describedby={id}\n        color=\"primary\"\n      >\n        <MessageIcon />\n      </IconButton>\n      <Popover\n        disableScrollLock\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <AppBar position=\"static\" color=\"inherit\" className={classes.noShadow}>\n          <Box pt={1} pl={2} pb={1} pr={1}>\n            <Typography variant=\"subtitle1\">Messages</Typography>\n          </Box>\n          <Divider className={classes.divider} />\n        </AppBar>\n        <List dense className={classes.tabContainer}>\n          {messages.length === 0 ? (\n            <ListItem>\n              <ListItemText>\n                You haven&apos;t received any messages yet.\n              </ListItemText>\n            </ListItem>\n          ) : (\n            messages.map((element, index) => (\n              <MessageListItem\n                key={index}\n                message={element}\n                divider={index !== messages.length - 1}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nMessagePopperButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MessagePopperButton);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Drawer,\n  IconButton,\n  Toolbar,\n  Divider,\n  Typography,\n  Box,\n  withStyles\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst drawerWidth = 240;\n\nconst styles = {\n  toolbar: {\n    minWidth: drawerWidth\n  }\n};\n\nfunction SideDrawer(props) {\n  const { classes, onClose, open } = props;\n  return (\n    <Drawer anchor=\"right\" open={open} variant=\"temporary\" onClose={onClose}>\n      <Toolbar disableGutters className={classes.toolbar}>\n        <Box\n          pl={3}\n          pr={3}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          width=\"100%\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">A Sidedrawer</Typography>\n          <IconButton\n            onClick={onClose}\n            color=\"primary\"\n            aria-label=\"Close Sidedrawer\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </Toolbar>\n      <Divider />\n    </Drawer>\n  );\n}\n\nSideDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SideDrawer);\n","function currencyPrettyPrint(cents) {\n  const dollars = cents / 100;\n  return dollars.toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport default currencyPrettyPrint;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { OutlinedInput, withStyles } from \"@material-ui/core\";\nimport currencyPrettyPrint from \"../../../shared/functions/currencyPrettyPrint\";\n\nconst styles = {\n  input: { padding: \"0px 9px\", cursor: \"pointer\" },\n  outlinedInput: {\n    width: 90,\n    height: 40,\n    cursor: \"pointer\"\n  },\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\n\nfunction Balance(props) {\n  const { balance, classes, openAddBalanceDialog } = props;\n  return (\n    <div className={classes.wrapper}>\n      <OutlinedInput\n        value={balance === null ? \"\" : currencyPrettyPrint(balance)}\n        className={classes.outlinedInput}\n        classes={{ input: classes.input }}\n        readOnly\n        labelWidth={0}\n        onClick={openAddBalanceDialog}\n      />\n    </div>\n  );\n}\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Balance);\n","import React, { Fragment, useRef, useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {connect} from 'react-redux'\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Avatar,\n  Drawer,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Hidden,\n  Tooltip,\n  Box,\n  withStyles,\n  isWidthUp,\n  withWidth,\n} from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport MessagePopperButton from \"./MessagePopperButton\";\nimport SideDrawer from \"./SideDrawer\";\nimport Balance from \"./Balance\";\nimport NavigationDrawer from \"../../../shared/components/NavigationDrawer\";\nimport {signout} from '../../../services/connectToServer'\nimport {deleteAuthorizationCookies} from '../../../util/common_utils'\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport {emtStores} from '../../../store/action'\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst styles = (theme) => ({\n  appBar: {\n    boxShadow: theme.shadows[6],\n    backgroundColor: theme.palette.common.white,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      marginLeft: 0,\n    },\n  },\n  appBarToolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    [theme.breakpoints.up(\"lg\")]: {\n      paddingLeft: theme.spacing(4),\n      paddingRight: theme.spacing(4),\n    },\n  },\n  accountAvatar: {\n    backgroundColor: theme.palette.secondary.main,\n    height: 24,\n    width: 24,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: theme.spacing(1.5),\n      marginRight: theme.spacing(1.5),\n    },\n  },\n  drawerPaper: {\n    height: \"100%vh\",\n    whiteSpace: \"nowrap\",\n    border: 0,\n    width: theme.spacing(7),\n    overflowX: \"hidden\",\n    marginTop: theme.spacing(8),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n    backgroundColor: theme.palette.common.black,\n  },\n  smBordered: {\n    [theme.breakpoints.down(\"xs\")]: {\n      borderRadius: \"50% !important\",\n    },\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  iconListItem: {\n    width: \"auto\",\n    borderRadius: theme.shape.borderRadius,\n    paddingTop: 11,\n    paddingBottom: 11,\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  colorbox: {\n    width: \"10px\",\n    height: \"10px\",\n    display: \"inline-block\",\n    backgroudColor: \"#ccc\",\n    position: \"absolute\",\n    left: \"5px\",\n    top: \"5px\"\n},\n  textPrimary: {\n    color: theme.palette.primary.main,\n  },\n  mobileItemSelected: {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n  },\n  brandText: {\n    fontFamily: \"'Baloo Bhaijaan', cursive\",\n    fontWeight: 400,\n  },\n  username: {\n    paddingLeft: 0,\n    paddingRight: theme.spacing(2),\n  },\n  justifyCenter: {\n    justifyContent: \"center\",\n  },\n  permanentDrawerListItem: {\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\n\n\nfunction NavBar(props) {\n  const { selectedTab, messages, classes, width, openAddBalanceDialog } = props;\n  // Will be use to make website more accessible by screen readers\n  const links = useRef([]);\n  const [isMobileOpen, setIsMobileOpen] = useState(false);\n  const [isSideDrawerOpen, setIsSideDrawerOpen] = useState(false);\n\n  const openMobileDrawer = useCallback(() => {\n    setIsMobileOpen(true);\n  }, [setIsMobileOpen]);\n\n  const closeMobileDrawer = useCallback(() => {\n    setIsMobileOpen(false);\n  }, [setIsMobileOpen]);\n\n  const openDrawer = useCallback(() => {\n    setIsSideDrawerOpen(true);\n  }, [setIsSideDrawerOpen]);\n\n  const closeDrawer = useCallback(() => {\n    setIsSideDrawerOpen(false);\n  }, [setIsSideDrawerOpen]);\n\n\n  const logOut=async()=>{\n    const signOutRes=await signout();\n    if([200,204].includes(signOutRes.status))\n    {\n     props.emtStores()\n     deleteAuthorizationCookies();\n    \n    }\n    else\n    {\n        const exception=true;\n    }\n  }\n\n  const menuItems = [\n    \n    {\n      link: \"/home/files\",\n      name: \"Files\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <DescriptionIcon\n            className={\n              selectedTab === \"Posts\" ? classes.textPrimary : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <ImageIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/home/accounts\",\n      name: \"Accounts\",\n      onClick: closeMobileDrawer,\n      icon: {\n        desktop: (\n          <AccountBoxIcon\n            className={\n              selectedTab === \"Subscription\"\n                ? classes.textPrimary\n                : \"text-white\"\n            }\n            fontSize=\"small\"\n          />\n        ),\n        mobile: <AccountBalanceIcon className=\"text-white\" />,\n      },\n    },\n    {\n      link: \"/\",\n      name: \"Logout\",\n      onClick:logOut,\n      icon: {\n        desktop: (\n          <PowerSettingsNewIcon className=\"text-white\" style={{color:\"red\"}} fontSize=\"small\" />\n        ),\n        mobile: <PowerSettingsNewIcon className=\"text-white\" />,\n      },\n    },\n  ];\n  return (\n    <Fragment>\n      <AppBar position=\"sticky\" className={classes.appBar}>\n        <Toolbar className={classes.appBarToolbar}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Hidden smUp>\n              <Box mr={1}>\n                <IconButton\n                  aria-label=\"Open Navigation\"\n                  onClick={openMobileDrawer}\n                  color=\"primary\"\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Box>\n            </Hidden>\n            <Hidden xsDown>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"primary\"\n              >\n                Digy- \n              </Typography>\n              <Typography\n                variant=\"h4\"\n                className={classes.brandText}\n                display=\"inline\"\n                color=\"secondary\"\n              >\n                Coffer\n              </Typography>\n            </Hidden>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            width=\"100%\"\n          >\n            {isWidthUp(\"sm\", width) && (\n              <Box mr={3}>\n                {/* <Balance\n                  balance={2573}\n                  openAddBalanceDialog={openAddBalanceDialog}\n                /> */}\n              </Box>\n            )}\n            <MessagePopperButton messages={messages} />\n            <ListItem\n              disableGutters\n              className={classNames(classes.iconListItem, classes.smBordered)}\n            >\n        \n            </ListItem>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Hidden xsDown>\n        <Drawer //  both drawers can be combined into one for performance\n          variant=\"permanent\"\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          open={false}\n        >\n          <List>\n            {menuItems.map((element, index) => (\n              <Link\n                to={element.link}\n                className={classes.menuLink}\n                onClick={element.onClick}\n                key={index}\n                ref={(node) => {\n                  links.current[index] = node;\n                }}\n              >\n                <Tooltip\n                  title={element.name}\n                  placement=\"right\"\n                  key={element.name}\n                >\n                  <ListItem\n                    selected={selectedTab === element.name}\n                    button\n                    divider={index !== menuItems.length - 1}\n                    className={classes.permanentDrawerListItem}\n                    onClick={() => {\n                      links.current[index].click();\n                    }}\n                    aria-label={\n                      element.name === \"Logout\"\n                        ? \"Logout\"\n                        : `Go to ${element.name}`\n                    }\n                  >\n                    <ListItemIcon className={classes.justifyCenter}>\n                      {element.icon.desktop}\n                    </ListItemIcon>\n                  </ListItem>\n                </Tooltip>\n              </Link>\n            ))}\n          </List>\n        </Drawer>\n      </Hidden>\n      <NavigationDrawer\n        menuItems={menuItems.map((element) => ({\n          link: element.link,\n          name: element.name,\n          icon: element.icon.mobile,\n          onClick: element.onClick,\n        }))}\n        anchor=\"left\"\n        open={isMobileOpen}\n        selectedItem={selectedTab}\n        onClose={closeMobileDrawer}\n      />\n    </Fragment>\n  );\n}\n\nNavBar.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  openAddBalanceDialog: PropTypes.func.isRequired,\n};\n\nexport default withWidth()(withStyles(styles, { withTheme: true })(connect(null,{emtStores})(NavBar)));\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Snackbar, withStyles } from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nfunction ConsecutiveSnackbars(props) {\n  const { classes, getPushMessageFromChild } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageInfo, setMessageInfo] = useState({});\n  const queue = useRef([]);\n\n  const processQueue = useCallback(() => {\n    if (queue.current.length > 0) {\n      setMessageInfo(queue.current.shift());\n      setIsOpen(true);\n    }\n  }, [setMessageInfo, setIsOpen, queue]);\n\n  const handleClose = useCallback((_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const pushMessage = useCallback(message => {\n    queue.current.push({\n      message,\n      key: new Date().getTime(),\n    });\n    if (isOpen) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      setIsOpen(false);\n    } else {\n      processQueue();\n    }\n  }, [queue, isOpen, setIsOpen, processQueue]);\n\n  useEffect(() => {\n    getPushMessageFromChild(pushMessage);\n  }, [getPushMessageFromChild, pushMessage]);\n\n  return (\n    <Snackbar\n      disableWindowBlurListener\n      key={messageInfo.key}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={isOpen}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      onExited={processQueue}\n      ContentProps={{\n        classes: {\n          root: classes.root,\n        },\n      }}\n      message={\n        <span>{messageInfo.message ? messageInfo.message.text : null}</span>\n      }\n    />\n  );\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  getPushMessageFromChild: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ConsecutiveSnackbars);\n","export default [\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image1.jpg`,\n    name: \"Markus\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image2.jpg`,\n    name: \"David\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image3.jpg`,\n    name: \"Arold\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image4.jpg`,\n    name: \"Joanic\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image5.jpg`,\n    name: \"Sophia\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image6.jpg`,\n    name: \"Aaron\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image7.jpg`,\n    name: \"Steven\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image8.jpg`,\n    name: \"Felix\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image9.jpg`,\n    name: \"Vivien\",\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/images/logged_in/image10.jpg`,\n    name: \"Leonie\",\n  },\n];\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction LazyLoadAddBalanceDialog(props) {\n  const { open, onClose, onSuccess } = props;\n  const [AddBalanceDialog, setAddBalanceDialog] = useState(null);\n  const [hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog] = useState(false);\n\n  useEffect(() => {\n    if (open && !hasFetchedAddBalanceDialog) {\n      setHasFetchedAddBlanceDialog(true);\n      import(\"./AddBalanceDialog\").then(Component => {\n        setAddBalanceDialog(() => Component.default);\n      });\n    }\n  }, [open, hasFetchedAddBalanceDialog, setHasFetchedAddBlanceDialog, setAddBalanceDialog]);\n\n  return (\n    <Fragment>\n      {AddBalanceDialog && (\n        <AddBalanceDialog\n          open={open}\n          onClose={onClose}\n          onSuccess={onSuccess}\n        ></AddBalanceDialog>\n      )}\n    </Fragment>\n  );\n\n}\n\nLazyLoadAddBalanceDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired\n};\n\nexport default LazyLoadAddBalanceDialog;\n","import React, { memo, useCallback, useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core\";\nimport Routing from \"./Routing\";\nimport NavBar from \"./navigation/NavBar\";\nimport ConsecutiveSnackbarMessages from \"../../shared/components/ConsecutiveSnackbarMessages\";\nimport smoothScrollTop from \"../../shared/functions/smoothScrollTop\";\nimport persons from \"../dummy_data/persons\";\nimport LazyLoadAddBalanceDialog from \"./subscription/LazyLoadAddBalanceDialog\";\nimport {listFiles} from '../../store/action'\nimport {connect} from 'react-redux'\n\nimport {state_to_props} from '../../util/common_utils'\n\nconst styles = (theme) => ({\n  main: {\n    marginLeft: theme.spacing(9),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0,\n    },\n  },\n});\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction Main(props) {\n  const { classes } = props;\n  const [selectedTab, setSelectedTab] = useState(null);\n  const [CardChart, setCardChart] = useState(null);\n  const [hasFetchedCardChart, setHasFetchedCardChart] = useState(false);\n  const [EmojiTextArea, setEmojiTextArea] = useState(null);\n  const [hasFetchedEmojiTextArea, setHasFetchedEmojiTextArea] = useState(false);\n\n  const [hasFetchedImageCropper, setHasFetchedImageCropper] = useState(false);\n  const [Dropzone, setDropzone] = useState(null);\n  const [hasFetchedDropzone, setHasFetchedDropzone] = useState(false);\n  const [DateTimePicker, setDateTimePicker] = useState(null);\n  const [hasFetchedDateTimePicker, setHasFetchedDateTimePicker] = useState(\n    false\n  );\n  const [transactions, setTransactions] = useState([]);\n  const [statistics, setStatistics] = useState({ views: [], profit: [] });\n  const [posts, setPosts] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isAccountActivated, setIsAccountActivated] = useState(false);\n  const [isAddBalanceDialogOpen, setIsAddBalanceDialogOpen] = useState(false);\n  const [pushMessageToSnackbar, setPushMessageToSnackbar] = useState(null);\n\n  const fetchRandomTargets = useCallback(() => {\n    const targets = [];\n    for (let i = 0; i < 35; i += 1) {\n      const randomPerson = persons[Math.floor(Math.random() * persons.length)];\n      const target = {\n        id: i,\n        number1: Math.floor(Math.random() * 251),\n        number2: Math.floor(Math.random() * 251),\n        number3: Math.floor(Math.random() * 251),\n        number4: Math.floor(Math.random() * 251),\n        name: randomPerson.name,\n        profilePicUrl: randomPerson.src,\n        isActivated: Math.round(Math.random()) ? true : false,\n      };\n      targets.push(target);\n    }\n    setTargets(targets);\n  }, [setTargets]);\n\n  const openAddBalanceDialog = useCallback(() => {\n    setIsAddBalanceDialogOpen(true);\n  }, [setIsAddBalanceDialogOpen]);\n\n  const closeAddBalanceDialog = useCallback(() => {\n    setIsAddBalanceDialogOpen(false);\n  }, [setIsAddBalanceDialogOpen]);\n\n  const onPaymentSuccess = useCallback(() => {\n    pushMessageToSnackbar({\n      text: \"Your balance has been updated.\",\n    });\n    setIsAddBalanceDialogOpen(false);\n  }, [pushMessageToSnackbar, setIsAddBalanceDialogOpen]);\n\n  const fetchRandomStatistics = useCallback(() => {\n    const statistics = { profit: [], views: [] };\n    const iterations = 300;\n    const oneYearSeconds = 60 * 60 * 24 * 365;\n    let curProfit = Math.round(3000 + Math.random() * 1000);\n    let curViews = Math.round(3000 + Math.random() * 1000);\n    let curUnix = Math.round(new Date().getTime() / 1000) - oneYearSeconds;\n    for (let i = 0; i < iterations; i += 1) {\n      curUnix += Math.round(oneYearSeconds / iterations);\n      curProfit += Math.round((Math.random() * 2 - 1) * 10);\n      curViews += Math.round((Math.random() * 2 - 1) * 10);\n      statistics.profit.push({\n        value: curProfit,\n        timestamp: curUnix,\n      });\n      statistics.views.push({\n        value: curViews,\n        timestamp: curUnix,\n      });\n    }\n    setStatistics(statistics);\n  }, [setStatistics]);\n\n  const fetchRandomTransactions = useCallback(() => {\n    const transactions = [];\n    const iterations = 32;\n    const oneMonthSeconds = Math.round(60 * 60 * 24 * 30.5);\n    const transactionTemplates = [\n      {\n        description: \"Starter subscription\",\n        isSubscription: true,\n        balanceChange: -1499,\n      },\n      {\n        description: \"Premium subscription\",\n        isSubscription: true,\n        balanceChange: -2999,\n      },\n      {\n        description: \"Business subscription\",\n        isSubscription: true,\n        balanceChange: -4999,\n      },\n      {\n        description: \"Tycoon subscription\",\n        isSubscription: true,\n        balanceChange: -9999,\n      },\n      {\n        description: \"Added funds\",\n        isSubscription: false,\n        balanceChange: 2000,\n      },\n      {\n        description: \"Added funds\",\n        isSubscription: false,\n        balanceChange: 5000,\n      },\n    ];\n    let curUnix = Math.round(\n      new Date().getTime() / 1000 - iterations * oneMonthSeconds\n    );\n    for (let i = 0; i < iterations; i += 1) {\n      const randomTransactionTemplate =\n        transactionTemplates[\n          Math.floor(Math.random() * transactionTemplates.length)\n        ];\n      const transaction = {\n        id: i,\n        description: randomTransactionTemplate.description,\n        balanceChange: randomTransactionTemplate.balanceChange,\n        paidUntil: curUnix + oneMonthSeconds,\n        timestamp: curUnix,\n      };\n      curUnix += oneMonthSeconds;\n      transactions.push(transaction);\n    }\n    transactions.reverse();\n    setTransactions(transactions);\n  }, [setTransactions]);\n\n  const fetchRandomMessages = useCallback(() => {\n    shuffle(persons);\n    const messages = [];\n    const iterations = persons.length;\n    const oneDaySeconds = 60 * 60 * 24;\n    let curUnix = Math.round(\n      new Date().getTime() / 1000 - iterations * oneDaySeconds\n    );\n    for (let i = 0; i < iterations; i += 1) {\n      const person = persons[i];\n      const message = {\n        id: i,\n        src: person.src,\n        date: curUnix,\n        text: \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr sed.\",\n      };\n      curUnix += oneDaySeconds;\n      messages.push(message);\n    }\n    messages.reverse();\n    setMessages(messages);\n  }, [setMessages]);\n\n\n\n  const toggleAccountActivation = useCallback(() => {\n    if (pushMessageToSnackbar) {\n      if (isAccountActivated) {\n        pushMessageToSnackbar({\n          text: \"Your account is now deactivated.\",\n        });\n      } else {\n        pushMessageToSnackbar({\n          text: \"Your account is now activated.\",\n        });\n      }\n    }\n    setIsAccountActivated(!isAccountActivated);\n  }, [pushMessageToSnackbar, isAccountActivated, setIsAccountActivated]);\n\n  const selectDashboard = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"WaVer - Dashboard\";\n    setSelectedTab(\"Dashboard\");\n    if (!hasFetchedCardChart) {\n      setHasFetchedCardChart(true);\n      import(\"../../shared/components/CardChart\").then((Component) => {\n        setCardChart(Component.default);\n      });\n    }\n  }, [\n    setSelectedTab,\n    setCardChart,\n    hasFetchedCardChart,\n    setHasFetchedCardChart,\n  ]);\n\n  const selectPosts = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"WaVer - Posts\";\n    setSelectedTab(\"Posts\");\n    if (!hasFetchedEmojiTextArea) {\n      setHasFetchedEmojiTextArea(true);\n      import(\"../../shared/components/EmojiTextArea\").then((Component) => {\n        setEmojiTextArea(Component.default);\n      });\n    }\n\n    if (!hasFetchedDropzone) {\n      setHasFetchedDropzone(true);\n      import(\"../../shared/components/Dropzone\").then((Component) => {\n        setDropzone(Component.default);\n      });\n    }\n    if (!hasFetchedDateTimePicker) {\n      setHasFetchedDateTimePicker(true);\n      import(\"../../shared/components/DateTimePicker\").then((Component) => {\n        setDateTimePicker(Component.default);\n      });\n    }\n  }, [\n    setSelectedTab,\n    setEmojiTextArea,\n\n    setDropzone,\n    setDateTimePicker,\n    hasFetchedEmojiTextArea,\n    setHasFetchedEmojiTextArea,\n    hasFetchedImageCropper,\n    setHasFetchedImageCropper,\n    hasFetchedDropzone,\n    setHasFetchedDropzone,\n    hasFetchedDateTimePicker,\n    setHasFetchedDateTimePicker,\n  ]);\n\n  const selectSubscription = useCallback(() => {\n    smoothScrollTop();\n    document.title = \"WaVer - Subscription\";\n    setSelectedTab(\"Subscription\");\n  }, [setSelectedTab]);\n\n  const getPushMessageFromChild = useCallback(\n    (pushMessage) => {\n      setPushMessageToSnackbar(() => pushMessage);\n    },\n    [setPushMessageToSnackbar]\n  );\n\n  useEffect(() => {\n    fetchRandomTransactions();\n  }, [\n    fetchRandomTransactions,\n  ]);\n\n  return (\n    <Fragment>\n      <LazyLoadAddBalanceDialog\n        open={isAddBalanceDialogOpen}\n        onClose={closeAddBalanceDialog}\n        onSuccess={onPaymentSuccess}\n      />\n      <NavBar\n        selectedTab={selectedTab}\n        messages={messages}\n        openAddBalanceDialog={openAddBalanceDialog}\n      />\n      <ConsecutiveSnackbarMessages\n        getPushMessageFromChild={getPushMessageFromChild}\n      />\n      <main className={classNames(classes.main)}>\n        <Routing\n          isAccountActivated={isAccountActivated}\n          EmojiTextArea={EmojiTextArea}\n          CardChart={CardChart}\n          Dropzone={Dropzone}\n          DateTimePicker={DateTimePicker}\n          toggleAccountActivation={toggleAccountActivation}\n          pushMessageToSnackbar={pushMessageToSnackbar}\n          transactions={transactions}\n          statistics={statistics}\n  \n          targets={targets}\n          selectDashboard={selectDashboard}\n          selectPosts={selectPosts}\n          selectSubscription={selectSubscription}\n          openAddBalanceDialog={openAddBalanceDialog}\n          setTargets={setTargets}\n     \n        />\n      </main>\n    </Fragment>\n  );\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(memo(Main));\n"],"sourceRoot":""}